<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (3,872 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.08%)</title><rect x="10.0" y="1091.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="10.0" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::write_ref_array_work(MemRegion) (1 samples, 0.03%)</title><rect x="10.3" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1086.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.&lt;init&gt; (1 samples, 0.03%)</title><rect x="10.6" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,815 samples, 98.53%)</title><rect x="10.9" y="1091.0" width="1162.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.9" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>clojure/lang/AFn.run (5 samples, 0.13%)</title><rect x="10.9" y="1075.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="1086.0"></text>
</g>
<g>
<title>clojure/core/async/impl/concurrent$counted_thread_factory$reify__736$fn__737.invoke (5 samples, 0.13%)</title><rect x="10.9" y="1059.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.13%)</title><rect x="10.9" y="1043.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.13%)</title><rect x="10.9" y="1027.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.9" y="1038.0"></text>
</g>
<g>
<title>clojure/lang/AFn.run (5 samples, 0.13%)</title><rect x="10.9" y="1011.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.9" y="1022.0"></text>
</g>
<g>
<title>clojure/core/async/impl/channels/ManyToManyChannel$fn__833$fn__834.invoke (5 samples, 0.13%)</title><rect x="10.9" y="995.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="1006.0"></text>
</g>
<g>
<title>clojure/core/async$do_alts$fn__6163$fn__6166.invoke (5 samples, 0.13%)</title><rect x="10.9" y="979.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="990.0"></text>
</g>
<g>
<title>clojure/core/async$ioc_alts_BANG_$fn__6224.invoke (5 samples, 0.13%)</title><rect x="10.9" y="963.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.9" y="974.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invoke (5 samples, 0.13%)</title><rect x="10.9" y="947.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.9" y="958.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invokeStatic (5 samples, 0.13%)</title><rect x="10.9" y="931.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="942.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invoke (5 samples, 0.13%)</title><rect x="10.9" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invokeStatic (5 samples, 0.13%)</title><rect x="10.9" y="899.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8992$state_machine__5995__auto____9037.invoke (5 samples, 0.13%)</title><rect x="10.9" y="883.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="894.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8992$state_machine__5995__auto____9037$fn__9039.invoke (5 samples, 0.13%)</title><rect x="10.9" y="867.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Numbers.double_array (3 samples, 0.08%)</title><rect x="10.9" y="851.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.9" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Cons.next (1 samples, 0.03%)</title><rect x="10.9" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.9" y="846.0"></text>
</g>
<g>
<title>clojure/lang/RT.count (2 samples, 0.05%)</title><rect x="11.2" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>clojure/lang/RT.countFrom (2 samples, 0.05%)</title><rect x="11.2" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Cons.next (1 samples, 0.03%)</title><rect x="11.5" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="814.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (1 samples, 0.03%)</title><rect x="11.5" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="798.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.sval (1 samples, 0.03%)</title><rect x="11.5" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="782.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495$fn__5496.invoke (1 samples, 0.03%)</title><rect x="11.5" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="766.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495.invoke (1 samples, 0.03%)</title><rect x="11.5" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.5" y="750.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495$fn__5496.&lt;init&gt; (1 samples, 0.03%)</title><rect x="11.5" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.5" y="734.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invoke (1 samples, 0.03%)</title><rect x="11.8" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invokeStatic (1 samples, 0.03%)</title><rect x="11.8" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.8" y="846.0"></text>
</g>
<g>
<title>clojure/tools/logging/impl$fn__8629$G__8611__8640.invoke (1 samples, 0.03%)</title><rect x="11.8" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>clojure/tools/logging$eval136$fn__141.invoke (1 samples, 0.03%)</title><rect x="11.8" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.03%)</title><rect x="11.8" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.8" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.03%)</title><rect x="11.8" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.03%)</title><rect x="11.8" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.03%)</title><rect x="11.8" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="11.8" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="11.8" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.03%)</title><rect x="11.8" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.03%)</title><rect x="11.8" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.03%)</title><rect x="11.8" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.8" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.03%)</title><rect x="11.8" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.8" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.03%)</title><rect x="11.8" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.03%)</title><rect x="11.8" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.03%)</title><rect x="11.8" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.03%)</title><rect x="11.8" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.8" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.03%)</title><rect x="11.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.8" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.03%)</title><rect x="11.8" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.8" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="11.8" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="542.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="11.8" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.8" y="526.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="11.8" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.8" y="510.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="11.8" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.8" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.03%)</title><rect x="11.8" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.8" y="478.0"></text>
</g>
<g>
<title>java/util/Calendar.getDisplayName (1 samples, 0.03%)</title><rect x="11.8" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="462.0"></text>
</g>
<g>
<title>java/text/DateFormatSymbols.getInstance (1 samples, 0.03%)</title><rect x="11.8" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.8" y="446.0"></text>
</g>
<g>
<title>java/text/DateFormatSymbols.getProviderInstance (1 samples, 0.03%)</title><rect x="11.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.8" y="430.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DateFormatSymbolsProviderImpl.getInstance (1 samples, 0.03%)</title><rect x="11.8" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.03%)</title><rect x="12.1" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.doSort (1 samples, 0.03%)</title><rect x="12.1" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.1" y="798.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="782.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="766.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.1" y="750.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.1" y="734.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.1" y="718.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.1" y="702.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.1" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.1" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (1,398 samples, 36.11%)</title><rect x="12.4" y="1075.0" width="426.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="1086.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.run (7 samples, 0.18%)</title><rect x="12.4" y="1059.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.4" y="1070.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.processCancelledTasks (5 samples, 0.13%)</title><rect x="12.7" y="1043.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.7" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.transferTimeoutsToBuckets (1 samples, 0.03%)</title><rect x="14.3" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.3" y="1054.0"></text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1,391 samples, 35.92%)</title><rect x="14.6" y="1059.0" width="423.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.6" y="1070.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1,391 samples, 35.92%)</title><rect x="14.6" y="1043.0" width="423.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="1054.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (2 samples, 0.05%)</title><rect x="14.6" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.6" y="1038.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.run (2 samples, 0.05%)</title><rect x="14.6" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.6" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.runTask (2 samples, 0.05%)</title><rect x="14.6" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="1006.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/DefaultDriverConfigLoader$SingleThreaded$$Lambda$224/2102674239.run (2 samples, 0.05%)</title><rect x="14.6" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="990.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/DefaultDriverConfigLoader$SingleThreaded.reloadInBackground (2 samples, 0.05%)</title><rect x="14.6" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="974.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/DefaultDriverConfigLoader$SingleThreaded.reload (2 samples, 0.05%)</title><rect x="14.6" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="958.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/config/DriverConfigLoader$$Lambda$278/441867003.get (2 samples, 0.05%)</title><rect x="14.6" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="942.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/config/DriverConfigLoader.lambda$fromFile$1 (2 samples, 0.05%)</title><rect x="14.6" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.6" y="926.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.defaultReference (1 samples, 0.03%)</title><rect x="14.6" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.6" y="910.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl.defaultReference (1 samples, 0.03%)</title><rect x="14.6" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.6" y="894.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl.computeCachedConfig (1 samples, 0.03%)</title><rect x="14.6" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="878.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl$LoaderCache.getOrElseUpdate (1 samples, 0.03%)</title><rect x="14.6" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.6" y="862.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl$1.call (1 samples, 0.03%)</title><rect x="14.6" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl$1.call (1 samples, 0.03%)</title><rect x="14.6" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="830.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parse (1 samples, 0.03%)</title><rect x="14.6" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.6" y="814.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.6" y="798.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.6" y="782.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable$ParseableResources.rawParseValue (1 samples, 0.03%)</title><rect x="14.6" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="766.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable$ParseableResources.rawParseValue (1 samples, 0.03%)</title><rect x="14.6" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="750.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.6" y="734.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.6" y="718.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="702.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (1 samples, 0.03%)</title><rect x="14.6" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="686.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (1 samples, 0.03%)</title><rect x="14.6" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.6" y="670.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser.parse (1 samples, 0.03%)</title><rect x="14.6" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.6" y="654.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parse (1 samples, 0.03%)</title><rect x="14.6" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="638.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (1 samples, 0.03%)</title><rect x="14.6" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="622.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="606.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (1 samples, 0.03%)</title><rect x="14.6" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.6" y="590.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.6" y="574.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (1 samples, 0.03%)</title><rect x="14.6" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.6" y="558.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (1 samples, 0.03%)</title><rect x="14.6" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.6" y="542.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (1 samples, 0.03%)</title><rect x="14.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.6" y="526.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (1 samples, 0.03%)</title><rect x="14.9" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="910.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (1 samples, 0.03%)</title><rect x="14.9" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.9" y="894.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (1 samples, 0.03%)</title><rect x="14.9" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.9" y="878.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolveWith (1 samples, 0.03%)</title><rect x="14.9" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="862.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.03%)</title><rect x="14.9" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="846.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.03%)</title><rect x="14.9" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="830.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.03%)</title><rect x="14.9" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.9" y="814.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.03%)</title><rect x="14.9" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="798.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="782.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.9" y="766.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.03%)</title><rect x="14.9" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="750.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.03%)</title><rect x="14.9" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="734.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.03%)</title><rect x="14.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="718.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.9" y="702.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.9" y="686.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.03%)</title><rect x="14.9" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.9" y="670.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.03%)</title><rect x="14.9" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.9" y="654.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.03%)</title><rect x="14.9" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.9" y="638.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.9" y="622.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (1 samples, 0.03%)</title><rect x="14.9" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.9" y="606.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.03%)</title><rect x="14.9" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="590.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.03%)</title><rect x="14.9" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="574.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveMemos.get (1 samples, 0.03%)</title><rect x="14.9" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.9" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.03%)</title><rect x="14.9" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.9" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.9" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.9" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.9" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.03%)</title><rect x="14.9" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.9" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (1,388 samples, 35.85%)</title><rect x="15.2" y="1027.0" width="423.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.2" y="1038.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="17.6" y="1011.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="20.6" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="17.6" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="20.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (445 samples, 11.49%)</title><rect x="17.9" y="1011.0" width="135.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.9" y="1022.0">io/netty/channel/..</text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="17.9" y="995.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="20.9" y="1006.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="18.2" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.2" y="990.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="18.2" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.2" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="18.2" y="947.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.2" y="958.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="18.2" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.2" y="942.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="18.2" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.2" y="926.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="18.2" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.2" y="910.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="18.2" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="21.2" y="894.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="18.2" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.2" y="878.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="18.2" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.2" y="862.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="18.2" y="835.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.2" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="18.2" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.15%)</title><rect x="18.5" y="995.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="21.5" y="1006.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.08%)</title><rect x="19.4" y="979.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="22.4" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (434 samples, 11.21%)</title><rect x="20.4" y="995.0" width="132.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.4" y="1006.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (433 samples, 11.18%)</title><rect x="20.7" y="979.0" width="131.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.7" y="990.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (431 samples, 11.13%)</title><rect x="21.0" y="963.0" width="131.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.0" y="974.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="21.9" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.9" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.recvBufAllocHandle (2 samples, 0.05%)</title><rect x="22.2" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.2" y="958.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="22.5" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="25.5" y="942.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="22.5" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.5" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="22.5" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.5" y="910.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="22.5" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="25.5" y="894.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="22.5" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="25.5" y="878.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="22.5" y="851.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.5" y="862.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="22.5" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.5" y="846.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="22.5" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="25.5" y="830.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (1 samples, 0.03%)</title><rect x="22.5" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="25.5" y="814.0"></text>
</g>
<g>
<title>detach_buf?[virtio_ring] (1 samples, 0.03%)</title><rect x="22.5" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="25.5" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelConfig.getAllocator (6 samples, 0.15%)</title><rect x="22.8" y="947.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.8" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.touch (3 samples, 0.08%)</title><rect x="22.8" y="931.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="942.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="23.7" y="931.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.7" y="942.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="24.3" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.3" y="926.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="24.3" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.3" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="24.3" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.3" y="894.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="24.3" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.3" y="878.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="24.3" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.3" y="862.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="24.3" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="27.3" y="846.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="24.3" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.3" y="830.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="24.3" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.3" y="814.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="24.3" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.3" y="798.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="24.3" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.3" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="24.3" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.3" y="766.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="24.3" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="24.3" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="27.3" y="734.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="24.3" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.3" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="24.3" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.3" y="702.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="24.3" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.3" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="24.3" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.3" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="24.3" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="27.3" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="24.3" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.3" y="638.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="24.3" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.3" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="24.3" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.3" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="24.3" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="24.3" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.3" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (304 samples, 7.85%)</title><rect x="24.6" y="947.0" width="92.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.6" y="958.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (304 samples, 7.85%)</title><rect x="24.6" y="931.0" width="92.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.6" y="942.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (304 samples, 7.85%)</title><rect x="24.6" y="915.0" width="92.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.6" y="926.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (304 samples, 7.85%)</title><rect x="24.6" y="899.0" width="92.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.6" y="910.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (304 samples, 7.85%)</title><rect x="24.6" y="883.0" width="92.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.6" y="894.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (304 samples, 7.85%)</title><rect x="24.6" y="867.0" width="92.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.6" y="878.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.05%)</title><rect x="24.6" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (2 samples, 0.05%)</title><rect x="24.6" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.6" y="846.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="24.6" y="819.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="27.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (302 samples, 7.80%)</title><rect x="25.2" y="851.0" width="92.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.2" y="862.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (300 samples, 7.75%)</title><rect x="25.8" y="835.0" width="91.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.8" y="846.0">io/netty/ha..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (6 samples, 0.15%)</title><rect x="26.8" y="819.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.8" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (6 samples, 0.15%)</title><rect x="26.8" y="803.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.8" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (3 samples, 0.08%)</title><rect x="26.8" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.8" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (2 samples, 0.05%)</title><rect x="27.1" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (2 samples, 0.05%)</title><rect x="27.1" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.1" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (2 samples, 0.05%)</title><rect x="27.1" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.1" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.05%)</title><rect x="27.1" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.1" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (2 samples, 0.05%)</title><rect x="27.1" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (2 samples, 0.05%)</title><rect x="27.1" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (2 samples, 0.05%)</title><rect x="27.1" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.1" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (2 samples, 0.05%)</title><rect x="27.1" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (3 samples, 0.08%)</title><rect x="27.7" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.7" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (3 samples, 0.08%)</title><rect x="27.7" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.7" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (2 samples, 0.05%)</title><rect x="28.0" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.0" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (2 samples, 0.05%)</title><rect x="28.0" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.0" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (2 samples, 0.05%)</title><rect x="28.0" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.0" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.updateParentsFree (1 samples, 0.03%)</title><rect x="28.0" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.0" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.value (1 samples, 0.03%)</title><rect x="28.0" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offer (1 samples, 0.03%)</title><rect x="28.3" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offerLast (1 samples, 0.03%)</title><rect x="28.3" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.03%)</title><rect x="28.3" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.3" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="28.3" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.3" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="28.3" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="31.3" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="28.3" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.3" y="638.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="28.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.3" y="622.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="28.3" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.3" y="606.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="28.3" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="31.3" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (93 samples, 2.40%)</title><rect x="28.6" y="819.0" width="28.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.6" y="830.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.isReadable (1 samples, 0.03%)</title><rect x="29.8" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.isRemoved (1 samples, 0.03%)</title><rect x="30.1" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.1" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (87 samples, 2.25%)</title><rect x="30.4" y="803.0" width="26.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="814.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (87 samples, 2.25%)</title><rect x="30.4" y="787.0" width="26.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.4" y="798.0">i..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.decode (87 samples, 2.25%)</title><rect x="30.4" y="771.0" width="26.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.4" y="782.0">c..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.decode (74 samples, 1.91%)</title><rect x="30.4" y="755.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.4" y="766.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (50 samples, 1.29%)</title><rect x="31.3" y="739.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (50 samples, 1.29%)</title><rect x="31.3" y="723.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompressWithoutLength (47 samples, 1.21%)</title><rect x="31.3" y="707.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.decompressDirect (47 samples, 1.21%)</title><rect x="31.3" y="691.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (8 samples, 0.21%)</title><rect x="31.3" y="675.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.3" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readableBytes (3 samples, 0.08%)</title><rect x="31.3" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.3" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readerIndex (2 samples, 0.05%)</title><rect x="32.2" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.9" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.9" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="627.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.duplicateInternalNioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.9" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (3 samples, 0.08%)</title><rect x="32.9" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.9" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="32.9" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.9" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (16 samples, 0.41%)</title><rect x="33.8" y="675.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.8" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (16 samples, 0.41%)</title><rect x="33.8" y="659.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.8" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readByte (1 samples, 0.03%)</title><rect x="33.8" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (15 samples, 0.39%)</title><rect x="34.1" y="643.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.1" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (2 samples, 0.05%)</title><rect x="34.1" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.1" y="638.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (2 samples, 0.05%)</title><rect x="34.1" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.1" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (2 samples, 0.05%)</title><rect x="34.1" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.1" y="606.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (2 samples, 0.05%)</title><rect x="34.1" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.1" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (2 samples, 0.05%)</title><rect x="34.1" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.05%)</title><rect x="34.1" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="34.1" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="34.1" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.1" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.05%)</title><rect x="34.1" y="499.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="37.1" y="510.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.05%)</title><rect x="34.1" y="483.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="37.1" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.05%)</title><rect x="34.1" y="467.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.1" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.05%)</title><rect x="34.1" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="37.1" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="34.4" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.4" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="34.4" y="419.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="37.4" y="430.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="34.4" y="403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (13 samples, 0.34%)</title><rect x="34.7" y="627.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.7" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (2 samples, 0.05%)</title><rect x="34.7" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.7" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.05%)</title><rect x="34.7" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.7" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.05%)</title><rect x="34.7" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.7" y="590.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.05%)</title><rect x="34.7" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="574.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (2 samples, 0.05%)</title><rect x="34.7" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.7" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (11 samples, 0.28%)</title><rect x="35.3" y="611.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.3" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (11 samples, 0.28%)</title><rect x="35.3" y="595.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.3" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="35.9" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.9" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="35.9" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.9" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="35.9" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="38.9" y="558.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="35.9" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.9" y="542.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="35.9" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="38.9" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="35.9" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.9" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (8 samples, 0.21%)</title><rect x="36.2" y="579.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.2" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (8 samples, 0.21%)</title><rect x="36.2" y="563.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.2" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 0.03%)</title><rect x="37.1" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.1" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (1 samples, 0.03%)</title><rect x="37.4" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.4" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="37.4" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.4" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="37.4" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.03%)</title><rect x="37.4" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.4" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.03%)</title><rect x="37.4" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.4" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (1 samples, 0.03%)</title><rect x="37.4" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.4" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (3 samples, 0.08%)</title><rect x="37.7" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.7" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (2 samples, 0.05%)</title><rect x="37.7" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.7" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.03%)</title><rect x="38.3" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.3" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.readableBytes (1 samples, 0.03%)</title><rect x="38.6" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.6" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.03%)</title><rect x="38.6" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.6" y="670.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNIFastDecompressor.decompress (22 samples, 0.57%)</title><rect x="39.0" y="675.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.0" y="686.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_decompress_fast (21 samples, 0.54%)</title><rect x="39.3" y="659.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.3" y="670.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1decompress_1fast (9 samples, 0.23%)</title><rect x="39.6" y="643.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="42.6" y="654.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (5 samples, 0.13%)</title><rect x="40.5" y="627.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.5" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.239] (1 samples, 0.03%)</title><rect x="40.5" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="43.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.03%)</title><rect x="40.8" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.8" y="622.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (3 samples, 0.08%)</title><rect x="41.1" y="611.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.1" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.03%)</title><rect x="41.7" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="44.7" y="606.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (1 samples, 0.03%)</title><rect x="42.0" y="627.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="45.0" y="638.0"></text>
</g>
<g>
<title>LZ4_decompress_fast (5 samples, 0.13%)</title><rect x="42.3" y="643.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="45.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.13%)</title><rect x="43.8" y="643.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="46.8" y="654.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (5 samples, 0.13%)</title><rect x="43.8" y="627.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="46.8" y="638.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (1 samples, 0.03%)</title><rect x="45.4" y="643.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="48.4" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (3 samples, 0.08%)</title><rect x="45.7" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.7" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (8 samples, 0.21%)</title><rect x="46.6" y="739.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.6" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (6 samples, 0.15%)</title><rect x="46.9" y="723.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.9" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readByte (5 samples, 0.13%)</title><rect x="47.2" y="707.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (3 samples, 0.08%)</title><rect x="47.2" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (3 samples, 0.08%)</title><rect x="47.2" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (3 samples, 0.08%)</title><rect x="47.2" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (2 samples, 0.05%)</title><rect x="47.2" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.2" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (2 samples, 0.05%)</title><rect x="47.2" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.2" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readUnsignedShort (2 samples, 0.05%)</title><rect x="47.2" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.2" y="622.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="47.5" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.5" y="606.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="47.5" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.5" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="47.5" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.5" y="574.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="47.5" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.5" y="558.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="47.5" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.5" y="542.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="47.5" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.5" y="526.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="47.5" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="50.5" y="510.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="47.5" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="50.5" y="494.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="47.5" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.5" y="478.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="47.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="47.5" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="47.5" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="47.5" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.5" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="47.5" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.5" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="47.5" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.5" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="47.5" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="50.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="47.5" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="47.5" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.5" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="47.5" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.5" y="318.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="47.5" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="50.5" y="302.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.03%)</title><rect x="47.5" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.5" y="286.0"></text>
</g>
<g>
<title>tcp_transmit_skb (1 samples, 0.03%)</title><rect x="47.5" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="50.5" y="270.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="47.5" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.5" y="254.0"></text>
</g>
<g>
<title>ip_local_out_sk (1 samples, 0.03%)</title><rect x="47.5" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.5" y="238.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="47.5" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.5" y="222.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.unwrap (1 samples, 0.03%)</title><rect x="47.8" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.unwrap (1 samples, 0.03%)</title><rect x="47.8" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf._getByte (2 samples, 0.05%)</title><rect x="48.1" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.1" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._getByte (1 samples, 0.03%)</title><rect x="48.1" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.1" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="48.4" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="48.7" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="51.7" y="734.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="48.7" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="48.7" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.7" y="702.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="48.7" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.7" y="686.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="48.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.7" y="670.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="48.7" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="51.7" y="654.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="48.7" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="51.7" y="638.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="48.7" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.7" y="622.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="48.7" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.7" y="606.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="48.7" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.7" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="48.7" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.7" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="48.7" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="51.7" y="558.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="48.7" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.7" y="542.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="48.7" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.7" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="48.7" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="51.7" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="48.7" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.7" y="494.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="48.7" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.7" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="48.7" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.7" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="48.7" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.7" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="48.7" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.7" y="430.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="48.7" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.7" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="48.7" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="48.7" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="51.7" y="382.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (4 samples, 0.10%)</title><rect x="49.0" y="739.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (4 samples, 0.10%)</title><rect x="49.0" y="723.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.0" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (4 samples, 0.10%)</title><rect x="49.0" y="707.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.0" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (4 samples, 0.10%)</title><rect x="49.0" y="691.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.0" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (4 samples, 0.10%)</title><rect x="49.0" y="675.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.0" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (4 samples, 0.10%)</title><rect x="49.0" y="659.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.0" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (4 samples, 0.10%)</title><rect x="50.2" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (4 samples, 0.10%)</title><rect x="50.2" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (4 samples, 0.10%)</title><rect x="50.2" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.10%)</title><rect x="50.2" y="691.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (4 samples, 0.10%)</title><rect x="50.2" y="675.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (4 samples, 0.10%)</title><rect x="50.2" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (4 samples, 0.10%)</title><rect x="50.2" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.2" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.10%)</title><rect x="50.2" y="627.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.2" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (4 samples, 0.10%)</title><rect x="50.2" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.2" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (2 samples, 0.05%)</title><rect x="50.5" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.5" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (2 samples, 0.05%)</title><rect x="50.5" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (2 samples, 0.05%)</title><rect x="50.5" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.03%)</title><rect x="50.8" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (1 samples, 0.03%)</title><rect x="51.1" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="606.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.03%)</title><rect x="51.1" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBufferCount (4 samples, 0.10%)</title><rect x="51.4" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.4" y="750.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_decompress_fast (1 samples, 0.03%)</title><rect x="52.7" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.7" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (13 samples, 0.34%)</title><rect x="53.0" y="755.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.extractFrame (2 samples, 0.05%)</title><rect x="54.2" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.2" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.slice (1 samples, 0.03%)</title><rect x="54.5" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.5" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.5" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.5" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.5" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.5" y="638.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.03%)</title><rect x="54.5" y="611.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="57.5" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.getUnadjustedFrameLength (7 samples, 0.18%)</title><rect x="54.8" y="739.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.8" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.getUnsignedInt (1 samples, 0.03%)</title><rect x="55.4" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.4" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.getInt (1 samples, 0.03%)</title><rect x="55.4" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.4" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.03%)</title><rect x="55.4" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.4" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.03%)</title><rect x="55.4" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.4" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.03%)</title><rect x="55.4" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.4" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.03%)</title><rect x="55.4" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.4" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (3 samples, 0.08%)</title><rect x="55.7" y="723.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.7" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getInt (1 samples, 0.03%)</title><rect x="56.6" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.6" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (198 samples, 5.11%)</title><rect x="56.9" y="819.0" width="60.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.9" y="830.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (198 samples, 5.11%)</title><rect x="56.9" y="803.0" width="60.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.9" y="814.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (1 samples, 0.03%)</title><rect x="56.9" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.9" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (1 samples, 0.03%)</title><rect x="56.9" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="56.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="56.9" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="56.9" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.9" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (1 samples, 0.03%)</title><rect x="56.9" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.9" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (197 samples, 5.09%)</title><rect x="57.2" y="787.0" width="60.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.2" y="798.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (197 samples, 5.09%)</title><rect x="57.2" y="771.0" width="60.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.2" y="782.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelRead (197 samples, 5.09%)</title><rect x="57.2" y="755.0" width="60.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.2" y="766.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (197 samples, 5.09%)</title><rect x="57.2" y="739.0" width="60.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.2" y="750.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (1 samples, 0.03%)</title><rect x="57.2" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.2" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="57.2" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="57.2" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="57.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.2" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="57.2" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.2" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="57.2" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.2" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="57.2" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.2" y="638.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="57.2" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="60.2" y="622.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="57.2" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.2" y="606.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="57.2" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.2" y="590.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="57.2" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.2" y="574.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="57.2" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.2" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="57.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.2" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="57.2" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.2" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="57.2" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="60.2" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="57.2" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="57.2" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="57.2" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.2" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="57.2" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.2" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="57.2" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="57.2" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.2" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="57.2" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="57.2" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="60.2" y="382.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="57.2" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="60.2" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (196 samples, 5.06%)</title><rect x="57.5" y="723.0" width="59.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.5" y="734.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (195 samples, 5.04%)</title><rect x="57.5" y="707.0" width="59.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.5" y="718.0">io/net..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (195 samples, 5.04%)</title><rect x="57.5" y="691.0" width="59.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.5" y="702.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.release (4 samples, 0.10%)</title><rect x="57.5" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.remove (4 samples, 0.10%)</title><rect x="57.5" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.delete (4 samples, 0.10%)</title><rect x="57.5" y="643.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.03%)</title><rect x="58.5" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.5" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler$InitialPrepareCallback.onResponse (1 samples, 0.03%)</title><rect x="58.8" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.access$600 (1 samples, 0.03%)</title><rect x="58.8" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.8" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.setFinalResult (1 samples, 0.03%)</title><rect x="58.8" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/MapMakerInternalMap.put (1 samples, 0.03%)</title><rect x="58.8" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.onResponse (173 samples, 4.47%)</title><rect x="59.1" y="675.0" width="52.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.1" y="686.0">com/d..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.03%)</title><rect x="59.7" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.03%)</title><rect x="59.7" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.7" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.03%)</title><rect x="59.7" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.access$1700 (167 samples, 4.31%)</title><rect x="60.0" y="659.0" width="50.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.0" y="670.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (167 samples, 4.31%)</title><rect x="60.0" y="643.0" width="50.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.0" y="654.0">com/d..</text>
</g>
<g>
<title>com/datastax/dse/driver/internal/core/tracker/MultiplexingRequestTracker.onNodeSuccess (6 samples, 0.15%)</title><rect x="60.3" y="627.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.onNodeSuccess (4 samples, 0.10%)</title><rect x="60.3" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.updateResponseTimes (4 samples, 0.10%)</title><rect x="60.3" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.compute (4 samples, 0.10%)</title><rect x="60.3" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.3" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy$$Lambda$244/1827964113.apply (1 samples, 0.03%)</title><rect x="60.9" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.9" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.lambda$updateResponseTimes$0 (1 samples, 0.03%)</title><rect x="60.9" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.set (1 samples, 0.03%)</title><rect x="60.9" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.03%)</title><rect x="61.2" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.compute (1 samples, 0.03%)</title><rect x="61.5" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (1 samples, 0.03%)</title><rect x="61.8" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toResultSet (4 samples, 0.10%)</title><rect x="62.1" y="627.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.1" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultAsyncResultSet.empty (4 samples, 0.10%)</title><rect x="62.1" y="611.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.1" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultAsyncResultSet$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="63.0" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.0" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.buildExecutionInfo (5 samples, 0.13%)</title><rect x="63.3" y="627.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultExecutionInfo.&lt;init&gt; (4 samples, 0.10%)</title><rect x="63.6" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.6" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.cancelScheduledTasks (3 samples, 0.08%)</title><rect x="64.9" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.9" y="638.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.cancel (2 samples, 0.05%)</title><rect x="65.2" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.2" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (2 samples, 0.05%)</title><rect x="65.2" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (2 samples, 0.05%)</title><rect x="65.2" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.2" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (2 samples, 0.05%)</title><rect x="65.2" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (1 samples, 0.03%)</title><rect x="65.5" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (148 samples, 3.82%)</title><rect x="65.8" y="627.0" width="45.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (148 samples, 3.82%)</title><rect x="65.8" y="611.0" width="45.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.8" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (140 samples, 3.62%)</title><rect x="67.3" y="595.0" width="42.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.3" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (137 samples, 3.54%)</title><rect x="68.2" y="579.0" width="41.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.2" y="590.0">jav..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (137 samples, 3.54%)</title><rect x="68.2" y="563.0" width="41.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.2" y="574.0">sun..</text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (1 samples, 0.03%)</title><rect x="68.2" y="547.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="71.2" y="558.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="68.2" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="71.2" y="542.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="68.2" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.2" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="68.2" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.2" y="510.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="68.2" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="71.2" y="494.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="68.2" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.2" y="478.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="68.2" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.2" y="462.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="68.2" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="71.2" y="446.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="68.2" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.2" y="430.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="68.2" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="71.2" y="414.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="68.2" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="71.2" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="68.2" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.2" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="68.2" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="71.2" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="68.2" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="71.2" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="68.2" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.2" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="68.2" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.2" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="68.2" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.2" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="68.2" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="71.2" y="286.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.08%)</title><rect x="68.5" y="547.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="71.5" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark (132 samples, 3.41%)</title><rect x="69.4" y="547.0" width="40.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="72.4" y="558.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="69.4" y="531.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="72.4" y="542.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="70.0" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.0" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_signal (124 samples, 3.20%)</title><rect x="70.3" y="531.0" width="37.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.3" y="542.0">__p..</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="72.2" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.2" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="72.2" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.2" y="510.0"></text>
</g>
<g>
<title>system_call_fastpath (117 samples, 3.02%)</title><rect x="72.5" y="515.0" width="35.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.5" y="526.0">sys..</text>
</g>
<g>
<title>sys_futex (117 samples, 3.02%)</title><rect x="72.5" y="499.0" width="35.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.5" y="510.0">sys..</text>
</g>
<g>
<title>do_futex (117 samples, 3.02%)</title><rect x="72.5" y="483.0" width="35.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.5" y="494.0">do_..</text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.08%)</title><rect x="73.1" y="467.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.1" y="478.0"></text>
</g>
<g>
<title>futex_wake_op (112 samples, 2.89%)</title><rect x="74.0" y="467.0" width="34.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="77.0" y="478.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="75.5" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.5" y="462.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.05%)</title><rect x="75.5" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.5" y="446.0"></text>
</g>
<g>
<title>wake_up_q (105 samples, 2.71%)</title><rect x="76.1" y="451.0" width="32.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.1" y="462.0">wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="77.0" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.0" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (101 samples, 2.61%)</title><rect x="77.4" y="435.0" width="30.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="80.4" y="446.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (98 samples, 2.53%)</title><rect x="77.4" y="419.0" width="29.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.4" y="430.0">_r..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="107.2" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="110.2" y="430.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="107.2" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.2" y="414.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="107.2" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="107.2" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="107.2" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.2" y="366.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="107.2" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="107.2" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.2" y="334.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="107.2" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="110.2" y="318.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="107.2" y="291.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.2" y="302.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="107.2" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="107.2" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="107.2" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="107.2" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="107.2" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.03%)</title><rect x="107.2" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="110.2" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="107.2" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="107.2" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.2" y="174.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="107.5" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.5" y="430.0"></text>
</g>
<g>
<title>__irqentry_text_start (2 samples, 0.05%)</title><rect x="107.5" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.5" y="414.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="107.5" y="387.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.5" y="398.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.05%)</title><rect x="107.5" y="371.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="110.5" y="382.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.05%)</title><rect x="107.5" y="355.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.5" y="366.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.05%)</title><rect x="107.5" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="110.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="107.5" y="323.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.5" y="334.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.05%)</title><rect x="107.5" y="307.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="110.5" y="318.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.05%)</title><rect x="107.5" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.5" y="302.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.05%)</title><rect x="107.5" y="275.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="107.5" y="259.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.5" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="107.5" y="243.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="107.5" y="227.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="107.5" y="211.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="110.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="107.5" y="195.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="110.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="107.5" y="179.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="107.5" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="107.5" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="107.5" y="131.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="107.5" y="115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="107.5" y="99.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="110.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="107.5" y="83.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="107.5" y="67.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="107.8" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.8" y="126.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.10%)</title><rect x="108.1" y="531.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="111.1" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (1 samples, 0.03%)</title><rect x="109.3" y="531.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="112.3" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="109.7" y="547.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.05%)</title><rect x="110.0" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (1 samples, 0.03%)</title><rect x="110.3" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.03%)</title><rect x="110.3" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.3" y="574.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="110.6" y="595.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.03%)</title><rect x="110.9" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (1 samples, 0.03%)</title><rect x="111.2" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (1 samples, 0.03%)</title><rect x="111.2" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="111.2" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="111.2" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.2" y="622.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="111.5" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.5" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="111.5" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="114.5" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="111.5" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.5" y="638.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="111.5" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.5" y="622.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="111.5" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.5" y="606.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="111.5" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.5" y="590.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="111.5" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.5" y="574.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="111.5" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.5" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="111.5" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.5" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="111.5" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.5" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="111.5" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="111.5" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="114.5" y="494.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="111.5" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.5" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="111.5" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.5" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="111.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="114.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="111.5" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.5" y="430.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="111.5" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.5" y="414.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.get (10 samples, 0.26%)</title><rect x="111.8" y="675.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (7 samples, 0.18%)</title><rect x="112.4" y="659.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.4" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="114.2" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.2" y="654.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="114.2" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="117.2" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="114.2" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.2" y="622.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="114.2" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.2" y="606.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="114.2" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.2" y="590.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="114.2" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.2" y="574.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="114.2" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.2" y="558.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="114.2" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.2" y="542.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="114.2" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.2" y="526.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="114.2" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.2" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Maps.valueOrNull (1 samples, 0.03%)</title><rect x="114.5" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.18%)</title><rect x="114.8" y="675.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="115.4" y="659.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (3 samples, 0.08%)</title><rect x="115.4" y="643.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.08%)</title><rect x="115.4" y="627.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.4" y="638.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="116.4" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.4" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (2 samples, 0.05%)</title><rect x="116.4" y="643.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="119.4" y="654.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="116.4" y="627.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.4" y="638.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.05%)</title><rect x="116.4" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.4" y="622.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.05%)</title><rect x="116.4" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="119.4" y="606.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.05%)</title><rect x="116.4" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="119.4" y="590.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="116.4" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.4" y="574.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.05%)</title><rect x="116.4" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.4" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.05%)</title><rect x="116.4" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.4" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.05%)</title><rect x="116.4" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.4" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="116.4" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.4" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="116.4" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="119.4" y="494.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="116.4" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.4" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="116.4" y="451.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="119.4" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="116.4" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.4" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="116.4" y="419.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="119.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="116.4" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.4" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="116.4" y="387.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="119.4" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="116.4" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.4" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="116.4" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="119.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.05%)</title><rect x="116.4" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.4" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="116.4" y="323.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="119.4" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="116.4" y="307.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="119.4" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.03%)</title><rect x="117.0" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.0" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.03%)</title><rect x="117.0" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.0" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (1 samples, 0.03%)</title><rect x="117.0" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.0" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (9 samples, 0.23%)</title><rect x="117.3" y="947.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.3" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (9 samples, 0.23%)</title><rect x="117.3" y="931.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.3" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (9 samples, 0.23%)</title><rect x="117.3" y="915.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.3" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (9 samples, 0.23%)</title><rect x="117.3" y="899.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.3" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="883.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.3" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="867.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.3" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="851.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.3" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="835.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="819.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.18%)</title><rect x="117.3" y="787.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.3" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelReadComplete (6 samples, 0.15%)</title><rect x="117.6" y="771.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.6" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="117.6" y="755.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="120.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="117.6" y="739.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="120.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (5 samples, 0.13%)</title><rect x="117.9" y="755.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (5 samples, 0.13%)</title><rect x="117.9" y="739.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (5 samples, 0.13%)</title><rect x="117.9" y="723.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.9" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.channelReadComplete (2 samples, 0.05%)</title><rect x="118.2" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.handler (2 samples, 0.05%)</title><rect x="118.8" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="718.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="119.1" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.1" y="702.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="119.1" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.1" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="119.1" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.1" y="670.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="119.1" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.1" y="654.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="119.1" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.1" y="638.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="119.1" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.1" y="622.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="119.1" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.1" y="606.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="119.1" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.1" y="590.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="119.1" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.1" y="574.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="119.1" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.1" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="119.1" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.1" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="119.1" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.1" y="526.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="119.1" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.1" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="119.1" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="122.1" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="119.1" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="122.1" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="119.1" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.1" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="119.1" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.1" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="119.1" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.1" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="119.1" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.1" y="414.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="119.1" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.1" y="398.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="119.1" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="122.1" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="119.1" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.1" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="119.1" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.1" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (2 samples, 0.05%)</title><rect x="119.4" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.4" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (2 samples, 0.05%)</title><rect x="119.4" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (2 samples, 0.05%)</title><rect x="119.4" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.4" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (2 samples, 0.05%)</title><rect x="119.4" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (2 samples, 0.05%)</title><rect x="119.4" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.read (2 samples, 0.05%)</title><rect x="119.4" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.beginRead (2 samples, 0.05%)</title><rect x="119.4" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (2 samples, 0.05%)</title><rect x="119.4" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (2 samples, 0.05%)</title><rect x="119.4" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (25 samples, 0.65%)</title><rect x="120.0" y="947.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.0" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (25 samples, 0.65%)</title><rect x="120.0" y="931.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.0" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (25 samples, 0.65%)</title><rect x="120.0" y="915.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.0" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (25 samples, 0.65%)</title><rect x="120.0" y="899.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.0" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (25 samples, 0.65%)</title><rect x="120.0" y="883.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.0" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (6 samples, 0.15%)</title><rect x="120.0" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.0" y="878.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (2 samples, 0.05%)</title><rect x="121.2" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="862.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (2 samples, 0.05%)</title><rect x="121.2" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.2" y="846.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (1 samples, 0.03%)</title><rect x="121.2" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (1 samples, 0.03%)</title><rect x="121.2" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="121.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="121.2" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.2" y="782.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.threadLocalRandom (1 samples, 0.03%)</title><rect x="121.5" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.5" y="830.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent$2.current (1 samples, 0.03%)</title><rect x="121.5" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.current (1 samples, 0.03%)</title><rect x="121.5" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.5" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (15 samples, 0.39%)</title><rect x="121.8" y="867.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.8" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.discardMarks (1 samples, 0.03%)</title><rect x="122.5" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.5" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (3 samples, 0.08%)</title><rect x="122.8" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.8" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.05%)</title><rect x="123.1" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.1" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (2 samples, 0.05%)</title><rect x="123.1" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.1" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (2 samples, 0.05%)</title><rect x="123.1" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.1" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (1 samples, 0.03%)</title><rect x="123.4" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (1 samples, 0.03%)</title><rect x="123.4" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.4" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (9 samples, 0.23%)</title><rect x="123.7" y="851.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.7" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocateNormal (6 samples, 0.15%)</title><rect x="123.7" y="835.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.7" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.allocate (6 samples, 0.15%)</title><rect x="123.7" y="819.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.7" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocate (5 samples, 0.13%)</title><rect x="124.0" y="803.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.0" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateRun (2 samples, 0.05%)</title><rect x="124.3" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.3" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateNode (1 samples, 0.03%)</title><rect x="124.6" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.6" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollLast (2 samples, 0.05%)</title><rect x="124.9" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateNormal (2 samples, 0.05%)</title><rect x="125.5" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.5" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (2 samples, 0.05%)</title><rect x="125.5" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.5" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (2 samples, 0.05%)</title><rect x="125.5" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="126.1" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.1" y="846.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="126.1" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="129.1" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="126.1" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.1" y="814.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="126.1" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="129.1" y="798.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="126.1" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.1" y="782.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="126.1" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.1" y="766.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="126.1" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="129.1" y="750.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="126.1" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="129.1" y="734.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="126.1" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.1" y="718.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="126.1" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="129.1" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="126.1" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.1" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="126.1" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="129.1" y="670.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="126.1" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.1" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="126.1" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.1" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="126.1" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="129.1" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="126.1" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.1" y="606.0"></text>
</g>
<g>
<title>nf_iterate (1 samples, 0.03%)</title><rect x="126.1" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.1" y="590.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="126.1" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.1" y="574.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.03%)</title><rect x="126.1" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="129.1" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (4 samples, 0.10%)</title><rect x="126.4" y="867.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.4" y="878.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (3 samples, 0.08%)</title><rect x="126.4" y="851.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.4" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.03%)</title><rect x="127.3" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.reset (6 samples, 0.15%)</title><rect x="127.6" y="947.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.6" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (3 samples, 0.08%)</title><rect x="127.9" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.9" y="942.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.05%)</title><rect x="128.9" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.9" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.shouldBreakReadReady (5 samples, 0.13%)</title><rect x="129.5" y="947.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.5" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown0 (5 samples, 0.13%)</title><rect x="129.5" y="931.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.5" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown (5 samples, 0.13%)</title><rect x="129.5" y="915.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.5" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (2 samples, 0.05%)</title><rect x="130.1" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.03%)</title><rect x="130.7" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.7" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (70 samples, 1.81%)</title><rect x="131.0" y="947.0" width="21.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="958.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (70 samples, 1.81%)</title><rect x="131.0" y="931.0" width="21.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.0" y="942.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (1 samples, 0.03%)</title><rect x="131.0" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.03%)</title><rect x="131.0" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.03%)</title><rect x="131.0" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.03%)</title><rect x="131.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.0" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (69 samples, 1.78%)</title><rect x="131.3" y="915.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.3" y="926.0">i..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="131.3" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.3" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.03%)</title><rect x="131.3" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (68 samples, 1.76%)</title><rect x="131.6" y="899.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.6" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="132.5" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.5" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="132.5" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.5" y="878.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="132.8" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.8" y="894.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="132.8" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.8" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="132.8" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="135.8" y="862.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="132.8" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.8" y="846.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="132.8" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.8" y="830.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="132.8" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 1.47%)</title><rect x="133.1" y="883.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (57 samples, 1.47%)</title><rect x="133.1" y="867.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (56 samples, 1.45%)</title><rect x="133.4" y="851.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (56 samples, 1.45%)</title><rect x="133.4" y="835.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="846.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (47 samples, 1.21%)</title><rect x="134.9" y="819.0" width="14.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="137.9" y="830.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.03%)</title><rect x="136.8" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.8" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (40 samples, 1.03%)</title><rect x="137.1" y="803.0" width="12.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.1" y="814.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="137.1" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.1" y="798.0"></text>
</g>
<g>
<title>sys_read (39 samples, 1.01%)</title><rect x="137.4" y="787.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.4" y="798.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.08%)</title><rect x="137.7" y="771.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.7" y="782.0"></text>
</g>
<g>
<title>vfs_read (35 samples, 0.90%)</title><rect x="138.6" y="771.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="141.6" y="782.0"></text>
</g>
<g>
<title>do_sync_read (30 samples, 0.77%)</title><rect x="138.6" y="755.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="141.6" y="766.0"></text>
</g>
<g>
<title>sock_aio_read (30 samples, 0.77%)</title><rect x="138.6" y="739.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.6" y="750.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (30 samples, 0.77%)</title><rect x="138.6" y="723.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.6" y="734.0"></text>
</g>
<g>
<title>alloc_sock_iocb (1 samples, 0.03%)</title><rect x="138.6" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.6" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (27 samples, 0.70%)</title><rect x="138.9" y="707.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.9" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (1 samples, 0.03%)</title><rect x="139.2" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="139.5" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.5" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 0.59%)</title><rect x="140.1" y="691.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.26%)</title><rect x="140.7" y="675.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="143.7" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.15%)</title><rect x="140.7" y="659.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="143.7" y="670.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.15%)</title><rect x="140.7" y="643.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.7" y="654.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="142.3" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="145.3" y="638.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.51 (1 samples, 0.03%)</title><rect x="142.3" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.3" y="622.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.10%)</title><rect x="142.6" y="659.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.6" y="670.0"></text>
</g>
<g>
<title>page_frag_free (1 samples, 0.03%)</title><rect x="142.6" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.6" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="142.9" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.9" y="654.0"></text>
</g>
<g>
<title>compound_head.part.57 (1 samples, 0.03%)</title><rect x="142.9" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.9" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="143.2" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.2" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="143.2" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.2" y="638.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="143.5" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="143.8" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.8" y="686.0"></text>
</g>
<g>
<title>memcpy_toiovec (2 samples, 0.05%)</title><rect x="144.4" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.4" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (6 samples, 0.15%)</title><rect x="145.0" y="675.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="148.0" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="145.0" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="148.0" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="145.3" y="659.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="148.3" y="670.0"></text>
</g>
<g>
<title>memcpy_toiovec (2 samples, 0.05%)</title><rect x="146.2" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.2" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="146.2" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="146.5" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.5" y="638.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="146.8" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.8" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.05%)</title><rect x="147.1" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="150.1" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.10%)</title><rect x="147.7" y="755.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.7" y="766.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="147.7" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="150.7" y="750.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.08%)</title><rect x="148.1" y="739.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.1" y="750.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.05%)</title><rect x="148.4" y="723.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.4" y="734.0"></text>
</g>
<g>
<title>sock_aio_read (1 samples, 0.03%)</title><rect x="149.0" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.0" y="766.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="149.3" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="152.3" y="830.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.03%)</title><rect x="149.6" y="819.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="152.6" y="830.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="149.9" y="819.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="152.9" y="830.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="149.9" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.9" y="814.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="150.2" y="819.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="153.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.10%)</title><rect x="150.5" y="883.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.5" y="894.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.08%)</title><rect x="150.8" y="867.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="153.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureReadOpen (2 samples, 0.05%)</title><rect x="151.7" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.03%)</title><rect x="151.7" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.03%)</title><rect x="152.0" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.readyOps (1 samples, 0.03%)</title><rect x="152.3" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.ensureValid (1 samples, 0.03%)</title><rect x="152.3" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.3" y="958.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.08%)</title><rect x="152.6" y="995.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="155.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (271 samples, 7.00%)</title><rect x="153.5" y="1011.0" width="82.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.5" y="1022.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (270 samples, 6.97%)</title><rect x="153.8" y="995.0" width="82.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.8" y="1006.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (1 samples, 0.03%)</title><rect x="153.8" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.8" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (1 samples, 0.03%)</title><rect x="153.8" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.8" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.03%)</title><rect x="153.8" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (269 samples, 6.95%)</title><rect x="154.1" y="979.0" width="82.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.1" y="990.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (269 samples, 6.95%)</title><rect x="154.1" y="963.0" width="82.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.1" y="974.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (269 samples, 6.95%)</title><rect x="154.1" y="947.0" width="82.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.1" y="958.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (10 samples, 0.26%)</title><rect x="154.1" y="931.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.1" y="942.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.13%)</title><rect x="155.7" y="915.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.7" y="926.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.13%)</title><rect x="155.7" y="899.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.13%)</title><rect x="155.7" y="883.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (218 samples, 5.63%)</title><rect x="157.2" y="931.0" width="66.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.2" y="942.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (217 samples, 5.60%)</title><rect x="157.2" y="915.0" width="66.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.2" y="926.0">sun/nio..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPollArrayWrapper_epollWait (6 samples, 0.15%)</title><rect x="160.9" y="899.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="163.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="162.1" y="883.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="165.1" y="894.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="162.4" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.4" y="894.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="162.4" y="867.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.4" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="162.4" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="165.4" y="862.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="162.4" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="165.4" y="846.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="162.4" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.4" y="830.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="162.4" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.4" y="814.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="162.4" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.4" y="798.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="162.4" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.4" y="782.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="162.4" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="165.4" y="766.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="162.4" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.4" y="750.0"></text>
</g>
<g>
<title>inet_gro_receive (1 samples, 0.03%)</title><rect x="162.4" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="162.7" y="899.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="165.7" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="163.0" y="899.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="166.0" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="163.3" y="899.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="166.3" y="910.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.05%)</title><rect x="163.3" y="883.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="166.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (195 samples, 5.04%)</title><rect x="163.9" y="899.0" width="59.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="166.9" y="910.0">epoll_..</text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="167.6" y="883.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="170.6" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="167.9" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.9" y="894.0"></text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="168.2" y="883.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="171.2" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="168.2" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="171.2" y="878.0"></text>
</g>
<g>
<title>ret_from_sys_call (1 samples, 0.03%)</title><rect x="168.5" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="171.5" y="894.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.10%)</title><rect x="168.8" y="883.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.8" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.10%)</title><rect x="168.8" y="867.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.8" y="878.0"></text>
</g>
<g>
<title>sysret_signal (1 samples, 0.03%)</title><rect x="170.0" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="173.0" y="894.0"></text>
</g>
<g>
<title>system_call_fastpath (174 samples, 4.49%)</title><rect x="170.3" y="883.0" width="53.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.3" y="894.0">syste..</text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="170.9" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.9" y="878.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="171.2" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="174.2" y="878.0"></text>
</g>
<g>
<title>sys_epoll_wait (170 samples, 4.39%)</title><rect x="171.5" y="867.0" width="51.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="174.5" y="878.0">sys_e..</text>
</g>
<g>
<title>ep_poll (166 samples, 4.29%)</title><rect x="171.8" y="851.0" width="50.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.8" y="862.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="172.4" y="835.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.4" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (30 samples, 0.77%)</title><rect x="174.3" y="835.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.3" y="846.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.03%)</title><rect x="174.6" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="177.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="174.9" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="177.9" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="175.2" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.2" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.54%)</title><rect x="176.1" y="819.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.1" y="830.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="179.4" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.4" y="814.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.18%)</title><rect x="179.7" y="803.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="182.7" y="814.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="180.4" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="183.4" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.08%)</title><rect x="181.0" y="787.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.0" y="798.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="181.9" y="803.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="184.9" y="814.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.05%)</title><rect x="182.5" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.5" y="830.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="183.1" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="183.4" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="186.4" y="846.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.08%)</title><rect x="184.0" y="835.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.0" y="846.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.05%)</title><rect x="184.3" y="819.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.3" y="830.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.05%)</title><rect x="184.3" y="803.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.3" y="814.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="184.9" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.9" y="846.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="185.2" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="188.2" y="846.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="185.2" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.2" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="185.2" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.2" y="814.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="185.2" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="188.2" y="798.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="185.2" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.2" y="782.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="185.2" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.2" y="766.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="185.2" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="188.2" y="750.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="185.2" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="188.2" y="734.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="185.2" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.2" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="185.2" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.2" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (114 samples, 2.94%)</title><rect x="185.5" y="835.0" width="34.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.5" y="846.0">sc..</text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="185.5" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.5" y="830.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="185.8" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.8" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (112 samples, 2.89%)</title><rect x="186.1" y="819.0" width="34.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="189.1" y="830.0">sc..</text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.05%)</title><rect x="186.5" y="803.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.5" y="814.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (13 samples, 0.34%)</title><rect x="187.1" y="803.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="190.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.31%)</title><rect x="187.1" y="787.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.1" y="798.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.20 (1 samples, 0.03%)</title><rect x="190.7" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.7" y="798.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (8 samples, 0.21%)</title><rect x="191.0" y="803.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="194.0" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="191.3" y="787.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.3" y="798.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.03%)</title><rect x="193.2" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.2" y="798.0"></text>
</g>
<g>
<title>schedule (88 samples, 2.27%)</title><rect x="193.5" y="803.0" width="26.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="196.5" y="814.0">s..</text>
</g>
<g>
<title>__schedule (86 samples, 2.22%)</title><rect x="193.8" y="787.0" width="26.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.8" y="798.0">_..</text>
</g>
<g>
<title>finish_task_switch (80 samples, 2.07%)</title><rect x="194.1" y="771.0" width="24.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="197.1" y="782.0">f..</text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="218.5" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.5" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (4 samples, 0.10%)</title><rect x="218.8" y="771.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.8" y="782.0"></text>
</g>
<g>
<title>__irqentry_text_start (4 samples, 0.10%)</title><rect x="218.8" y="755.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.8" y="766.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.10%)</title><rect x="218.8" y="739.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.8" y="750.0"></text>
</g>
<g>
<title>do_softirq (4 samples, 0.10%)</title><rect x="218.8" y="723.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.8" y="734.0"></text>
</g>
<g>
<title>call_softirq (4 samples, 0.10%)</title><rect x="218.8" y="707.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="221.8" y="718.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 0.10%)</title><rect x="218.8" y="691.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.8" y="702.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.10%)</title><rect x="218.8" y="675.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="221.8" y="686.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (4 samples, 0.10%)</title><rect x="218.8" y="659.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.8" y="670.0"></text>
</g>
<g>
<title>napi_gro_receive (4 samples, 0.10%)</title><rect x="218.8" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.8" y="654.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="218.8" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="221.8" y="638.0"></text>
</g>
<g>
<title>inet_gro_receive (1 samples, 0.03%)</title><rect x="218.8" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.8" y="622.0"></text>
</g>
<g>
<title>tcp4_gro_receive (1 samples, 0.03%)</title><rect x="218.8" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.8" y="606.0"></text>
</g>
<g>
<title>__skb_gro_checksum_complete (1 samples, 0.03%)</title><rect x="218.8" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.8" y="590.0"></text>
</g>
<g>
<title>skb_checksum (1 samples, 0.03%)</title><rect x="218.8" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.8" y="574.0"></text>
</g>
<g>
<title>__skb_checksum (1 samples, 0.03%)</title><rect x="218.8" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="221.8" y="558.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (3 samples, 0.08%)</title><rect x="219.1" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="219.1" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="219.1" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="606.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="219.1" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.1" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="219.1" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="222.1" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="219.1" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.1" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="219.1" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="222.1" y="542.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="219.1" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="222.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.03%)</title><rect x="219.4" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.4" y="558.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="219.4" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.4" y="542.0"></text>
</g>
<g>
<title>skb_defer_rx_timestamp (1 samples, 0.03%)</title><rect x="219.7" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.7" y="622.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="220.0" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="223.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="220.3" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="223.3" y="846.0"></text>
</g>
<g>
<title>select_estimate_accuracy (4 samples, 0.10%)</title><rect x="220.9" y="835.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="223.9" y="846.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="221.8" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="224.8" y="830.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="221.8" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.8" y="814.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.03%)</title><rect x="221.8" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="224.8" y="798.0"></text>
</g>
<g>
<title>timespec_add_safe (1 samples, 0.03%)</title><rect x="222.1" y="835.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="225.1" y="846.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="222.4" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.4" y="862.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="223.0" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (1 samples, 0.03%)</title><rect x="223.3" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.updateSelectedKeys (6 samples, 0.15%)</title><rect x="223.6" y="931.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="223.9" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="223.9" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.03%)</title><rect x="223.9" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.getEventOps (1 samples, 0.03%)</title><rect x="224.2" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioInterestOps (1 samples, 0.03%)</title><rect x="224.5" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.05%)</title><rect x="224.9" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.03%)</title><rect x="225.2" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (35 samples, 0.90%)</title><rect x="225.5" y="931.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (30 samples, 0.77%)</title><rect x="225.5" y="915.0" width="9.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="228.5" y="926.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.03%)</title><rect x="226.1" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="229.1" y="910.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.03%)</title><rect x="226.4" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.4" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="226.4" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.4" y="894.0"></text>
</g>
<g>
<title>system_call_fastpath (26 samples, 0.67%)</title><rect x="226.7" y="899.0" width="7.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.7" y="910.0"></text>
</g>
<g>
<title>sys_read (25 samples, 0.65%)</title><rect x="227.0" y="883.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.0" y="894.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.05%)</title><rect x="227.0" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="230.0" y="878.0"></text>
</g>
<g>
<title>vfs_read (23 samples, 0.59%)</title><rect x="227.6" y="867.0" width="7.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="230.6" y="878.0"></text>
</g>
<g>
<title>do_sync_read (20 samples, 0.52%)</title><rect x="227.6" y="851.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.6" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="227.6" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.6" y="846.0"></text>
</g>
<g>
<title>_copy_to_user (1 samples, 0.03%)</title><rect x="227.9" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.9" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="228.2" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="231.2" y="846.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (1 samples, 0.03%)</title><rect x="228.5" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="231.5" y="846.0"></text>
</g>
<g>
<title>pipe_read (15 samples, 0.39%)</title><rect x="228.8" y="835.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.8" y="846.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="230.0" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.0" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="230.3" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.3" y="814.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="230.6" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="233.6" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.08%)</title><rect x="230.9" y="819.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.9" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="230.9" y="803.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="233.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="230.9" y="787.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.9" y="798.0"></text>
</g>
<g>
<title>current_fs_time (1 samples, 0.03%)</title><rect x="231.9" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.9" y="830.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.10%)</title><rect x="232.2" y="819.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.2" y="830.0"></text>
</g>
<g>
<title>update_time (1 samples, 0.03%)</title><rect x="233.1" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.1" y="814.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="233.1" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.1" y="798.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="233.4" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.4" y="846.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="233.4" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.4" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="233.4" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.4" y="814.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="233.4" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.4" y="798.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="233.4" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.4" y="782.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="233.4" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="236.4" y="766.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="233.4" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.4" y="750.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="233.4" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.4" y="734.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="233.4" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="236.4" y="718.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="233.4" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.4" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="233.4" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="236.4" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="233.4" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.4" y="670.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="233.4" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.4" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="233.4" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.4" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="233.4" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.4" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="233.4" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="236.4" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="233.4" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.4" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="233.4" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="236.4" y="574.0"></text>
</g>
<g>
<title>tcp_parse_aligned_timestamp.part.40 (1 samples, 0.03%)</title><rect x="233.4" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="236.4" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.08%)</title><rect x="233.7" y="851.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="236.7" y="862.0"></text>
</g>
<g>
<title>cap_file_permission (1 samples, 0.03%)</title><rect x="234.0" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.0" y="846.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="234.3" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.3" y="846.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="234.3" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="237.3" y="830.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.03%)</title><rect x="234.6" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="237.6" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="234.6" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="237.6" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="234.6" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.6" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="234.6" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="237.6" y="878.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="234.6" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.6" y="862.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="234.6" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.6" y="846.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="234.6" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.6" y="830.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="234.6" y="803.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="237.6" y="814.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.03%)</title><rect x="234.6" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.6" y="798.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="234.6" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.6" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="234.6" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="234.6" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.6" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="234.9" y="915.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="237.9" y="926.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="235.2" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="238.2" y="926.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="235.2" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.2" y="910.0"></text>
</g>
<g>
<title>read@plt (2 samples, 0.05%)</title><rect x="235.5" y="915.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="238.5" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.nextScheduledTaskDeadlineNanos (1 samples, 0.03%)</title><rect x="236.1" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.1" y="1022.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (1 samples, 0.03%)</title><rect x="236.1" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (661 samples, 17.07%)</title><rect x="236.4" y="1011.0" width="201.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.4" y="1022.0">io/netty/util/concurrent/S..</text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.afterRunningAllTasks (1 samples, 0.03%)</title><rect x="236.7" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.7" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasksFrom (1 samples, 0.03%)</title><rect x="236.7" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.7" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (1 samples, 0.03%)</title><rect x="236.7" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.7" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (1 samples, 0.03%)</title><rect x="236.7" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.7" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (1 samples, 0.03%)</title><rect x="236.7" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.7" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.lvRefElement (1 samples, 0.03%)</title><rect x="236.7" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.7" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (629 samples, 16.24%)</title><rect x="237.0" y="995.0" width="191.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.0" y="1006.0">io/netty/util/concurrent/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$175/620978613.run (621 samples, 16.04%)</title><rect x="237.3" y="979.0" width="189.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.3" y="990.0">com/datastax/oss/driver/i..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (620 samples, 16.01%)</title><rect x="237.3" y="963.0" width="189.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.3" y="974.0">com/datastax/oss/driver/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Write.access$200 (1 samples, 0.03%)</title><rect x="237.6" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.6" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (335 samples, 8.65%)</title><rect x="238.0" y="947.0" width="102.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.0" y="958.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (335 samples, 8.65%)</title><rect x="238.0" y="931.0" width="102.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.0" y="942.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (335 samples, 8.65%)</title><rect x="238.0" y="915.0" width="102.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.0" y="926.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="238.0" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.0" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.03%)</title><rect x="238.0" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.0" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.03%)</title><rect x="238.3" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.3" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (1 samples, 0.03%)</title><rect x="238.3" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.3" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="238.3" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.3" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.03%)</title><rect x="238.3" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.channel (1 samples, 0.03%)</title><rect x="238.3" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (333 samples, 8.60%)</title><rect x="238.6" y="899.0" width="101.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.6" y="910.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (333 samples, 8.60%)</title><rect x="238.6" y="883.0" width="101.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.6" y="894.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (331 samples, 8.55%)</title><rect x="238.6" y="867.0" width="100.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.6" y="878.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (331 samples, 8.55%)</title><rect x="238.6" y="851.0" width="100.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.6" y="862.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (331 samples, 8.55%)</title><rect x="238.6" y="835.0" width="100.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.6" y="846.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (330 samples, 8.52%)</title><rect x="238.6" y="819.0" width="100.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.6" y="830.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (329 samples, 8.50%)</title><rect x="238.6" y="803.0" width="100.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.6" y="814.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (18 samples, 0.46%)</title><rect x="240.1" y="787.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.1" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedCompositeByteBuf.nioBufferCount (1 samples, 0.03%)</title><rect x="240.1" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.1" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="240.1" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.1" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="240.1" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.1" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="240.1" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="240.1" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="240.1" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="243.1" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="240.1" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="240.1" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="243.1" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="240.1" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.1" y="654.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="240.1" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="638.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="240.1" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="240.1" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.1" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="240.1" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.1" y="590.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="240.1" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="243.1" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="240.1" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.1" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="240.1" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.1" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="240.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="240.1" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="240.1" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.1" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="240.1" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.1" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="240.1" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="243.1" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="240.1" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="243.1" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="240.1" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="243.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="240.1" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.1" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (17 samples, 0.44%)</title><rect x="240.4" y="771.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.4" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (16 samples, 0.41%)</title><rect x="240.7" y="755.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.7" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (12 samples, 0.31%)</title><rect x="241.9" y="739.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.toComponentIndex0 (1 samples, 0.03%)</title><rect x="242.2" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (3 samples, 0.08%)</title><rect x="242.5" y="723.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.duplicateInternalNioBuffer (2 samples, 0.05%)</title><rect x="242.5" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.5" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="242.8" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="242.8" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.8" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.slice (1 samples, 0.03%)</title><rect x="243.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/RecyclableArrayList.newInstance (7 samples, 0.18%)</title><rect x="243.4" y="723.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.4" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="243.4" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.4" y="718.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="243.4" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.4" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.03%)</title><rect x="243.4" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacity (6 samples, 0.15%)</title><rect x="243.7" y="707.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (6 samples, 0.15%)</title><rect x="243.7" y="691.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.7" y="702.0"></text>
</g>
<g>
<title>BarrierSet::static_write_ref_array_post(HeapWord*, unsigned long) (4 samples, 0.10%)</title><rect x="244.0" y="675.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="247.0" y="686.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="245.3" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="248.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (56 samples, 1.45%)</title><rect x="245.6" y="787.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (2 samples, 0.05%)</title><rect x="246.2" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.2" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.05%)</title><rect x="246.2" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.2" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.current (3 samples, 0.08%)</title><rect x="246.8" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.8" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (3 samples, 0.08%)</title><rect x="246.8" y="755.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.8" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.progress (3 samples, 0.08%)</title><rect x="247.7" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.7" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (46 samples, 1.19%)</title><rect x="248.6" y="771.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (25 samples, 0.65%)</title><rect x="248.6" y="755.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="766.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (25 samples, 0.65%)</title><rect x="248.6" y="739.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.6" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (25 samples, 0.65%)</title><rect x="248.6" y="723.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.6" y="734.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (25 samples, 0.65%)</title><rect x="248.6" y="707.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.6" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (25 samples, 0.65%)</title><rect x="248.6" y="691.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.6" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (24 samples, 0.62%)</title><rect x="248.9" y="675.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.9" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.03%)</title><rect x="248.9" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.9" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (23 samples, 0.59%)</title><rect x="249.2" y="659.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.2" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners0 (21 samples, 0.54%)</title><rect x="249.8" y="643.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler$$Lambda$166/74477970.operationComplete (2 samples, 0.05%)</title><rect x="249.8" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (1 samples, 0.03%)</title><rect x="250.4" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (14 samples, 0.36%)</title><rect x="250.8" y="627.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (14 samples, 0.36%)</title><rect x="250.8" y="611.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.8" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.03%)</title><rect x="250.8" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.8" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.03%)</title><rect x="250.8" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.8" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.scheduleSpeculativeExecution (5 samples, 0.13%)</title><rect x="251.1" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.1" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.03%)</title><rect x="251.1" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.1" y="590.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (4 samples, 0.10%)</title><rect x="251.4" y="579.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.4" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.03%)</title><rect x="252.3" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.3" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.03%)</title><rect x="252.3" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.3" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.03%)</title><rect x="252.3" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (8 samples, 0.21%)</title><rect x="252.6" y="595.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.setArray (2 samples, 0.05%)</title><rect x="254.1" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.1" y="590.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="254.7" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="257.7" y="590.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="254.7" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.7" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="254.7" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.7" y="558.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="254.7" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.7" y="542.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="254.7" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.7" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="254.7" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.7" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="254.7" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.7" y="494.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="254.7" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.7" y="478.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="254.7" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.7" y="462.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="254.7" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="257.7" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="254.7" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="257.7" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="254.7" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.7" y="414.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="254.7" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.7" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="254.7" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.7" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="254.7" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.7" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="254.7" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="254.7" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.7" y="334.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="255.0" y="627.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="258.0" y="638.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (18 samples, 0.46%)</title><rect x="256.2" y="755.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.2" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (18 samples, 0.46%)</title><rect x="256.2" y="739.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.2" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (18 samples, 0.46%)</title><rect x="256.2" y="723.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (18 samples, 0.46%)</title><rect x="256.2" y="707.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (17 samples, 0.44%)</title><rect x="256.2" y="691.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (17 samples, 0.44%)</title><rect x="256.2" y="675.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (17 samples, 0.44%)</title><rect x="256.2" y="659.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (13 samples, 0.34%)</title><rect x="256.2" y="643.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.2" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (13 samples, 0.34%)</title><rect x="256.2" y="627.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.2" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (12 samples, 0.31%)</title><rect x="256.2" y="611.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.2" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (10 samples, 0.26%)</title><rect x="256.2" y="595.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.2" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (9 samples, 0.23%)</title><rect x="256.2" y="579.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.2" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (3 samples, 0.08%)</title><rect x="256.2" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.dropHandle (2 samples, 0.05%)</title><rect x="256.2" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.2" y="558.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="256.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="259.5" y="542.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="256.5" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="259.5" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="256.5" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="259.5" y="510.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="256.5" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.5" y="494.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="256.5" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.5" y="478.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="256.5" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="259.5" y="462.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="256.5" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.5" y="446.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="256.5" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.5" y="430.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="256.5" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="259.5" y="414.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="256.5" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.5" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="256.5" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="259.5" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="256.5" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="256.5" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="259.5" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="256.5" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.5" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="256.5" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="259.5" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="256.5" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.5" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="256.5" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.5" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="256.5" y="259.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="259.5" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="256.5" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.5" y="254.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="256.5" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="259.5" y="238.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (1 samples, 0.03%)</title><rect x="256.8" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.8" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (6 samples, 0.15%)</title><rect x="257.2" y="563.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (1 samples, 0.03%)</title><rect x="257.2" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.2" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerLimitField.lvProducerLimit (2 samples, 0.05%)</title><rect x="257.5" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.5" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (3 samples, 0.08%)</title><rect x="258.1" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.1" y="558.0"></text>
</g>
<g>
<title>g1_post_barrier_slow Runtime1 stub (1 samples, 0.03%)</title><rect x="258.7" y="531.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="261.7" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.03%)</title><rect x="259.0" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.0" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.03%)</title><rect x="259.0" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (2 samples, 0.05%)</title><rect x="259.3" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.3" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (1 samples, 0.03%)</title><rect x="259.9" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.9" y="622.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.03%)</title><rect x="259.9" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.9" y="606.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (1 samples, 0.03%)</title><rect x="259.9" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.9" y="590.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (1 samples, 0.03%)</title><rect x="259.9" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.dropHandle (1 samples, 0.03%)</title><rect x="259.9" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.9" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (4 samples, 0.10%)</title><rect x="260.2" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.2" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.tryFinalRelease0 (3 samples, 0.08%)</title><rect x="260.5" y="627.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (3 samples, 0.08%)</title><rect x="260.5" y="611.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.isDirect (1 samples, 0.03%)</title><rect x="260.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.5" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (1 samples, 0.03%)</title><rect x="260.8" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (1 samples, 0.03%)</title><rect x="261.1" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.1" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="261.1" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.1" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.lvProducerIndex (1 samples, 0.03%)</title><rect x="261.4" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.4" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (3 samples, 0.08%)</title><rect x="261.7" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (250 samples, 6.46%)</title><rect x="262.6" y="787.0" width="76.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.6" y="798.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.05%)</title><rect x="263.6" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="263.6" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.6" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="263.9" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (239 samples, 6.17%)</title><rect x="264.2" y="771.0" width="72.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.2" y="782.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="264.8" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (5 samples, 0.13%)</title><rect x="265.1" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.10%)</title><rect x="265.4" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.03%)</title><rect x="266.3" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="266.3" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.3" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="266.3" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.getBuffer (1 samples, 0.03%)</title><rect x="266.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.putBase (1 samples, 0.03%)</title><rect x="266.9" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeObject.putLong (1 samples, 0.03%)</title><rect x="266.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (229 samples, 5.91%)</title><rect x="267.2" y="755.0" width="69.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.2" y="766.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (229 samples, 5.91%)</title><rect x="267.2" y="739.0" width="69.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.2" y="750.0">sun/nio..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="267.2" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="270.2" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="267.5" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="270.5" y="734.0"></text>
</g>
<g>
<title>__libc_writev (227 samples, 5.86%)</title><rect x="267.8" y="723.0" width="69.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="270.8" y="734.0">__libc_..</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="269.6" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.6" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="269.6" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.6" y="702.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.03%)</title><rect x="270.0" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.0" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="270.0" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.0" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (219 samples, 5.66%)</title><rect x="270.3" y="707.0" width="66.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.3" y="718.0">system_..</text>
</g>
<g>
<title>sys_writev (219 samples, 5.66%)</title><rect x="270.3" y="691.0" width="66.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.3" y="702.0">sys_wri..</text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="270.3" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.3" y="686.0"></text>
</g>
<g>
<title>vfs_writev (218 samples, 5.63%)</title><rect x="270.6" y="675.0" width="66.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="273.6" y="686.0">vfs_wri..</text>
</g>
<g>
<title>do_readv_writev (217 samples, 5.60%)</title><rect x="270.9" y="659.0" width="66.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.9" y="670.0">do_read..</text>
</g>
<g>
<title>do_sync_readv_writev (210 samples, 5.42%)</title><rect x="272.1" y="643.0" width="64.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.1" y="654.0">do_sync..</text>
</g>
<g>
<title>sock_aio_write (209 samples, 5.40%)</title><rect x="272.4" y="627.0" width="63.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.4" y="638.0">sock_ai..</text>
</g>
<g>
<title>inet_sendmsg (207 samples, 5.35%)</title><rect x="272.7" y="611.0" width="63.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.7" y="622.0">inet_se..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.10%)</title><rect x="273.3" y="595.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.3" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="274.5" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.5" y="606.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="275.1" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.1" y="606.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="275.1" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.1" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="275.1" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.1" y="574.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="275.1" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.1" y="558.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="275.1" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.1" y="542.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="275.1" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.1" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="275.4" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (196 samples, 5.06%)</title><rect x="275.7" y="595.0" width="59.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.7" y="606.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="276.4" y="579.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="279.4" y="590.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="276.7" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="279.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="277.0" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="280.0" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="277.3" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.3" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="277.3" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="280.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.10%)</title><rect x="277.6" y="579.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.10%)</title><rect x="277.6" y="563.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="280.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (1 samples, 0.03%)</title><rect x="278.2" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="278.2" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.2" y="542.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="278.5" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="281.5" y="558.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="278.5" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.5" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="278.5" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.5" y="526.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="278.5" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="281.5" y="510.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="278.5" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.5" y="494.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="278.5" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="281.5" y="478.0"></text>
</g>
<g>
<title>tcp_push (181 samples, 4.67%)</title><rect x="278.8" y="579.0" width="55.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.8" y="590.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (180 samples, 4.65%)</title><rect x="279.1" y="563.0" width="54.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="282.1" y="574.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (178 samples, 4.60%)</title><rect x="279.7" y="547.0" width="54.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="282.7" y="558.0">tcp_w..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="280.9" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="283.9" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="281.2" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.15%)</title><rect x="281.5" y="531.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="281.8" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="284.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.08%)</title><rect x="282.4" y="515.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="285.4" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="282.4" y="499.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.4" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.08%)</title><rect x="282.4" y="483.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="282.4" y="467.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.4" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.08%)</title><rect x="283.4" y="531.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.4" y="542.0"></text>
</g>
<g>
<title>tcp_transmit_skb (163 samples, 4.21%)</title><rect x="284.3" y="531.0" width="49.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.3" y="542.0">tcp_t..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="287.0" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (147 samples, 3.80%)</title><rect x="287.3" y="515.0" width="44.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.3" y="526.0">ip_q..</text>
</g>
<g>
<title>ip_local_out_sk (143 samples, 3.69%)</title><rect x="287.3" y="499.0" width="43.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.3" y="510.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out_sk (7 samples, 0.18%)</title><rect x="287.3" y="483.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.18%)</title><rect x="287.3" y="467.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="287.3" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>nf_iterate (6 samples, 0.15%)</title><rect x="287.6" y="451.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.6" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.13%)</title><rect x="287.9" y="435.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.9" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.13%)</title><rect x="287.9" y="419.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.9" y="430.0"></text>
</g>
<g>
<title>ip_output (136 samples, 3.51%)</title><rect x="289.5" y="483.0" width="41.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.5" y="494.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (135 samples, 3.49%)</title><rect x="289.5" y="467.0" width="41.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.5" y="478.0">ip_..</text>
</g>
<g>
<title>dev_queue_xmit (129 samples, 3.33%)</title><rect x="291.0" y="451.0" width="39.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="294.0" y="462.0">dev..</text>
</g>
<g>
<title>__dev_queue_xmit (128 samples, 3.31%)</title><rect x="291.0" y="435.0" width="39.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.0" y="446.0">__d..</text>
</g>
<g>
<title>__qdisc_run (3 samples, 0.08%)</title><rect x="291.3" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="294.3" y="430.0"></text>
</g>
<g>
<title>pfifo_fast_dequeue (1 samples, 0.03%)</title><rect x="291.3" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.3" y="414.0"></text>
</g>
<g>
<title>sch_direct_xmit (2 samples, 0.05%)</title><rect x="291.6" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.6" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="291.6" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="294.6" y="398.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (1 samples, 0.03%)</title><rect x="291.6" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.6" y="382.0"></text>
</g>
<g>
<title>virtqueue_kick?[virtio_ring] (1 samples, 0.03%)</title><rect x="291.6" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.6" y="366.0"></text>
</g>
<g>
<title>iowrite16 (1 samples, 0.03%)</title><rect x="291.6" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.6" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.03%)</title><rect x="291.9" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (1 samples, 0.03%)</title><rect x="291.9" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.9" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="291.9" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.9" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="292.2" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.2" y="430.0"></text>
</g>
<g>
<title>sch_direct_xmit (122 samples, 3.15%)</title><rect x="292.5" y="419.0" width="37.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.5" y="430.0">sch..</text>
</g>
<g>
<title>dev_hard_start_xmit (112 samples, 2.89%)</title><rect x="292.8" y="403.0" width="34.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.8" y="414.0">de..</text>
</g>
<g>
<title>cleanup_module?[ghash_clmulni_intel] (3 samples, 0.08%)</title><rect x="293.1" y="387.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.1" y="398.0"></text>
</g>
<g>
<title>cleanup_module?[isofs] (2 samples, 0.05%)</title><rect x="294.0" y="387.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="297.0" y="398.0"></text>
</g>
<g>
<title>consume_skb (1 samples, 0.03%)</title><rect x="294.6" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="297.6" y="398.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.05%)</title><rect x="294.9" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.9" y="398.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.05%)</title><rect x="294.9" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.9" y="382.0"></text>
</g>
<g>
<title>__getnstimeofday64 (1 samples, 0.03%)</title><rect x="294.9" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.9" y="366.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="294.9" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.9" y="350.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.03%)</title><rect x="294.9" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.9" y="334.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="295.2" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="298.2" y="366.0"></text>
</g>
<g>
<title>packet_rcv (5 samples, 0.13%)</title><rect x="295.6" y="387.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.6" y="398.0"></text>
</g>
<g>
<title>sk_load_half_positive_offset (1 samples, 0.03%)</title><rect x="296.8" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.8" y="382.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="297.1" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.1" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="297.1" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.1" y="382.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (96 samples, 2.48%)</title><rect x="297.4" y="387.0" width="29.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.4" y="398.0">st..</text>
</g>
<g>
<title>__memset (1 samples, 0.03%)</title><rect x="297.4" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.4" y="382.0"></text>
</g>
<g>
<title>free_old_xmit_skbs.isra.32?[virtio_net] (13 samples, 0.34%)</title><rect x="297.7" y="371.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.7" y="382.0"></text>
</g>
<g>
<title>__dev_kfree_skb_any (2 samples, 0.05%)</title><rect x="299.2" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.2" y="366.0"></text>
</g>
<g>
<title>consume_skb (2 samples, 0.05%)</title><rect x="299.2" y="339.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="302.2" y="350.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="299.2" y="323.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="302.2" y="334.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="299.2" y="307.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.2" y="318.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="299.5" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.5" y="302.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="299.5" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.5" y="286.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.51 (1 samples, 0.03%)</title><rect x="299.5" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.5" y="270.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (6 samples, 0.15%)</title><rect x="299.8" y="355.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.8" y="366.0"></text>
</g>
<g>
<title>detach_buf?[virtio_ring] (4 samples, 0.10%)</title><rect x="300.4" y="339.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.4" y="350.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.08%)</title><rect x="300.7" y="323.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.7" y="334.0"></text>
</g>
<g>
<title>skb_to_sgvec (2 samples, 0.05%)</title><rect x="301.6" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="304.6" y="382.0"></text>
</g>
<g>
<title>__skb_to_sgvec (2 samples, 0.05%)</title><rect x="301.6" y="355.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.6" y="366.0"></text>
</g>
<g>
<title>virtqueue_add_outbuf?[virtio_ring] (4 samples, 0.10%)</title><rect x="302.3" y="371.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.3" y="382.0"></text>
</g>
<g>
<title>__kmalloc (2 samples, 0.05%)</title><rect x="302.3" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.3" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="302.9" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.9" y="366.0"></text>
</g>
<g>
<title>vring_mapping_error?[virtio_ring] (1 samples, 0.03%)</title><rect x="303.2" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="306.2" y="366.0"></text>
</g>
<g>
<title>virtqueue_kick?[virtio_ring] (73 samples, 1.89%)</title><rect x="303.5" y="371.0" width="22.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.5" y="382.0">v..</text>
</g>
<g>
<title>iowrite16 (73 samples, 1.89%)</title><rect x="303.5" y="355.0" width="22.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.5" y="366.0">i..</text>
</g>
<g>
<title>vp_notify?[virtio_pci] (2 samples, 0.05%)</title><rect x="325.7" y="371.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="328.7" y="382.0"></text>
</g>
<g>
<title>vring_mapping_error?[virtio_ring] (1 samples, 0.03%)</title><rect x="326.3" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.3" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="326.6" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="329.6" y="398.0"></text>
</g>
<g>
<title>packet_rcv (1 samples, 0.03%)</title><rect x="326.9" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="329.9" y="414.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (3 samples, 0.08%)</title><rect x="327.2" y="403.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.2" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (5 samples, 0.13%)</title><rect x="328.2" y="403.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.2" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="328.2" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (4 samples, 0.10%)</title><rect x="328.5" y="387.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.5" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="328.8" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.8" y="382.0"></text>
</g>
<g>
<title>passthru_features_check (1 samples, 0.03%)</title><rect x="329.1" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="332.1" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="329.4" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.4" y="382.0"></text>
</g>
<g>
<title>virtnet_select_queue?[virtio_net] (1 samples, 0.03%)</title><rect x="329.7" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.7" y="430.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.03%)</title><rect x="330.0" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.0" y="446.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.03%)</title><rect x="330.3" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="330.3" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.3" y="446.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="330.3" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.3" y="430.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="330.3" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.3" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="330.3" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="333.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="330.3" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.3" y="382.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="330.3" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.3" y="366.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="330.3" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.3" y="350.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="330.3" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="330.3" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="333.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="330.3" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="330.3" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="330.3" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="330.3" y="243.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="330.3" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="330.3" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="330.3" y="195.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="330.3" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.3" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="330.3" y="163.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.3" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="330.3" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="333.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="330.3" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="333.3" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="330.3" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.3" y="126.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.03%)</title><rect x="330.6" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="333.6" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.08%)</title><rect x="330.9" y="499.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="331.8" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.8" y="510.0"></text>
</g>
<g>
<title>local_clock (3 samples, 0.08%)</title><rect x="332.1" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="335.1" y="526.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.03%)</title><rect x="332.1" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.1" y="510.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.05%)</title><rect x="332.4" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="335.4" y="510.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (2 samples, 0.05%)</title><rect x="332.4" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.4" y="494.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.05%)</title><rect x="332.4" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.4" y="478.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.08%)</title><rect x="333.0" y="515.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="336.0" y="526.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.08%)</title><rect x="333.0" y="499.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.0" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="333.3" y="483.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.3" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="334.0" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="337.0" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.08%)</title><rect x="334.6" y="579.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="334.6" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="337.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="335.2" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="335.5" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="335.8" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="338.8" y="622.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="336.1" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="339.1" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.05%)</title><rect x="336.4" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="336.4" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.4" y="638.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="336.7" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="339.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.10%)</title><rect x="337.0" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.0" y="782.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="337.9" y="755.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="340.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureWriteOpen (1 samples, 0.03%)</title><rect x="338.2" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.writerCleanup (1 samples, 0.03%)</title><rect x="338.5" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.5" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (1 samples, 0.03%)</title><rect x="338.8" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.javaChannel (1 samples, 0.03%)</title><rect x="338.8" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.javaChannel (1 samples, 0.03%)</title><rect x="338.8" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.8" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="338.8" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.8" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="338.8" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.8" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="338.8" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.8" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="338.8" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.8" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="338.8" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="341.8" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="338.8" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.8" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.isFlushPending (1 samples, 0.03%)</title><rect x="339.1" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.1" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (2 samples, 0.05%)</title><rect x="339.4" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (255 samples, 6.59%)</title><rect x="340.0" y="947.0" width="77.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.0" y="958.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (255 samples, 6.59%)</title><rect x="340.0" y="931.0" width="77.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.0" y="942.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (254 samples, 6.56%)</title><rect x="340.4" y="915.0" width="77.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.4" y="926.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (254 samples, 6.56%)</title><rect x="340.4" y="899.0" width="77.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.4" y="910.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (4 samples, 0.10%)</title><rect x="340.4" y="883.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.4" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (1 samples, 0.03%)</title><rect x="340.4" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.4" y="878.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="340.7" y="867.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="343.7" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (243 samples, 6.28%)</title><rect x="341.6" y="883.0" width="74.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.6" y="894.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (243 samples, 6.28%)</title><rect x="341.6" y="867.0" width="74.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.6" y="878.0">io/netty..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (240 samples, 6.20%)</title><rect x="342.5" y="851.0" width="73.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.5" y="862.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (240 samples, 6.20%)</title><rect x="342.5" y="835.0" width="73.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.5" y="846.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.acquire (2 samples, 0.05%)</title><rect x="343.7" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.7" y="830.0"></text>
</g>
<g>
<title>java/util/BitSet.set (1 samples, 0.03%)</title><rect x="344.0" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.0" y="814.0"></text>
</g>
<g>
<title>java/util/BitSet.expandTo (1 samples, 0.03%)</title><rect x="344.0" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.containsKey (1 samples, 0.03%)</title><rect x="344.3" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.3" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (17 samples, 0.44%)</title><rect x="344.6" y="819.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (17 samples, 0.44%)</title><rect x="344.6" y="803.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.insert (3 samples, 0.08%)</title><rect x="344.6" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (1 samples, 0.03%)</title><rect x="345.5" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.5" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (13 samples, 0.34%)</title><rect x="345.8" y="787.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (12 samples, 0.31%)</title><rect x="346.1" y="771.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.1" y="782.0"></text>
</g>
<g>
<title>JVM_IHashCode (10 samples, 0.26%)</title><rect x="346.1" y="755.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="349.1" y="766.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.05%)</title><rect x="346.4" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="349.4" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (5 samples, 0.13%)</title><rect x="347.1" y="739.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="350.1" y="750.0"></text>
</g>
<g>
<title>__pthread_getspecific (2 samples, 0.05%)</title><rect x="348.6" y="739.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="351.6" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="349.2" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="352.2" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (202 samples, 5.22%)</title><rect x="349.8" y="819.0" width="61.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.8" y="830.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (202 samples, 5.22%)</title><rect x="349.8" y="803.0" width="61.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.8" y="814.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (7 samples, 0.18%)</title><rect x="349.8" y="787.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (1 samples, 0.03%)</title><rect x="349.8" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.8" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="349.8" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.8" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (6 samples, 0.15%)</title><rect x="350.1" y="771.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.1" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (195 samples, 5.04%)</title><rect x="351.9" y="787.0" width="59.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.9" y="798.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (195 samples, 5.04%)</title><rect x="351.9" y="771.0" width="59.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.9" y="782.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (194 samples, 5.01%)</title><rect x="352.2" y="755.0" width="59.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.2" y="766.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (194 samples, 5.01%)</title><rect x="352.2" y="739.0" width="59.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.2" y="750.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (194 samples, 5.01%)</title><rect x="352.2" y="723.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.2" y="734.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (6 samples, 0.15%)</title><rect x="352.2" y="707.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (2 samples, 0.05%)</title><rect x="352.2" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.05%)</title><rect x="352.2" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.2" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (3 samples, 0.08%)</title><rect x="352.8" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.8" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="353.8" y="691.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="356.8" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (187 samples, 4.83%)</title><rect x="354.1" y="707.0" width="57.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.1" y="718.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (187 samples, 4.83%)</title><rect x="354.1" y="691.0" width="57.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.1" y="702.0">io/net..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (185 samples, 4.78%)</title><rect x="354.4" y="675.0" width="56.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.4" y="686.0">io/net..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (163 samples, 4.21%)</title><rect x="354.4" y="659.0" width="49.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.4" y="670.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (163 samples, 4.21%)</title><rect x="354.4" y="643.0" width="49.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.4" y="654.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (163 samples, 4.21%)</title><rect x="354.4" y="627.0" width="49.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.4" y="638.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (59 samples, 1.52%)</title><rect x="356.8" y="611.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (59 samples, 1.52%)</title><rect x="356.8" y="595.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.8" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.compressDirect (59 samples, 1.52%)</title><rect x="356.8" y="579.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.8" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (5 samples, 0.13%)</title><rect x="357.1" y="563.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.1" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readableBytes (1 samples, 0.03%)</title><rect x="357.1" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.1" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readerIndex (2 samples, 0.05%)</title><rect x="357.4" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.4" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="358.0" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.0" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="358.0" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="358.0" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.0" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.03%)</title><rect x="358.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.0" y="510.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="358.3" y="547.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="361.3" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (8 samples, 0.21%)</title><rect x="358.6" y="563.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.6" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (8 samples, 0.21%)</title><rect x="358.6" y="547.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.6" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (8 samples, 0.21%)</title><rect x="358.6" y="531.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.6" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 0.03%)</title><rect x="358.6" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.6" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (1 samples, 0.03%)</title><rect x="358.6" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.6" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (1 samples, 0.03%)</title><rect x="358.6" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.6" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (1 samples, 0.03%)</title><rect x="358.6" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.6" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (1 samples, 0.03%)</title><rect x="358.6" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="358.6" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="358.6" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.03%)</title><rect x="358.6" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.6" y="414.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.03%)</title><rect x="358.6" y="387.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="361.6" y="398.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.03%)</title><rect x="358.6" y="371.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="361.6" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.03%)</title><rect x="358.6" y="355.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="361.6" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="358.6" y="339.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="361.6" y="350.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.03%)</title><rect x="358.6" y="323.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="361.6" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (7 samples, 0.18%)</title><rect x="358.9" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.9" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.03%)</title><rect x="358.9" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.9" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.03%)</title><rect x="358.9" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.9" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="358.9" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="358.9" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.9" y="462.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.03%)</title><rect x="358.9" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.9" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.03%)</title><rect x="358.9" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.9" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (6 samples, 0.15%)</title><rect x="359.2" y="499.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.2" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (6 samples, 0.15%)</title><rect x="359.2" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.2" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (6 samples, 0.15%)</title><rect x="359.2" y="467.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.2" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (6 samples, 0.15%)</title><rect x="359.2" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.2" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (1 samples, 0.03%)</title><rect x="359.2" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.2" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="359.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.2" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="359.2" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.2" y="414.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="359.2" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.2" y="398.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="359.2" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.2" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="359.2" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.2" y="366.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="359.2" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.2" y="350.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="359.2" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.2" y="334.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="359.2" y="307.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="359.2" y="291.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="362.2" y="302.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="359.2" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.2" y="286.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="359.2" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.2" y="270.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="359.2" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="362.2" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="359.2" y="227.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="359.2" y="211.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="359.2" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="359.2" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="359.2" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.2" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="359.2" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="359.2" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="362.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="359.2" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="362.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="359.2" y="99.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="359.2" y="83.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="362.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="359.2" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="359.2" y="51.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="362.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="359.2" y="35.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.2" y="46.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (5 samples, 0.13%)</title><rect x="359.6" y="435.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.6" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (5 samples, 0.13%)</title><rect x="359.6" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.6" y="430.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNICompressor.compress (45 samples, 1.16%)</title><rect x="361.1" y="563.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.1" y="574.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_compress_limitedOutput (45 samples, 1.16%)</title><rect x="361.1" y="547.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.1" y="558.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1compress_1limitedOutput (8 samples, 0.21%)</title><rect x="361.1" y="531.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="364.1" y="542.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (5 samples, 0.13%)</title><rect x="362.0" y="515.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="365.0" y="526.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.03%)</title><rect x="362.0" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="365.0" y="510.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (4 samples, 0.10%)</title><rect x="362.3" y="499.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="365.3" y="510.0"></text>
</g>
<g>
<title>LZ4_compressBound (1 samples, 0.03%)</title><rect x="363.5" y="531.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="366.5" y="542.0"></text>
</g>
<g>
<title>LZ4_compress_default (1 samples, 0.03%)</title><rect x="363.8" y="531.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.8" y="542.0"></text>
</g>
<g>
<title>LZ4_compress_fast (1 samples, 0.03%)</title><rect x="364.1" y="531.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="367.1" y="542.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState (16 samples, 0.41%)</title><rect x="364.4" y="531.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="367.4" y="542.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState@plt (1 samples, 0.03%)</title><rect x="369.3" y="531.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="372.3" y="542.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (6 samples, 0.15%)</title><rect x="369.6" y="531.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="372.6" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="371.1" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.1" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="371.1" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.1" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="371.1" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="374.1" y="494.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="371.1" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.1" y="478.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="371.1" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.1" y="462.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="371.1" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.1" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="371.1" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.1" y="430.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="371.1" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.1" y="414.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="371.1" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.1" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="371.1" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="374.1" y="382.0"></text>
</g>
<g>
<title>__memset_sse2 (11 samples, 0.28%)</title><rect x="371.4" y="531.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="374.4" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (20 samples, 0.52%)</title><rect x="374.8" y="611.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (20 samples, 0.52%)</title><rect x="374.8" y="595.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (20 samples, 0.52%)</title><rect x="374.8" y="579.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (20 samples, 0.52%)</title><rect x="374.8" y="563.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (19 samples, 0.49%)</title><rect x="375.1" y="547.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.1" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (3 samples, 0.08%)</title><rect x="375.1" y="531.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.1" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (3 samples, 0.08%)</title><rect x="375.1" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.1" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (3 samples, 0.08%)</title><rect x="375.1" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.1" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (3 samples, 0.08%)</title><rect x="375.1" y="483.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.1" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (3 samples, 0.08%)</title><rect x="375.1" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.08%)</title><rect x="375.1" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="375.1" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="375.1" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.1" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.05%)</title><rect x="375.4" y="403.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="378.4" y="414.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.05%)</title><rect x="375.4" y="387.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="378.4" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.05%)</title><rect x="375.4" y="371.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="378.4" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.05%)</title><rect x="375.4" y="355.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="378.4" y="366.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.03%)</title><rect x="375.4" y="339.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="378.4" y="350.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="375.4" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.4" y="334.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="375.4" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.4" y="318.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="375.4" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.4" y="302.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="375.4" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.4" y="286.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="375.4" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.4" y="270.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="375.4" y="243.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.4" y="254.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="375.4" y="227.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="378.4" y="238.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="375.4" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.4" y="222.0"></text>
</g>
<g>
<title>page_to_skb?[virtio_net] (1 samples, 0.03%)</title><rect x="375.4" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.4" y="206.0"></text>
</g>
<g>
<title>__netdev_alloc_skb (1 samples, 0.03%)</title><rect x="375.4" y="179.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="378.4" y="190.0"></text>
</g>
<g>
<title>__build_skb (1 samples, 0.03%)</title><rect x="375.4" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="378.4" y="174.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="375.4" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.4" y="158.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="375.7" y="339.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="378.7" y="350.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="375.7" y="323.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="378.7" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (15 samples, 0.39%)</title><rect x="376.0" y="531.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (2 samples, 0.05%)</title><rect x="376.6" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.6" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.05%)</title><rect x="376.6" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.6" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="376.6" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.6" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="376.9" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.9" y="494.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="376.9" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.03%)</title><rect x="376.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.9" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (11 samples, 0.28%)</title><rect x="377.2" y="515.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.2" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (11 samples, 0.28%)</title><rect x="377.2" y="499.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.2" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (10 samples, 0.26%)</title><rect x="377.5" y="483.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (10 samples, 0.26%)</title><rect x="377.5" y="467.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.5" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (4 samples, 0.10%)</title><rect x="378.4" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.4" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (4 samples, 0.10%)</title><rect x="378.4" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (4 samples, 0.10%)</title><rect x="378.4" y="419.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (2 samples, 0.05%)</title><rect x="378.8" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.8" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (2 samples, 0.05%)</title><rect x="378.8" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.8" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.03%)</title><rect x="379.4" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.03%)</title><rect x="379.4" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.4" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (1 samples, 0.03%)</title><rect x="379.4" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.4" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (3 samples, 0.08%)</title><rect x="379.7" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.7" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (1 samples, 0.03%)</title><rect x="379.7" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.7" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (2 samples, 0.05%)</title><rect x="380.0" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.0" y="446.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.03%)</title><rect x="380.6" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.6" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.03%)</title><rect x="380.6" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (16 samples, 0.41%)</title><rect x="380.9" y="611.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (16 samples, 0.41%)</title><rect x="380.9" y="595.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (7 samples, 0.18%)</title><rect x="381.5" y="579.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.5" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (7 samples, 0.18%)</title><rect x="381.5" y="563.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (5 samples, 0.13%)</title><rect x="381.5" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.5" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (5 samples, 0.13%)</title><rect x="381.5" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.5" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (5 samples, 0.13%)</title><rect x="381.5" y="515.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.5" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (5 samples, 0.13%)</title><rect x="381.5" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.5" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (3 samples, 0.08%)</title><rect x="381.8" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.08%)</title><rect x="381.8" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="381.8" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.08%)</title><rect x="381.8" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.8" y="446.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.08%)</title><rect x="381.8" y="419.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="384.8" y="430.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.08%)</title><rect x="381.8" y="403.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="384.8" y="414.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (3 samples, 0.08%)</title><rect x="381.8" y="387.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="384.8" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (3 samples, 0.08%)</title><rect x="381.8" y="371.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.8" y="382.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="382.1" y="355.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="385.1" y="366.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="382.4" y="355.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="385.4" y="366.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="382.4" y="339.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="385.4" y="350.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="382.7" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="385.7" y="494.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="382.7" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.7" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="382.7" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.7" y="462.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="382.7" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.7" y="446.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="382.7" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.7" y="430.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="382.7" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.7" y="414.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="382.7" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.7" y="398.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="382.7" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="385.7" y="382.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="382.7" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.7" y="366.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="382.7" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.7" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="382.7" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="382.7" y="307.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.7" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (2 samples, 0.05%)</title><rect x="383.0" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.0" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (2 samples, 0.05%)</title><rect x="383.0" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="383.3" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.3" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="383.3" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.3" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (6 samples, 0.15%)</title><rect x="383.6" y="579.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.6" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (6 samples, 0.15%)</title><rect x="383.6" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents0 (6 samples, 0.15%)</title><rect x="383.6" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.6" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newComponent (6 samples, 0.15%)</title><rect x="383.6" y="531.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.&lt;init&gt; (1 samples, 0.03%)</title><rect x="384.5" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.5" y="526.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="384.8" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.8" y="526.0"></text>
</g>
<g>
<title>__irqentry_text_start (2 samples, 0.05%)</title><rect x="384.8" y="499.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.8" y="510.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="384.8" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.8" y="494.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.05%)</title><rect x="384.8" y="467.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.8" y="478.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.05%)</title><rect x="384.8" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.8" y="462.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.05%)</title><rect x="384.8" y="435.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.8" y="446.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="384.8" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.8" y="430.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.05%)</title><rect x="384.8" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.8" y="414.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.05%)</title><rect x="384.8" y="387.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.8" y="398.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.05%)</title><rect x="384.8" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="384.8" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="384.8" y="339.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="384.8" y="323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="384.8" y="307.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="384.8" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="384.8" y="275.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="387.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="384.8" y="259.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.8" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.05%)</title><rect x="384.8" y="243.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.8" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.05%)</title><rect x="384.8" y="227.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.8" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="384.8" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.8" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="384.8" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="384.8" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.8" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="384.8" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="385.1" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.1" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="385.1" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.1" y="206.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="385.1" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.1" y="190.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="385.1" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="388.1" y="174.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="385.1" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.1" y="158.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents0 (1 samples, 0.03%)</title><rect x="385.5" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (3 samples, 0.08%)</title><rect x="385.8" y="611.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (3 samples, 0.08%)</title><rect x="385.8" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (3 samples, 0.08%)</title><rect x="385.8" y="579.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (3 samples, 0.08%)</title><rect x="385.8" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (1 samples, 0.03%)</title><rect x="385.8" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (1 samples, 0.03%)</title><rect x="385.8" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.8" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.03%)</title><rect x="385.8" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.8" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (1 samples, 0.03%)</title><rect x="385.8" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.8" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.03%)</title><rect x="385.8" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.8" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.03%)</title><rect x="385.8" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.8" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.03%)</title><rect x="385.8" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.8" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.03%)</title><rect x="385.8" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.8" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.05%)</title><rect x="386.1" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.1" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (2 samples, 0.05%)</title><rect x="386.1" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.03%)</title><rect x="386.4" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (1 samples, 0.03%)</title><rect x="386.4" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.4" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (1 samples, 0.03%)</title><rect x="386.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.4" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="386.4" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.4" y="478.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="386.4" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.4" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.computeFlags (1 samples, 0.03%)</title><rect x="386.7" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeBodyInto (27 samples, 0.70%)</title><rect x="387.0" y="611.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.0" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encode (27 samples, 0.70%)</title><rect x="387.0" y="595.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.0" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (21 samples, 0.54%)</title><rect x="387.0" y="579.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.0" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (21 samples, 0.54%)</title><rect x="387.0" y="563.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.0" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (12 samples, 0.31%)</title><rect x="387.0" y="547.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.0" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeShort (12 samples, 0.31%)</title><rect x="387.0" y="531.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (11 samples, 0.28%)</title><rect x="387.0" y="515.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.0" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (10 samples, 0.26%)</title><rect x="387.0" y="499.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (9 samples, 0.23%)</title><rect x="387.3" y="483.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (9 samples, 0.23%)</title><rect x="387.3" y="467.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf$1.unsafeOffset (2 samples, 0.05%)</title><rect x="387.6" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.access$100 (1 samples, 0.03%)</title><rect x="388.2" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.2" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/MathUtil.isOutOfBounds (1 samples, 0.03%)</title><rect x="388.5" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.5" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getInt (1 samples, 0.03%)</title><rect x="388.8" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.8" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (3 samples, 0.08%)</title><rect x="389.1" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writerIndex (1 samples, 0.03%)</title><rect x="390.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._setShort (1 samples, 0.03%)</title><rect x="390.3" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.3" y="526.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.03%)</title><rect x="390.3" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.3" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (9 samples, 0.23%)</title><rect x="390.6" y="547.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.6" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (9 samples, 0.23%)</title><rect x="390.6" y="531.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.6" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writeValue (1 samples, 0.03%)</title><rect x="390.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.6" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (1 samples, 0.03%)</title><rect x="390.9" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.9" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.03%)</title><rect x="390.9" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.9" y="510.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="390.9" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.9" y="494.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="390.9" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="393.9" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="390.9" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.9" y="462.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="390.9" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.9" y="446.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="390.9" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.9" y="430.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="390.9" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.9" y="414.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="390.9" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.9" y="398.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="390.9" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="393.9" y="382.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="390.9" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="393.9" y="366.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="390.9" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="390.9" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="390.9" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="393.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="390.9" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="390.9" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.9" y="286.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.03%)</title><rect x="390.9" y="259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.9" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="390.9" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.9" y="254.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (7 samples, 0.18%)</title><rect x="391.2" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.2" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (7 samples, 0.18%)</title><rect x="391.2" y="499.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.2" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (7 samples, 0.18%)</title><rect x="391.2" y="483.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.2" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (7 samples, 0.18%)</title><rect x="391.2" y="467.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.2" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (7 samples, 0.18%)</title><rect x="391.2" y="451.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.2" y="462.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.05%)</title><rect x="391.2" y="435.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="394.2" y="446.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="391.9" y="435.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="394.9" y="446.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.08%)</title><rect x="392.5" y="435.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="395.5" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encode (5 samples, 0.13%)</title><rect x="393.4" y="579.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writePositionalValues (5 samples, 0.13%)</title><rect x="393.4" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writeValue (5 samples, 0.13%)</title><rect x="393.4" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (5 samples, 0.13%)</title><rect x="393.4" y="531.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.4" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (5 samples, 0.13%)</title><rect x="393.4" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (5 samples, 0.13%)</title><rect x="393.4" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (5 samples, 0.13%)</title><rect x="393.4" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.4" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (5 samples, 0.13%)</title><rect x="393.4" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.4" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (4 samples, 0.10%)</title><rect x="393.4" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.4" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (4 samples, 0.10%)</title><rect x="393.4" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (4 samples, 0.10%)</title><rect x="393.4" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.4" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="393.4" y="403.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="396.4" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="394.6" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.6" y="462.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="394.6" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.6" y="446.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="394.6" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.6" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="394.6" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.6" y="414.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="394.6" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.6" y="398.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="394.6" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.6" y="382.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="394.6" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="397.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="394.6" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.6" y="350.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="394.6" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.6" y="334.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="394.6" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.6" y="318.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="394.6" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="394.6" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="397.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="394.6" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.03%)</title><rect x="394.9" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodedBodySize (11 samples, 0.28%)</title><rect x="395.2" y="611.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.2" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.getMessageEncoder (1 samples, 0.03%)</title><rect x="395.5" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encodedSize (9 samples, 0.23%)</title><rect x="395.8" y="595.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.8" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encodedSize (9 samples, 0.23%)</title><rect x="395.8" y="579.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.8" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.sizeOfPositionalValues (9 samples, 0.23%)</title><rect x="395.8" y="563.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.8" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (2 samples, 0.05%)</title><rect x="397.3" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.size (2 samples, 0.05%)</title><rect x="397.3" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.3" y="542.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="397.6" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.6" y="526.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="397.6" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.6" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="397.6" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.6" y="494.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="397.6" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="400.6" y="478.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="397.6" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="400.6" y="462.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="397.6" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="400.6" y="446.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="397.6" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.6" y="430.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="397.6" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.6" y="414.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="397.6" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.6" y="398.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="397.6" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.6" y="382.0"></text>
</g>
<g>
<title>inet_gro_receive (1 samples, 0.03%)</title><rect x="397.6" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.6" y="366.0"></text>
</g>
<g>
<title>tcp4_gro_receive (1 samples, 0.03%)</title><rect x="397.6" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="400.6" y="350.0"></text>
</g>
<g>
<title>__skb_gro_checksum_complete (1 samples, 0.03%)</title><rect x="397.6" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="400.6" y="334.0"></text>
</g>
<g>
<title>skb_checksum (1 samples, 0.03%)</title><rect x="397.6" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.6" y="318.0"></text>
</g>
<g>
<title>__skb_checksum (1 samples, 0.03%)</title><rect x="397.6" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="400.6" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.05%)</title><rect x="397.9" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.get (2 samples, 0.05%)</title><rect x="397.9" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.9" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.getMessageEncoder (13 samples, 0.34%)</title><rect x="398.6" y="611.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.6" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (2 samples, 0.05%)</title><rect x="398.6" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (11 samples, 0.28%)</title><rect x="399.2" y="595.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.2" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (5 samples, 0.13%)</title><rect x="399.5" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeBodyInto (4 samples, 0.10%)</title><rect x="401.0" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.0" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="401.9" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="404.9" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="401.9" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="404.9" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="401.9" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.9" y="542.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="401.9" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.9" y="526.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="401.9" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.9" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="401.9" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="402.2" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.03%)</title><rect x="402.2" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.2" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/ProtocolErrors.check (1 samples, 0.03%)</title><rect x="402.5" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.10%)</title><rect x="402.8" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="403.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (18 samples, 0.46%)</title><rect x="404.0" y="659.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.0" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (18 samples, 0.46%)</title><rect x="404.0" y="643.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.0" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (3 samples, 0.08%)</title><rect x="404.0" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.0" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="404.0" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.0" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (1 samples, 0.03%)</title><rect x="404.3" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.3" y="622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="404.7" y="611.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="407.7" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (12 samples, 0.31%)</title><rect x="405.0" y="627.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.0" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (12 samples, 0.31%)</title><rect x="405.0" y="611.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.0" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (7 samples, 0.18%)</title><rect x="406.5" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.write (7 samples, 0.18%)</title><rect x="406.5" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.5" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addMessage (5 samples, 0.13%)</title><rect x="407.1" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.1" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.newInstance (5 samples, 0.13%)</title><rect x="407.1" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.1" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (3 samples, 0.08%)</title><rect x="407.7" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.7" y="542.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (3 samples, 0.08%)</title><rect x="407.7" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.7" y="526.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (2 samples, 0.05%)</title><rect x="407.7" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.7" y="510.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.03%)</title><rect x="408.3" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.3" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.03%)</title><rect x="408.3" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (3 samples, 0.08%)</title><rect x="408.6" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.6" y="638.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.03%)</title><rect x="408.6" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.6" y="622.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="408.9" y="611.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="411.9" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (4 samples, 0.10%)</title><rect x="409.5" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.5" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (3 samples, 0.08%)</title><rect x="409.8" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.8" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (2 samples, 0.05%)</title><rect x="410.1" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.1" y="638.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="410.7" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.7" y="686.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="410.7" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="410.7" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.7" y="654.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="410.7" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.7" y="638.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="410.7" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.7" y="622.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="410.7" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="413.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.03%)</title><rect x="411.1" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.03%)</title><rect x="411.1" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.1" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (8 samples, 0.21%)</title><rect x="411.4" y="819.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (8 samples, 0.21%)</title><rect x="411.4" y="803.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.4" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (8 samples, 0.21%)</title><rect x="411.4" y="787.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.4" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener0 (8 samples, 0.21%)</title><rect x="411.4" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.4" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="413.5" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.5" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="413.5" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.5" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="413.5" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.5" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="413.5" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.5" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="413.5" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.5" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="413.5" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.5" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="413.5" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="416.5" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="413.5" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="416.5" y="654.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="413.5" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.5" y="638.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="413.5" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.5" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="413.5" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.5" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="413.5" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.5" y="590.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="413.5" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.5" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="413.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.5" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="413.5" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="416.5" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="413.5" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="413.5" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="413.5" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.5" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="413.5" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="416.5" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="413.5" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.5" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="413.5" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="416.5" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="413.5" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="413.5" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.5" y="414.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (4 samples, 0.10%)</title><rect x="413.8" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.05%)</title><rect x="415.0" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (7 samples, 0.18%)</title><rect x="415.6" y="883.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.6" y="894.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (7 samples, 0.18%)</title><rect x="415.6" y="867.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.6" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="417.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="417.8" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.44%)</title><rect x="418.1" y="947.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.44%)</title><rect x="418.1" y="931.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.08%)</title><rect x="418.1" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.1" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.36%)</title><rect x="419.0" y="915.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (2 samples, 0.05%)</title><rect x="419.6" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.21%)</title><rect x="420.2" y="899.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.2" y="910.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="422.6" y="899.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="425.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="423.2" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.2" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.keySet (1 samples, 0.03%)</title><rect x="423.2" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.2" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="423.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (9 samples, 0.23%)</title><rect x="423.5" y="947.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (7 samples, 0.18%)</title><rect x="424.2" y="931.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.lazySetNext (3 samples, 0.08%)</title><rect x="424.5" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="425.1" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.casHead (3 samples, 0.08%)</title><rect x="425.4" y="915.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.4" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (3 samples, 0.08%)</title><rect x="425.4" y="899.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.4" y="910.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="426.0" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.0" y="894.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="426.0" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.0" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="426.0" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="429.0" y="862.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="426.0" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="429.0" y="846.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="426.0" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="429.0" y="830.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="426.0" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.0" y="814.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="426.0" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="429.0" y="798.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="426.0" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="429.0" y="782.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="426.0" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.0" y="766.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="426.0" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="429.0" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="426.0" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.0" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="426.0" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.0" y="718.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="426.0" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.0" y="702.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="426.0" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="429.0" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="426.0" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="429.0" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="426.0" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="429.0" y="654.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="426.0" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.0" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="426.0" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.0" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="426.0" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="429.0" y="606.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="426.0" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="429.0" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="426.0" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.0" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="426.0" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="429.0" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="426.0" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.0" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="426.3" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.3" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.03%)</title><rect x="426.3" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.3" y="958.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.run (7 samples, 0.18%)</title><rect x="426.6" y="979.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.6" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.runTask (6 samples, 0.15%)</title><rect x="426.6" y="963.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.6" y="974.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$292/808576695.run (6 samples, 0.15%)</title><rect x="426.6" y="947.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.6" y="958.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (6 samples, 0.15%)</title><rect x="426.6" y="931.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.6" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (3 samples, 0.08%)</title><rect x="426.6" y="915.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.6" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (3 samples, 0.08%)</title><rect x="426.6" y="899.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.6" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (3 samples, 0.08%)</title><rect x="426.6" y="883.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.6" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (3 samples, 0.08%)</title><rect x="426.6" y="867.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (3 samples, 0.08%)</title><rect x="426.6" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (3 samples, 0.08%)</title><rect x="426.6" y="835.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (3 samples, 0.08%)</title><rect x="426.6" y="819.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (3 samples, 0.08%)</title><rect x="426.6" y="803.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (3 samples, 0.08%)</title><rect x="426.6" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (3 samples, 0.08%)</title><rect x="426.6" y="771.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (2 samples, 0.05%)</title><rect x="426.6" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (2 samples, 0.05%)</title><rect x="426.6" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.6" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (2 samples, 0.05%)</title><rect x="426.6" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.6" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (2 samples, 0.05%)</title><rect x="426.6" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.6" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/RecyclableArrayList.newInstance (2 samples, 0.05%)</title><rect x="426.6" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="426.6" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="686.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="426.6" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacity (1 samples, 0.03%)</title><rect x="426.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.03%)</title><rect x="426.9" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.9" y="670.0"></text>
</g>
<g>
<title>BarrierSet::static_write_ref_array_post(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="426.9" y="643.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="427.2" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="427.2" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.03%)</title><rect x="427.2" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="427.2" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.2" y="718.0"></text>
</g>
<g>
<title>__libc_writev (1 samples, 0.03%)</title><rect x="427.2" y="691.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="430.2" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="427.2" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.2" y="686.0"></text>
</g>
<g>
<title>sys_writev (1 samples, 0.03%)</title><rect x="427.2" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="430.2" y="670.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="427.2" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="430.2" y="654.0"></text>
</g>
<g>
<title>do_readv_writev (1 samples, 0.03%)</title><rect x="427.2" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.2" y="638.0"></text>
</g>
<g>
<title>do_sync_readv_writev (1 samples, 0.03%)</title><rect x="427.2" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.2" y="622.0"></text>
</g>
<g>
<title>sock_aio_write (1 samples, 0.03%)</title><rect x="427.2" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.2" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="427.2" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="430.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="427.2" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="430.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="427.2" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.2" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="427.2" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="430.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="427.2" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.2" y="526.0"></text>
</g>
<g>
<title>tcp_transmit_skb (1 samples, 0.03%)</title><rect x="427.2" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="430.2" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="427.2" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out_sk (1 samples, 0.03%)</title><rect x="427.2" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.2" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="427.2" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="427.2" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="430.2" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.03%)</title><rect x="427.2" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="427.2" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.2" y="414.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.03%)</title><rect x="427.2" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.03%)</title><rect x="427.2" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (1 samples, 0.03%)</title><rect x="427.2" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.2" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="427.2" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.2" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (1 samples, 0.03%)</title><rect x="427.5" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (1 samples, 0.03%)</title><rect x="427.5" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.5" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.5" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.5" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="427.5" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.5" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="427.5" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.5" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (1 samples, 0.03%)</title><rect x="427.5" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.5" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (1 samples, 0.03%)</title><rect x="427.5" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.5" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.5" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.5" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="427.5" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.5" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="427.5" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.5" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (1 samples, 0.03%)</title><rect x="427.5" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="427.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="427.5" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="427.5" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.5" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (1 samples, 0.03%)</title><rect x="427.5" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (1 samples, 0.03%)</title><rect x="427.5" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.5" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (1 samples, 0.03%)</title><rect x="427.5" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.5" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (1 samples, 0.03%)</title><rect x="427.5" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (1 samples, 0.03%)</title><rect x="427.5" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (1 samples, 0.03%)</title><rect x="427.5" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.5" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.compressDirect (1 samples, 0.03%)</title><rect x="427.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.5" y="558.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNICompressor.compress (1 samples, 0.03%)</title><rect x="427.5" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="542.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_compress_limitedOutput (1 samples, 0.03%)</title><rect x="427.5" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.5" y="526.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState (1 samples, 0.03%)</title><rect x="427.5" y="499.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="430.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="427.8" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="427.8" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="427.8" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="427.8" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="428.1" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.1" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.setUncancellableInternal (1 samples, 0.03%)</title><rect x="428.4" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.4" y="974.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setUncancellable (1 samples, 0.03%)</title><rect x="428.4" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet (1 samples, 0.03%)</title><rect x="428.4" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.4" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.03%)</title><rect x="428.4" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.4" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.fetchFromScheduledTaskQueue (17 samples, 0.44%)</title><rect x="428.7" y="995.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.7" y="1006.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$175/620978613.run (3 samples, 0.08%)</title><rect x="428.7" y="979.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.7" y="990.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="429.3" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="432.3" y="974.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="429.3" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.3" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="429.3" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.3" y="942.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="429.3" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.3" y="926.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="429.3" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.3" y="910.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="429.3" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.3" y="894.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="429.3" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="432.3" y="878.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="429.3" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.3" y="862.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="429.3" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="432.3" y="846.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="429.3" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="432.3" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="429.3" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.3" y="814.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="429.3" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.3" y="798.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="429.3" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.3" y="782.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="429.3" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.3" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="429.3" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.3" y="750.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="429.3" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.3" y="734.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="429.3" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.3" y="718.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="429.3" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.3" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="429.3" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.3" y="686.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="429.3" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.3" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="429.3" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.3" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.pollScheduledTask (12 samples, 0.31%)</title><rect x="429.6" y="979.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.6" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (11 samples, 0.28%)</title><rect x="429.9" y="963.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.9" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="433.3" y="979.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="436.3" y="990.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTask (12 samples, 0.31%)</title><rect x="433.9" y="995.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.9" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (12 samples, 0.31%)</title><rect x="433.9" y="979.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.9" y="990.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="435.7" y="963.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="438.7" y="974.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.10%)</title><rect x="436.0" y="963.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="439.0" y="974.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="436.7" y="947.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="439.7" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (1 samples, 0.03%)</title><rect x="437.3" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.3" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (1 samples, 0.03%)</title><rect x="437.3" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.3" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.03%)</title><rect x="437.3" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.3" y="942.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="437.6" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.6" y="1006.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="437.6" y="979.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.6" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="437.6" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.6" y="974.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="437.6" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="440.6" y="958.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="437.6" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.6" y="942.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="437.6" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="926.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="437.6" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.6" y="910.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="437.6" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.6" y="894.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="437.6" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.6" y="878.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="437.6" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="862.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="437.6" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.6" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="437.6" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.6" y="830.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="437.6" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.6" y="814.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="437.6" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.6" y="798.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="437.6" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="437.6" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.6" y="766.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="437.6" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.6" y="750.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="437.6" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.6" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="437.6" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.6" y="718.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="437.6" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.6" y="702.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="437.6" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.6" y="686.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="437.6" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="437.6" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.6" y="654.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="437.9" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="440.9" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="438.2" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,412 samples, 62.29%)</title><rect x="438.5" y="1075.0" width="735.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.5" y="1086.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,412 samples, 62.29%)</title><rect x="438.5" y="1059.0" width="735.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.5" y="1070.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>clojure/lang/AFn.run (2,412 samples, 62.29%)</title><rect x="438.5" y="1043.0" width="735.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.5" y="1054.0">clojure/lang/AFn.run</text>
</g>
<g>
<title>clojure/core/async$thread_call$fn__6246.invoke (2,412 samples, 62.29%)</title><rect x="438.5" y="1027.0" width="735.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.5" y="1038.0">clojure/core/async$thread_call$fn__6246.invoke</text>
</g>
<g>
<title>hammer/core$_main$fn__8901.invoke (2,412 samples, 62.29%)</title><rect x="438.5" y="1011.0" width="735.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.5" y="1022.0">hammer/core$_main$fn__8901.invoke</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession.invoke (2,412 samples, 62.29%)</title><rect x="438.5" y="995.0" width="735.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.5" y="1006.0">hammer/core$insertTaskOneSession.invoke</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession.invokeStatic (2,412 samples, 62.29%)</title><rect x="438.5" y="979.0" width="735.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.5" y="990.0">hammer/core$insertTaskOneSession.invokeStatic</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession$fn__8879.invoke (2,412 samples, 62.29%)</title><rect x="438.5" y="963.0" width="735.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.5" y="974.0">hammer/core$insertTaskOneSession$fn__8879.invoke</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="439.1" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="442.1" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="439.1" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="442.1" y="942.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (142 samples, 3.67%)</title><rect x="439.4" y="947.0" width="43.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.4" y="958.0">cloj..</text>
</g>
<g>
<title>clojure/lang/RT.baseLoader (12 samples, 0.31%)</title><rect x="440.6" y="931.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.6" y="942.0"></text>
</g>
<g>
<title>clojure/lang/Var.deref (12 samples, 0.31%)</title><rect x="440.6" y="915.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.6" y="926.0"></text>
</g>
<g>
<title>clojure/lang/Var.getThreadBinding (12 samples, 0.31%)</title><rect x="440.6" y="899.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.6" y="910.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap.entryAt (8 samples, 0.21%)</title><rect x="440.6" y="883.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.6" y="894.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$ArrayNode.find (8 samples, 0.21%)</title><rect x="440.6" y="867.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.6" y="878.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (7 samples, 0.18%)</title><rect x="440.9" y="851.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.9" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (5 samples, 0.13%)</title><rect x="441.5" y="835.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (5 samples, 0.13%)</title><rect x="441.5" y="819.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.5" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Util.pcequiv (5 samples, 0.13%)</title><rect x="441.5" y="803.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.5" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="442.7" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="445.7" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="442.7" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.7" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="442.7" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.7" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="442.7" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.7" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="442.7" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.7" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="442.7" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.10%)</title><rect x="443.1" y="883.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (3 samples, 0.08%)</title><rect x="443.4" y="867.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.08%)</title><rect x="443.4" y="851.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.4" y="862.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (126 samples, 3.25%)</title><rect x="444.3" y="931.0" width="38.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.3" y="942.0">clo..</text>
</g>
<g>
<title>java/lang/Class.forName (125 samples, 3.23%)</title><rect x="444.6" y="915.0" width="38.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.6" y="926.0">jav..</text>
</g>
<g>
<title>java/lang/Class.forName0 (125 samples, 3.23%)</title><rect x="444.6" y="899.0" width="38.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.6" y="910.0">jav..</text>
</g>
<g>
<title>JVM_FindClassFromCaller (3 samples, 0.08%)</title><rect x="444.9" y="883.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="447.9" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (107 samples, 2.76%)</title><rect x="445.8" y="883.0" width="32.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="448.8" y="894.0">Ja..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="446.4" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="449.4" y="878.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (68 samples, 1.76%)</title><rect x="446.7" y="867.0" width="20.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="449.7" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (5 samples, 0.13%)</title><rect x="446.7" y="851.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="449.7" y="862.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.05%)</title><rect x="448.2" y="851.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="451.2" y="862.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (3 samples, 0.08%)</title><rect x="448.8" y="851.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="451.8" y="862.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (19 samples, 0.49%)</title><rect x="449.8" y="851.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="452.8" y="862.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (1 samples, 0.03%)</title><rect x="455.2" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="458.2" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="455.5" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="458.5" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="455.9" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="458.9" y="862.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (37 samples, 0.96%)</title><rect x="456.2" y="851.0" width="11.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="459.2" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.03%)</title><rect x="456.2" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="459.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::should_be_initialized() const (7 samples, 0.18%)</title><rect x="456.5" y="835.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="459.5" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.05%)</title><rect x="458.6" y="835.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="461.6" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (27 samples, 0.70%)</title><rect x="459.2" y="835.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.2" y="846.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (1 samples, 0.03%)</title><rect x="459.5" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="462.5" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (24 samples, 0.62%)</title><rect x="459.8" y="819.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="462.8" y="830.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (14 samples, 0.36%)</title><rect x="461.9" y="803.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="464.9" y="814.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (3 samples, 0.08%)</title><rect x="466.2" y="803.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="469.2" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="466.8" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.8" y="798.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="466.8" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.8" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="466.8" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.8" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="466.8" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.8" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="466.8" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.8" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="466.8" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.8" y="718.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="466.8" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.8" y="702.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="466.8" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.8" y="686.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="466.8" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.8" y="670.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="466.8" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.8" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="466.8" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="466.8" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.8" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="466.8" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="466.8" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.8" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="466.8" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="469.8" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="466.8" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="466.8" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="466.8" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.8" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="466.8" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.8" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="466.8" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="469.8" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="466.8" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.8" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="466.8" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="466.8" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.8" y="446.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.03%)</title><rect x="467.1" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.1" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="467.4" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="470.4" y="878.0"></text>
</g>
<g>
<title>VerifyClassname (2 samples, 0.05%)</title><rect x="467.7" y="867.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="470.7" y="878.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (2 samples, 0.05%)</title><rect x="467.7" y="851.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="470.7" y="862.0"></text>
</g>
<g>
<title>isJvmIdentifier (1 samples, 0.03%)</title><rect x="468.0" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="471.0" y="846.0"></text>
</g>
<g>
<title>VerifyFixClassname (2 samples, 0.05%)</title><rect x="468.3" y="867.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="471.3" y="878.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.03%)</title><rect x="468.7" y="851.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="471.7" y="862.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (7 samples, 0.18%)</title><rect x="469.0" y="867.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="472.0" y="878.0"></text>
</g>
<g>
<title>__strlen_sse2_pminub (5 samples, 0.13%)</title><rect x="471.1" y="867.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="474.1" y="878.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.03%)</title><rect x="472.6" y="867.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="475.6" y="878.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (6 samples, 0.15%)</title><rect x="472.9" y="867.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="475.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="472.9" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="475.9" y="862.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (2 samples, 0.05%)</title><rect x="473.2" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="476.2" y="862.0"></text>
</g>
<g>
<title>oopDesc::obj_field(int) const (3 samples, 0.08%)</title><rect x="473.8" y="851.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="476.8" y="862.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (11 samples, 0.28%)</title><rect x="474.7" y="867.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="477.7" y="878.0"></text>
</g>
<g>
<title>UNICODE::as_utf8(unsigned short*, int) (6 samples, 0.15%)</title><rect x="475.1" y="851.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="478.1" y="862.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="476.3" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="479.3" y="846.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="476.6" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="479.6" y="846.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.10%)</title><rect x="476.9" y="851.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="479.9" y="862.0"></text>
</g>
<g>
<title>strlen@plt (1 samples, 0.03%)</title><rect x="478.1" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="481.1" y="878.0"></text>
</g>
<g>
<title>VerifyClassname (1 samples, 0.03%)</title><rect x="478.4" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="481.4" y="894.0"></text>
</g>
<g>
<title>VerifyClassname@plt (1 samples, 0.03%)</title><rect x="478.7" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="481.7" y="894.0"></text>
</g>
<g>
<title>VerifyFixClassname (9 samples, 0.23%)</title><rect x="479.0" y="883.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="482.0" y="894.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="481.5" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.5" y="878.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="481.5" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.5" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="481.5" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.5" y="846.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="481.5" y="819.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.5" y="830.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="481.5" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="484.5" y="814.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="481.5" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="484.5" y="798.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="481.5" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.5" y="782.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="481.5" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="484.5" y="766.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="481.5" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.5" y="750.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="481.5" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.5" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="481.5" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.5" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="481.5" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="484.5" y="702.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="481.5" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="484.5" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="481.5" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.5" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="481.5" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.5" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="481.5" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.5" y="638.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="481.5" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.5" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="481.5" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.5" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="481.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.5" y="590.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="481.5" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.5" y="574.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="481.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="484.5" y="558.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="481.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="481.5" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="484.5" y="526.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (2 samples, 0.05%)</title><rect x="481.8" y="883.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="484.8" y="894.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (1 samples, 0.03%)</title><rect x="482.4" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="485.4" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeStaticMethod (330 samples, 8.52%)</title><rect x="482.7" y="947.0" width="100.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.7" y="958.0">clojure/lang..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (304 samples, 7.85%)</title><rect x="482.7" y="931.0" width="92.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.7" y="942.0">clojure/lan..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="504.9" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.9" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="504.9" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.9" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="504.9" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.9" y="894.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="504.9" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.9" y="878.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="504.9" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.9" y="862.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="504.9" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="507.9" y="846.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="504.9" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.9" y="830.0"></text>
</g>
<g>
<title>rcu_process_gp_end (1 samples, 0.03%)</title><rect x="504.9" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="504.9" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.getMethods (222 samples, 5.73%)</title><rect x="505.2" y="915.0" width="67.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.2" y="926.0">java/la..</text>
</g>
<g>
<title>java/lang/Class.checkMemberAccess (1 samples, 0.03%)</title><rect x="505.2" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (212 samples, 5.48%)</title><rect x="505.5" y="899.0" width="64.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.5" y="910.0">java/la..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (4 samples, 0.10%)</title><rect x="506.7" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="894.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (204 samples, 5.27%)</title><rect x="508.0" y="883.0" width="62.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.0" y="894.0">sun/re..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (199 samples, 5.14%)</title><rect x="508.3" y="867.0" width="60.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.3" y="878.0">java/l..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (197 samples, 5.09%)</title><rect x="508.9" y="851.0" width="60.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.9" y="862.0">java/l..</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="527.2" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="530.2" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.08%)</title><rect x="527.5" y="835.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="530.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.08%)</title><rect x="527.5" y="819.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.5" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (3 samples, 0.08%)</title><rect x="527.5" y="803.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.5" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (2 samples, 0.05%)</title><rect x="527.5" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (2 samples, 0.05%)</title><rect x="527.5" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="530.5" y="782.0"></text>
</g>
<g>
<title>G1AllocRegion::retire(bool) (2 samples, 0.05%)</title><rect x="527.5" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="530.5" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (2 samples, 0.05%)</title><rect x="527.5" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="530.5" y="750.0"></text>
</g>
<g>
<title>G1CollectorPolicy::add_region_to_incremental_cset_lhs(HeapRegion*) (2 samples, 0.05%)</title><rect x="527.5" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.5" y="734.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.03%)</title><rect x="527.5" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="530.5" y="718.0"></text>
</g>
<g>
<title>G1CollectorPolicy::predict_region_elapsed_time_ms(HeapRegion*, bool) (1 samples, 0.03%)</title><rect x="527.8" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>G1CollectorPolicy::predict_bytes_to_copy(HeapRegion*) (1 samples, 0.03%)</title><rect x="527.8" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="530.8" y="702.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.03%)</title><rect x="528.1" y="787.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="531.1" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (133 samples, 3.43%)</title><rect x="528.4" y="835.0" width="40.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.4" y="846.0">jav..</text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.05%)</title><rect x="568.3" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.3" y="830.0"></text>
</g>
<g>
<title>__irqentry_text_start (2 samples, 0.05%)</title><rect x="568.3" y="803.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.3" y="814.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="568.3" y="787.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="571.3" y="798.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.05%)</title><rect x="568.3" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.3" y="782.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.05%)</title><rect x="568.3" y="755.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.3" y="766.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.05%)</title><rect x="568.3" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.3" y="750.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="568.3" y="723.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.3" y="734.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.05%)</title><rect x="568.3" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.3" y="718.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.05%)</title><rect x="568.3" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.3" y="702.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.05%)</title><rect x="568.3" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.3" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="568.3" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.3" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="568.3" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.3" y="654.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="568.3" y="627.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.3" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="568.3" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="571.3" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="568.3" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="571.3" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="568.3" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.3" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="568.3" y="563.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.3" y="574.0"></text>
</g>
<g>
<title>tcp_filter (1 samples, 0.03%)</title><rect x="568.3" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="571.3" y="558.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="568.3" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="571.3" y="542.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="568.3" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="568.6" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.6" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.03%)</title><rect x="568.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="571.6" y="542.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="568.6" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.6" y="526.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (4 samples, 0.10%)</title><rect x="568.9" y="867.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (9 samples, 0.23%)</title><rect x="570.1" y="899.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (6 samples, 0.15%)</title><rect x="571.0" y="883.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.0" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (5 samples, 0.13%)</title><rect x="571.4" y="867.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.03%)</title><rect x="572.9" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="572.9" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="575.9" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="572.9" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="575.9" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="572.9" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="575.9" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.03%)</title><rect x="572.9" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="575.9" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.03%)</title><rect x="572.9" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.9" y="846.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="572.9" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="575.9" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="572.9" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="573.2" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.2" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="573.2" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.03%)</title><rect x="573.2" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="573.2" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.2" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="573.2" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.2" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.13%)</title><rect x="573.5" y="915.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="576.5" y="926.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="575.0" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.0" y="926.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="575.0" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="578.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="575.0" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.0" y="894.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="575.0" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.0" y="878.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="575.0" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.0" y="862.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="575.0" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.0" y="846.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="575.0" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.0" y="830.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="575.0" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.0" y="814.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="575.0" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.0" y="798.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="575.0" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="578.0" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="575.0" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.0" y="766.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="575.0" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.0" y="750.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="575.0" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="578.0" y="734.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="575.0" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.0" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="575.0" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.0" y="702.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="575.0" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="578.0" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="575.0" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.0" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="575.0" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.0" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="575.0" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.0" y="638.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (26 samples, 0.67%)</title><rect x="575.3" y="931.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.3" y="942.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (2 samples, 0.05%)</title><rect x="575.9" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.9" y="926.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArg (1 samples, 0.03%)</title><rect x="576.2" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.03%)</title><rect x="576.2" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.2" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (13 samples, 0.34%)</title><rect x="576.5" y="915.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.5" y="926.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.paramArgTypeMatch (3 samples, 0.08%)</title><rect x="579.6" y="899.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.6" y="910.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (5 samples, 0.13%)</title><rect x="580.5" y="915.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.5" y="926.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (4 samples, 0.10%)</title><rect x="580.5" y="899.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.5" y="910.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="581.7" y="899.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="584.7" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.10%)</title><rect x="582.0" y="915.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.0" y="926.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.10%)</title><rect x="582.0" y="899.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.0" y="910.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (4 samples, 0.10%)</title><rect x="582.0" y="883.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.0" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Var.get (24 samples, 0.62%)</title><rect x="583.2" y="947.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.2" y="958.0"></text>
</g>
<g>
<title>clojure/lang/Var.deref (24 samples, 0.62%)</title><rect x="583.2" y="931.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.2" y="942.0"></text>
</g>
<g>
<title>clojure/lang/Var.getThreadBinding (24 samples, 0.62%)</title><rect x="583.2" y="915.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="926.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap.entryAt (24 samples, 0.62%)</title><rect x="583.2" y="899.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.2" y="910.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$ArrayNode.find (12 samples, 0.31%)</title><rect x="583.2" y="883.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.2" y="894.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (12 samples, 0.31%)</title><rect x="583.2" y="867.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.2" y="878.0"></text>
</g>
<g>
<title>clojure/lang/MapEntry.create (1 samples, 0.03%)</title><rect x="583.5" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.5" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (9 samples, 0.23%)</title><rect x="583.8" y="851.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.8" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (2 samples, 0.05%)</title><rect x="586.0" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.0" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Util.pcequiv (2 samples, 0.05%)</title><rect x="586.0" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.0" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (1 samples, 0.03%)</title><rect x="586.3" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.3" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="586.3" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.3" y="798.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="586.3" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.3" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="586.3" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.3" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="586.3" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.3" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="586.3" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.3" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="586.3" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.3" y="718.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (1 samples, 0.03%)</title><rect x="586.6" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.6" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (10 samples, 0.26%)</title><rect x="586.9" y="883.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.9" y="894.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (5 samples, 0.13%)</title><rect x="586.9" y="867.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.9" y="878.0"></text>
</g>
<g>
<title>clojure/lang/MapEntry.create (2 samples, 0.05%)</title><rect x="587.5" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.5" y="862.0"></text>
</g>
<g>
<title>clojure/lang/MapEntry.&lt;init&gt; (2 samples, 0.05%)</title><rect x="587.5" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.5" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (1 samples, 0.03%)</title><rect x="588.1" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.1" y="862.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.implNextBytes (1 samples, 0.03%)</title><rect x="588.1" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.1" y="846.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.index (4 samples, 0.10%)</title><rect x="588.4" y="867.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.4" y="878.0"></text>
</g>
<g>
<title>clojure/lang/RT.baseLoader (4 samples, 0.10%)</title><rect x="588.4" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.4" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (1 samples, 0.03%)</title><rect x="589.6" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.6" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="589.6" y="851.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="592.6" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap.hash (2 samples, 0.05%)</title><rect x="589.9" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.9" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Util.hasheq (2 samples, 0.05%)</title><rect x="589.9" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.9" y="878.0"></text>
</g>
<g>
<title>hammer/core$insertIntoTable0.invoke (1,833 samples, 47.34%)</title><rect x="590.6" y="947.0" width="558.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.6" y="958.0">hammer/core$insertIntoTable0.invoke</text>
</g>
<g>
<title>hammer/core$insertIntoTable0.invokeStatic (1,833 samples, 47.34%)</title><rect x="590.6" y="931.0" width="558.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="942.0">hammer/core$insertIntoTable0.invokeStatic</text>
</g>
<g>
<title>clojure/core$into_array.invoke (33 samples, 0.85%)</title><rect x="591.2" y="915.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.2" y="926.0"></text>
</g>
<g>
<title>clojure/core$into_array.invokeStatic (33 samples, 0.85%)</title><rect x="591.2" y="899.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.2" y="910.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (8 samples, 0.21%)</title><rect x="591.2" y="883.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.2" y="894.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (8 samples, 0.21%)</title><rect x="591.2" y="867.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.2" y="878.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (7 samples, 0.18%)</title><rect x="591.2" y="851.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.2" y="862.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (7 samples, 0.18%)</title><rect x="591.2" y="835.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.2" y="846.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (7 samples, 0.18%)</title><rect x="591.2" y="819.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.2" y="830.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.seq (4 samples, 0.10%)</title><rect x="591.2" y="803.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="814.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="592.4" y="803.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="595.4" y="814.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqFrom (1 samples, 0.03%)</title><rect x="593.3" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.3" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.seq (1 samples, 0.03%)</title><rect x="593.3" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.3" y="846.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.chunkedSeq (1 samples, 0.03%)</title><rect x="593.3" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.3" y="830.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.&lt;init&gt; (1 samples, 0.03%)</title><rect x="593.3" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.3" y="814.0"></text>
</g>
<g>
<title>clojure/lang/ASeq.&lt;init&gt; (1 samples, 0.03%)</title><rect x="593.3" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.3" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqToTypedArray (25 samples, 0.65%)</title><rect x="593.6" y="883.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.6" y="894.0"></text>
</g>
<g>
<title>clojure/lang/RT.length (3 samples, 0.08%)</title><rect x="595.1" y="867.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.1" y="878.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.next (3 samples, 0.08%)</title><rect x="595.1" y="851.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.1" y="862.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.&lt;init&gt; (2 samples, 0.05%)</title><rect x="595.4" y="835.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.4" y="846.0"></text>
</g>
<g>
<title>clojure/lang/ASeq.&lt;init&gt; (2 samples, 0.05%)</title><rect x="595.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.4" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Obj.&lt;init&gt; (1 samples, 0.03%)</title><rect x="595.7" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.7" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.set (17 samples, 0.44%)</title><rect x="596.0" y="867.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.0" y="878.0"></text>
</g>
<g>
<title>JVM_SetArrayElement (14 samples, 0.36%)</title><rect x="596.3" y="851.0" width="4.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="599.3" y="862.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::write_ref_field_pre_work(unsigned int*, oopDesc*) (1 samples, 0.03%)</title><rect x="597.0" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="600.0" y="846.0"></text>
</g>
<g>
<title>Reflection::array_set(jvalue*, arrayOopDesc*, int, BasicType, Thread*) (10 samples, 0.26%)</title><rect x="597.3" y="835.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="600.3" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="600.3" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.3" y="846.0"></text>
</g>
<g>
<title>Reflection::unbox_for_regular_object(oopDesc*, jvalue*) (2 samples, 0.05%)</title><rect x="600.6" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.6" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeInstanceMethod (202 samples, 5.22%)</title><rect x="601.2" y="915.0" width="61.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.2" y="926.0">clojur..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (75 samples, 1.94%)</title><rect x="601.2" y="899.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.2" y="910.0">c..</text>
</g>
<g>
<title>java/lang/Class.getMethods (58 samples, 1.50%)</title><rect x="605.5" y="883.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (54 samples, 1.39%)</title><rect x="605.5" y="867.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.5" y="878.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (53 samples, 1.37%)</title><rect x="605.8" y="851.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.8" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (53 samples, 1.37%)</title><rect x="605.8" y="835.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.8" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.copy (53 samples, 1.37%)</title><rect x="605.8" y="819.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.8" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="610.4" y="803.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="613.4" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="610.4" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="613.4" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (2 samples, 0.05%)</title><rect x="610.4" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="613.4" y="782.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.03%)</title><rect x="610.4" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="613.4" y="766.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="610.7" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="613.7" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (36 samples, 0.93%)</title><rect x="611.0" y="803.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (4 samples, 0.10%)</title><rect x="621.9" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (4 samples, 0.10%)</title><rect x="621.9" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (2 samples, 0.05%)</title><rect x="622.6" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.6" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="623.2" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="623.2" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.03%)</title><rect x="623.2" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.2" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="623.2" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.2" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="623.2" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.2" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="623.5" y="883.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="626.5" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (107 samples, 2.76%)</title><rect x="624.1" y="899.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.1" y="910.0">cl..</text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (8 samples, 0.21%)</title><rect x="625.0" y="883.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.paramArgTypeMatch (4 samples, 0.10%)</title><rect x="626.2" y="867.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.2" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (3 samples, 0.08%)</title><rect x="627.4" y="883.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.4" y="894.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor2.invoke (3 samples, 0.08%)</title><rect x="627.4" y="867.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (89 samples, 2.30%)</title><rect x="628.3" y="883.0" width="27.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.3" y="894.0">j..</text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (89 samples, 2.30%)</title><rect x="628.3" y="867.0" width="27.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.3" y="878.0">s..</text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor2.invoke (89 samples, 2.30%)</title><rect x="628.3" y="851.0" width="27.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.3" y="862.0">s..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.prepare (89 samples, 2.30%)</title><rect x="628.3" y="835.0" width="27.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.3" y="846.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (89 samples, 2.30%)</title><rect x="628.3" y="819.0" width="27.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.3" y="830.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (56 samples, 1.45%)</title><rect x="628.6" y="803.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (56 samples, 1.45%)</title><rect x="628.6" y="787.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.process (54 samples, 1.39%)</title><rect x="628.6" y="771.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$LocalManualCache.get (1 samples, 0.03%)</title><rect x="629.0" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.get (1 samples, 0.03%)</title><rect x="629.0" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.get (1 samples, 0.03%)</title><rect x="629.0" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.lockedGetOrLoad (1 samples, 0.03%)</title><rect x="629.0" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.loadSync (1 samples, 0.03%)</title><rect x="629.0" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.0" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getAndRecordStats (1 samples, 0.03%)</title><rect x="629.0" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.0" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.storeLoadedValue (1 samples, 0.03%)</title><rect x="629.0" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.0" y="670.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="629.0" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.0" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$LocalManualCache.getIfPresent (52 samples, 1.34%)</title><rect x="629.3" y="755.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.getIfPresent (52 samples, 1.34%)</title><rect x="629.3" y="739.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.get (6 samples, 0.15%)</title><rect x="629.3" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getLiveEntry (4 samples, 0.10%)</title><rect x="629.3" y="707.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getEntry (4 samples, 0.10%)</title><rect x="629.3" y="691.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.equivalent (4 samples, 0.10%)</title><rect x="629.3" y="675.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.3" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doEquivalent (4 samples, 0.10%)</title><rect x="629.3" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.3" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.equals (4 samples, 0.10%)</title><rect x="629.3" y="643.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.3" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.equals (4 samples, 0.10%)</title><rect x="629.3" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (2 samples, 0.05%)</title><rect x="629.9" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.postReadCleanup (2 samples, 0.05%)</title><rect x="630.5" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.5" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.cleanUp (2 samples, 0.05%)</title><rect x="630.5" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.runLockedCleanup (1 samples, 0.03%)</title><rect x="630.5" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="630.5" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.runUnlockedCleanup (1 samples, 0.03%)</title><rect x="630.8" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.processPendingNotifications (1 samples, 0.03%)</title><rect x="630.8" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.8" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.hash (46 samples, 1.19%)</title><rect x="631.1" y="723.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.hash (46 samples, 1.19%)</title><rect x="631.1" y="707.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doHash (46 samples, 1.19%)</title><rect x="631.1" y="691.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.1" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.hashCode (46 samples, 1.19%)</title><rect x="631.1" y="675.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.1" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.hashCode (46 samples, 1.19%)</title><rect x="631.1" y="659.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.equals (1 samples, 0.03%)</title><rect x="633.5" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.03%)</title><rect x="633.8" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.8" y="654.0"></text>
</g>
<g>
<title>java/util/Objects.hash (36 samples, 0.93%)</title><rect x="634.1" y="643.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (36 samples, 0.93%)</title><rect x="634.1" y="627.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Boolean.hashCode (2 samples, 0.05%)</title><rect x="636.0" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Enum.hashCode (4 samples, 0.10%)</title><rect x="636.6" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (3 samples, 0.08%)</title><rect x="637.8" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.hashCode (3 samples, 0.08%)</title><rect x="638.7" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.hashCode (1 samples, 0.03%)</title><rect x="639.3" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="639.6" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (10 samples, 0.26%)</title><rect x="639.9" y="611.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (5 samples, 0.13%)</title><rect x="640.5" y="595.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList.size (4 samples, 0.10%)</title><rect x="640.5" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.5" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="641.8" y="579.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="644.8" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (3 samples, 0.08%)</title><rect x="642.1" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.1" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="642.7" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (6 samples, 0.15%)</title><rect x="643.0" y="611.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.0" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (1 samples, 0.03%)</title><rect x="644.5" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.5" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.5" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.5" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="644.8" y="611.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="647.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (2 samples, 0.05%)</title><rect x="645.1" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (2 samples, 0.05%)</title><rect x="645.1" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (2 samples, 0.05%)</title><rect x="645.1" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (6 samples, 0.15%)</title><rect x="645.7" y="803.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.7" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (5 samples, 0.13%)</title><rect x="646.0" y="787.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/ResultSets.newInstance (2 samples, 0.05%)</title><rect x="646.6" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/SinglePageResultSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="646.6" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.6" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.05%)</title><rect x="646.6" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.6" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/BlockingOperation.checkNotDriverThread (1 samples, 0.03%)</title><rect x="647.2" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.2" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (26 samples, 0.67%)</title><rect x="647.5" y="803.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.5" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (4 samples, 0.10%)</title><rect x="649.4" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.4" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (4 samples, 0.10%)</title><rect x="649.4" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.4" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.03%)</title><rect x="650.3" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.canProcess (3 samples, 0.08%)</title><rect x="650.6" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/type/reflect/GenericType.equals (2 samples, 0.05%)</title><rect x="650.9" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.9" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/reflect/TypeToken.equals (1 samples, 0.03%)</title><rect x="651.2" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.canProcess (2 samples, 0.05%)</title><rect x="651.5" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.5" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (7 samples, 0.18%)</title><rect x="652.1" y="787.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.1" y="798.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="654.2" y="787.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="657.2" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Modifier.isPublic (3 samples, 0.08%)</title><rect x="655.5" y="883.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.5" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="656.4" y="883.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="659.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/854487022.linkToTargetMethod (3 samples, 0.08%)</title><rect x="656.7" y="899.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (3 samples, 0.08%)</title><rect x="656.7" y="883.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.7" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector$$Lambda$5/1432536094.get$Lambda (3 samples, 0.08%)</title><rect x="656.7" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.7" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Reflector$$Lambda$5/1432536094.&lt;init&gt; (3 samples, 0.08%)</title><rect x="656.7" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.7" y="862.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.28%)</title><rect x="657.6" y="899.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.6" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (4 samples, 0.10%)</title><rect x="657.6" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="657.6" y="867.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.18%)</title><rect x="658.8" y="883.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (6 samples, 0.15%)</title><rect x="659.1" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (6 samples, 0.15%)</title><rect x="659.1" y="851.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (6 samples, 0.15%)</title><rect x="659.1" y="835.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.03%)</title><rect x="660.6" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.6" y="830.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.03%)</title><rect x="660.6" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (5 samples, 0.13%)</title><rect x="661.0" y="899.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="661.0" y="883.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.03%)</title><rect x="661.0" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="661.0" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.0" y="862.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.03%)</title><rect x="661.0" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.08%)</title><rect x="661.3" y="867.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.08%)</title><rect x="661.3" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.08%)</title><rect x="661.3" y="835.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.05%)</title><rect x="661.6" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.6" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.03%)</title><rect x="661.9" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.03%)</title><rect x="662.2" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.2" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.03%)</title><rect x="662.5" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.5" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.5" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.5" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.5" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="662.5" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.5" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.execute (535 samples, 13.82%)</title><rect x="662.8" y="915.0" width="163.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.8" y="926.0">com/datastax/oss/driv..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (535 samples, 13.82%)</title><rect x="662.8" y="899.0" width="163.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.8" y="910.0">com/datastax/oss/driv..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (3 samples, 0.08%)</title><rect x="662.8" y="883.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.8" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (3 samples, 0.08%)</title><rect x="662.8" y="867.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.8" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.process (3 samples, 0.08%)</title><rect x="662.8" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.8" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$LocalManualCache.getIfPresent (3 samples, 0.08%)</title><rect x="662.8" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.8" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.getIfPresent (3 samples, 0.08%)</title><rect x="662.8" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.8" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.hash (3 samples, 0.08%)</title><rect x="662.8" y="803.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.hash (3 samples, 0.08%)</title><rect x="662.8" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doHash (2 samples, 0.05%)</title><rect x="663.1" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.1" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.hashCode (2 samples, 0.05%)</title><rect x="663.1" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.hashCode (2 samples, 0.05%)</title><rect x="663.1" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (527 samples, 13.61%)</title><rect x="663.7" y="883.0" width="160.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.7" y="894.0">com/datastax/oss/dri..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (527 samples, 13.61%)</title><rect x="663.7" y="867.0" width="160.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.7" y="878.0">com/datastax/oss/dri..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.process (302 samples, 7.80%)</title><rect x="664.0" y="851.0" width="92.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.0" y="862.0">com/datasta..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toMessage (1 samples, 0.03%)</title><rect x="664.6" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.6" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.&lt;init&gt; (299 samples, 7.72%)</title><rect x="664.9" y="835.0" width="91.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.9" y="846.0">com/datasta..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/context/DriverContext.getRetryPolicy (13 samples, 0.34%)</title><rect x="666.7" y="819.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.7" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getRetryPolicies (13 samples, 0.34%)</title><rect x="666.7" y="803.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.7" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (13 samples, 0.34%)</title><rect x="666.7" y="787.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.7" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="668.0" y="771.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="671.0" y="782.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.10%)</title><rect x="668.6" y="771.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="671.6" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="669.5" y="755.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="672.5" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.08%)</title><rect x="669.8" y="771.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.8" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getNettyOptions (3 samples, 0.08%)</title><rect x="670.7" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.7" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (3 samples, 0.08%)</title><rect x="670.7" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="670.7" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (2 samples, 0.05%)</title><rect x="670.7" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.7" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="670.7" y="755.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="673.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="671.3" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="671.3" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="671.3" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="671.3" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="671.3" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.resolveExecutionProfile (2 samples, 0.05%)</title><rect x="671.6" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/config/DriverConfig.getDefaultProfile (1 samples, 0.03%)</title><rect x="671.6" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverConfig.getProfile (1 samples, 0.03%)</title><rect x="671.6" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableBiMap.containsKey (1 samples, 0.03%)</title><rect x="671.6" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.03%)</title><rect x="671.9" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toMessage (23 samples, 0.59%)</title><rect x="672.2" y="819.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.2" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/DefaultConsistencyLevel.getProtocolCode (2 samples, 0.05%)</title><rect x="672.5" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.5" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/DefaultConsistencyLevelRegistry.nameToCode (5 samples, 0.13%)</title><rect x="673.1" y="803.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.1" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (5 samples, 0.13%)</title><rect x="673.1" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (2 samples, 0.05%)</title><rect x="674.1" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.1" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smear (2 samples, 0.05%)</title><rect x="674.1" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getInt (4 samples, 0.10%)</title><rect x="674.7" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.7" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (4 samples, 0.10%)</title><rect x="674.7" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (4 samples, 0.10%)</title><rect x="674.7" y="771.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.7" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getString (3 samples, 0.08%)</title><rect x="675.9" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (3 samples, 0.08%)</title><rect x="675.9" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.08%)</title><rect x="675.9" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.9" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getConsistencyLevelRegistry (2 samples, 0.05%)</title><rect x="676.8" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (2 samples, 0.05%)</title><rect x="676.8" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.8" y="798.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="676.8" y="771.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="679.8" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="676.8" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="679.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="677.1" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.1" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getProtocolVersion (3 samples, 0.08%)</title><rect x="677.4" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/ChannelFactory.getProtocolVersion (1 samples, 0.03%)</title><rect x="677.4" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.4" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getChannelFactory (2 samples, 0.05%)</title><rect x="677.7" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.7" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getProtocolVersionRegistry (2 samples, 0.05%)</title><rect x="678.3" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.3" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (2 samples, 0.05%)</title><rect x="678.3" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="678.3" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="678.3" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="678.3" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getTimestampGenerator (1 samples, 0.03%)</title><rect x="678.9" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (1 samples, 0.03%)</title><rect x="678.9" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.9" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.scheduleTimeout (7 samples, 0.18%)</title><rect x="679.2" y="819.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (7 samples, 0.18%)</title><rect x="679.2" y="803.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.2" y="814.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.&lt;init&gt; (3 samples, 0.08%)</title><rect x="680.1" y="787.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.1" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.03%)</title><rect x="681.1" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.03%)</title><rect x="681.1" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.03%)</title><rect x="681.1" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getKeyspace (1 samples, 0.03%)</title><rect x="681.4" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.4" y="830.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.03%)</title><rect x="681.4" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.4" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="681.4" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.4" y="798.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.03%)</title><rect x="681.4" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.4" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/throttling/PassThroughRequestThrottler.register (231 samples, 5.97%)</title><rect x="681.7" y="819.0" width="70.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="830.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.onThrottleReady (231 samples, 5.97%)</title><rect x="681.7" y="803.0" width="70.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.7" y="814.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.sendRequest (162 samples, 4.18%)</title><rect x="681.7" y="787.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.7" y="798.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.write (152 samples, 3.93%)</title><rect x="682.0" y="771.0" width="46.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.0" y="782.0">com/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.writeAndFlush (152 samples, 3.93%)</title><rect x="682.0" y="755.0" width="46.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.0" y="766.0">com/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.enqueue (150 samples, 3.87%)</title><rect x="682.0" y="739.0" width="45.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.0" y="750.0">com/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.access$100 (147 samples, 3.80%)</title><rect x="682.3" y="723.0" width="44.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.3" y="734.0">com/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (147 samples, 3.80%)</title><rect x="682.3" y="707.0" width="44.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.3" y="718.0">com/..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (142 samples, 3.67%)</title><rect x="682.3" y="691.0" width="43.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.3" y="702.0">io/n..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (139 samples, 3.59%)</title><rect x="683.2" y="675.0" width="42.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.2" y="686.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (138 samples, 3.56%)</title><rect x="683.2" y="659.0" width="42.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.2" y="670.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (138 samples, 3.56%)</title><rect x="683.2" y="643.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.2" y="654.0">io/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (138 samples, 3.56%)</title><rect x="683.2" y="627.0" width="42.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.2" y="638.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (137 samples, 3.54%)</title><rect x="683.5" y="611.0" width="41.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.5" y="622.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (136 samples, 3.51%)</title><rect x="683.8" y="595.0" width="41.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.8" y="606.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPollArrayWrapper_interrupt (4 samples, 0.10%)</title><rect x="684.1" y="579.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="687.1" y="590.0"></text>
</g>
<g>
<title>__write (131 samples, 3.38%)</title><rect x="685.3" y="579.0" width="40.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="688.3" y="590.0">__w..</text>
</g>
<g>
<title>ret_from_sys_call (1 samples, 0.03%)</title><rect x="687.2" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="690.2" y="574.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.08%)</title><rect x="687.5" y="563.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="690.5" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="687.5" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="690.5" y="558.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="687.5" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.5" y="542.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="687.8" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>system_call_fastpath (121 samples, 3.12%)</title><rect x="688.4" y="563.0" width="36.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.4" y="574.0">sys..</text>
</g>
<g>
<title>sys_write (121 samples, 3.12%)</title><rect x="688.4" y="547.0" width="36.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.4" y="558.0">sys..</text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="688.4" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="691.4" y="542.0"></text>
</g>
<g>
<title>vfs_write (120 samples, 3.10%)</title><rect x="688.7" y="531.0" width="36.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.7" y="542.0">vfs..</text>
</g>
<g>
<title>do_sync_write (116 samples, 3.00%)</title><rect x="689.0" y="515.0" width="35.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="692.0" y="526.0">do_..</text>
</g>
<g>
<title>pipe_write (116 samples, 3.00%)</title><rect x="689.0" y="499.0" width="35.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.0" y="510.0">pip..</text>
</g>
<g>
<title>__wake_up_sync_key (106 samples, 2.74%)</title><rect x="689.9" y="483.0" width="32.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.9" y="494.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (106 samples, 2.74%)</title><rect x="689.9" y="467.0" width="32.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="692.9" y="478.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (106 samples, 2.74%)</title><rect x="689.9" y="451.0" width="32.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.9" y="462.0">_r..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="722.2" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.2" y="494.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.05%)</title><rect x="722.8" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="723.1" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.1" y="478.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="723.1" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.1" y="462.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="723.4" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.4" y="494.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (2 samples, 0.05%)</title><rect x="723.7" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.7" y="494.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="723.7" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.7" y="478.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="723.7" y="451.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.7" y="462.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.03%)</title><rect x="724.3" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.3" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="724.6" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.6" y="526.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="724.9" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.9" y="510.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.03%)</title><rect x="725.3" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.3" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.03%)</title><rect x="725.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (5 samples, 0.13%)</title><rect x="725.6" y="691.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.6" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.03%)</title><rect x="726.2" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casNext (2 samples, 0.05%)</title><rect x="726.5" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="727.1" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.03%)</title><rect x="727.4" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.newPromise (2 samples, 0.05%)</title><rect x="727.7" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.7" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.newPromise (2 samples, 0.05%)</title><rect x="727.7" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.7" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.&lt;init&gt; (2 samples, 0.05%)</title><rect x="727.7" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.7" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (4 samples, 0.10%)</title><rect x="728.3" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (3 samples, 0.08%)</title><rect x="728.6" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="729.2" y="739.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="732.2" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="729.2" y="723.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="732.2" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getChannel (3 samples, 0.08%)</title><rect x="729.5" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.5" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.next (1 samples, 0.03%)</title><rect x="729.8" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.8" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.next (1 samples, 0.03%)</title><rect x="729.8" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.8" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.preAcquireId (1 samples, 0.03%)</title><rect x="729.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.preAcquireId (1 samples, 0.03%)</title><rect x="729.8" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.8" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.preAcquire (1 samples, 0.03%)</title><rect x="729.8" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.03%)</title><rect x="729.8" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="730.1" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.1" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (1 samples, 0.03%)</title><rect x="730.4" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (1 samples, 0.03%)</title><rect x="730.4" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.4" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (1 samples, 0.03%)</title><rect x="730.4" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.4" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (1 samples, 0.03%)</title><rect x="730.7" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.7" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/LoadBalancingPolicyWrapper.newQueryPlan (69 samples, 1.78%)</title><rect x="731.0" y="787.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.0" y="798.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.newQueryPlan (69 samples, 1.78%)</title><rect x="731.0" y="771.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.0" y="782.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy.getReplicas (50 samples, 1.29%)</title><rect x="731.0" y="755.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getMetadataManager (1 samples, 0.03%)</title><rect x="733.2" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (1 samples, 0.03%)</title><rect x="733.2" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="733.2" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="733.2" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="733.2" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.03%)</title><rect x="733.2" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.getRoutingKeyspace (10 samples, 0.26%)</title><rect x="733.5" y="739.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.get (1 samples, 0.03%)</title><rect x="735.6" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.get (1 samples, 0.03%)</title><rect x="735.6" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.size (2 samples, 0.05%)</title><rect x="735.9" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.9" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/DefaultMetadata.getTokenMap (2 samples, 0.05%)</title><rect x="736.5" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.5" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.05%)</title><rect x="736.5" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.5" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="736.5" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.5" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.03%)</title><rect x="736.8" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getReplicas (21 samples, 0.54%)</title><rect x="737.1" y="739.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getKeyspaceMap (16 samples, 0.41%)</title><rect x="737.1" y="723.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (16 samples, 0.41%)</title><rect x="737.1" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (14 samples, 0.36%)</title><rect x="737.7" y="691.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.hashCode (5 samples, 0.13%)</title><rect x="737.7" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.13%)</title><rect x="737.7" y="659.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.7" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smear (1 samples, 0.03%)</title><rect x="739.3" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.03%)</title><rect x="739.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.3" y="670.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="739.3" y="643.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="742.3" y="654.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="739.3" y="627.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="742.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (4 samples, 0.10%)</title><rect x="739.6" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.6" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (4 samples, 0.10%)</title><rect x="739.6" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="739.6" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.08%)</title><rect x="739.9" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (4 samples, 0.10%)</title><rect x="740.8" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.8" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntryIterator.next (1 samples, 0.03%)</title><rect x="740.8" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.8" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntryIterator.next (1 samples, 0.03%)</title><rect x="740.8" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.8" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.nextNode (1 samples, 0.03%)</title><rect x="740.8" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.iterator (1 samples, 0.03%)</title><rect x="741.1" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (2 samples, 0.05%)</title><rect x="741.4" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.4" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="741.4" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.4" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (5 samples, 0.13%)</title><rect x="742.0" y="723.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (2 samples, 0.05%)</title><rect x="742.0" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (1 samples, 0.03%)</title><rect x="742.0" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.0" y="702.0"></text>
</g>
<g>
<title>java/util/Collections.binarySearch (1 samples, 0.03%)</title><rect x="742.3" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.3" y="702.0"></text>
</g>
<g>
<title>java/util/Collections.indexedBinarySearch (1 samples, 0.03%)</title><rect x="742.3" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.3" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3TokenFactory.hash (3 samples, 0.08%)</title><rect x="742.6" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3TokenFactory.murmur (3 samples, 0.08%)</title><rect x="742.6" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.6" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3TokenFactory.getblock (1 samples, 0.03%)</title><rect x="742.9" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="742.9" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="742.9" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="743.2" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getKeyspace (7 samples, 0.18%)</title><rect x="743.5" y="739.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.5" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (7 samples, 0.18%)</title><rect x="743.5" y="723.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.5" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.18%)</title><rect x="743.5" y="707.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.5" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (7 samples, 0.18%)</title><rect x="743.5" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.5" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.get (2 samples, 0.05%)</title><rect x="745.7" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (3 samples, 0.08%)</title><rect x="746.3" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.08%)</title><rect x="746.3" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.hashCode (3 samples, 0.08%)</title><rect x="746.3" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isUnhealthy (12 samples, 0.31%)</title><rect x="747.2" y="755.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isBusy (12 samples, 0.31%)</title><rect x="747.2" y="739.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (12 samples, 0.31%)</title><rect x="747.2" y="723.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.2" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.getInFlight (12 samples, 0.31%)</title><rect x="747.2" y="707.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.getInFlight (11 samples, 0.28%)</title><rect x="747.5" y="691.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.getInFlight (1 samples, 0.03%)</title><rect x="750.5" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.getInFlight (1 samples, 0.03%)</title><rect x="750.5" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.rotate (1 samples, 0.03%)</title><rect x="750.9" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.9" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.bubbleDown (1 samples, 0.03%)</title><rect x="750.9" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.swap (1 samples, 0.03%)</title><rect x="750.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="751.2" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndUpdate (2 samples, 0.05%)</title><rect x="751.5" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy$$Lambda$135/665102028.applyAsInt (1 samples, 0.03%)</title><rect x="751.8" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.05%)</title><rect x="752.1" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.1" y="830.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="752.1" y="803.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="755.1" y="814.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="752.1" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="755.1" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="752.4" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.13%)</title><rect x="752.7" y="819.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.7" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="752.7" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.7" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.10%)</title><rect x="753.0" y="803.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.05%)</title><rect x="753.3" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.03%)</title><rect x="753.9" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/854487022.linkToTargetMethod (3 samples, 0.08%)</title><rect x="754.2" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (3 samples, 0.08%)</title><rect x="754.2" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.2" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$$Lambda$242/1563699545.get$Lambda (3 samples, 0.08%)</title><rect x="754.2" y="787.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.03%)</title><rect x="755.1" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.03%)</title><rect x="755.1" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="755.4" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (2 samples, 0.05%)</title><rect x="755.4" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.&lt;init&gt; (1 samples, 0.03%)</title><rect x="755.7" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.7" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.&lt;init&gt; (1 samples, 0.03%)</title><rect x="756.0" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.0" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (223 samples, 5.76%)</title><rect x="756.3" y="851.0" width="68.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.3" y="862.0">com/dat..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (222 samples, 5.73%)</title><rect x="756.6" y="835.0" width="67.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.6" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (3 samples, 0.08%)</title><rect x="756.6" y="819.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (219 samples, 5.66%)</title><rect x="757.6" y="819.0" width="66.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.6" y="830.0">java/ut..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="776.8" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.8" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="776.8" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.8" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="776.8" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.8" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="776.8" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.8" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="776.8" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.8" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="776.8" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (129 samples, 3.33%)</title><rect x="777.1" y="803.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.1" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (129 samples, 3.33%)</title><rect x="777.1" y="787.0" width="39.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.1" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (5 samples, 0.13%)</title><rect x="777.1" y="771.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.1" y="782.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="778.3" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (124 samples, 3.20%)</title><rect x="778.6" y="771.0" width="37.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.6" y="782.0">jav..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (124 samples, 3.20%)</title><rect x="778.6" y="755.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.6" y="766.0">sun..</text>
</g>
<g>
<title>Unsafe_Park (115 samples, 2.97%)</title><rect x="778.9" y="739.0" width="35.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="781.9" y="750.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="781.0" y="723.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="784.0" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.28%)</title><rect x="781.6" y="723.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="784.6" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="784.1" y="707.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="787.1" y="718.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.05%)</title><rect x="784.1" y="691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="787.1" y="702.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="784.7" y="707.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="787.7" y="718.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="785.0" y="723.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="788.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (1 samples, 0.03%)</title><rect x="785.6" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="788.6" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.21%)</title><rect x="785.9" y="723.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="788.9" y="734.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.05%)</title><rect x="786.2" y="707.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.2" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.05%)</title><rect x="786.2" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="789.2" y="702.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="786.8" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.8" y="718.0"></text>
</g>
<g>
<title>system_call_fastpath (4 samples, 0.10%)</title><rect x="787.1" y="707.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.1" y="718.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.10%)</title><rect x="787.1" y="691.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.1" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="787.1" y="675.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="790.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.08%)</title><rect x="787.4" y="659.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.4" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.03%)</title><rect x="788.0" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="791.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (70 samples, 1.81%)</title><rect x="788.3" y="723.0" width="21.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="791.3" y="734.0">_..</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="790.8" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.8" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="790.8" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="793.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.05%)</title><rect x="791.1" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.1" y="718.0"></text>
</g>
<g>
<title>sysret_audit (7 samples, 0.18%)</title><rect x="791.7" y="707.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.7" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.15%)</title><rect x="791.7" y="691.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.7" y="702.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="792.9" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.9" y="686.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="793.2" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.2" y="686.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="793.5" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="796.5" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (52 samples, 1.34%)</title><rect x="793.8" y="707.0" width="15.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.8" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="793.8" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="796.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (51 samples, 1.32%)</title><rect x="794.1" y="691.0" width="15.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.1" y="702.0"></text>
</g>
<g>
<title>do_futex (50 samples, 1.29%)</title><rect x="794.4" y="675.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.4" y="686.0"></text>
</g>
<g>
<title>futex_wait (46 samples, 1.19%)</title><rect x="795.3" y="659.0" width="14.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.3" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (40 samples, 1.03%)</title><rect x="795.7" y="643.0" width="12.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.7" y="654.0"></text>
</g>
<g>
<title>schedule (39 samples, 1.01%)</title><rect x="796.0" y="627.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="799.0" y="638.0"></text>
</g>
<g>
<title>__schedule (37 samples, 0.96%)</title><rect x="796.3" y="611.0" width="11.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="799.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (33 samples, 0.85%)</title><rect x="796.9" y="595.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.9" y="606.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="806.9" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.9" y="606.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="807.2" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.2" y="606.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="807.2" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.2" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="807.2" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.2" y="574.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="807.2" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="810.2" y="558.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="807.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.2" y="542.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="807.2" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.2" y="526.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="807.2" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.2" y="510.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="807.2" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="810.2" y="494.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="807.2" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="810.2" y="478.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="807.2" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.2" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="807.2" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="810.2" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="807.2" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.2" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="807.2" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="810.2" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="807.2" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="810.2" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="807.2" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="807.2" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="807.2" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.2" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="807.2" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="810.2" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="807.2" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="810.2" y="318.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="807.2" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.2" y="302.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="807.5" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="810.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.10%)</title><rect x="807.8" y="643.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="808.5" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="811.5" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="808.8" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.8" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="809.1" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.1" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="809.4" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.4" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="809.7" y="723.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="812.7" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.08%)</title><rect x="810.3" y="723.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="813.3" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.08%)</title><rect x="811.2" y="723.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="814.2" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="812.1" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="815.1" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="812.4" y="723.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="815.4" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.08%)</title><rect x="813.0" y="723.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="816.0" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.10%)</title><rect x="813.9" y="739.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="816.9" y="750.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="815.2" y="739.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="818.2" y="750.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="815.2" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.2" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="815.5" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="818.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="815.8" y="739.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="818.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (26 samples, 0.67%)</title><rect x="816.4" y="803.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (5 samples, 0.13%)</title><rect x="824.3" y="883.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.3" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (4 samples, 0.10%)</title><rect x="824.6" y="867.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.6" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/type/reflect/GenericType.equals (1 samples, 0.03%)</title><rect x="825.5" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/reflect/TypeToken.equals (1 samples, 0.03%)</title><rect x="825.5" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.5" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPreparedStatement.bind (55 samples, 1.42%)</title><rect x="825.8" y="915.0" width="16.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.8" y="926.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.&lt;init&gt; (4 samples, 0.10%)</title><rect x="825.8" y="899.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.8" y="910.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/data/ValuesHelper.encodePreparedValues (51 samples, 1.32%)</title><rect x="827.0" y="899.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.0" y="910.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.get (4 samples, 0.10%)</title><rect x="828.3" y="883.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.3" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.encode (12 samples, 0.31%)</title><rect x="829.5" y="883.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.5" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.encode (12 samples, 0.31%)</title><rect x="829.5" y="867.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.5" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.05%)</title><rect x="829.8" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.8" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.03%)</title><rect x="830.1" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.1" y="846.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (9 samples, 0.23%)</title><rect x="830.4" y="851.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.4" y="862.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (9 samples, 0.23%)</title><rect x="830.4" y="835.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.4" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.03%)</title><rect x="830.4" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.4" y="830.0"></text>
</g>
<g>
<title>java/nio/charset/CoderResult.isOverflow (2 samples, 0.05%)</title><rect x="830.7" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeBufferLoop (3 samples, 0.08%)</title><rect x="831.3" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (3 samples, 0.08%)</title><rect x="832.2" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeBufferLoop (2 samples, 0.05%)</title><rect x="832.5" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="832.8" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (1 samples, 0.03%)</title><rect x="832.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.8" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (1 samples, 0.03%)</title><rect x="833.1" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.1" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (1 samples, 0.03%)</title><rect x="833.1" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="833.1" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="833.1" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="833.1" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.1" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/registry/CachingCodecRegistry.codecFor (30 samples, 0.77%)</title><rect x="833.4" y="883.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.4" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (3 samples, 0.08%)</title><rect x="835.3" y="867.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.3" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (2 samples, 0.05%)</title><rect x="835.3" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.03%)</title><rect x="835.9" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.9" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_2 (1 samples, 0.03%)</title><rect x="835.9" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.9" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/BlobCodec.accepts (4 samples, 0.10%)</title><rect x="836.2" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.2" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/BlobCodec.encode (3 samples, 0.08%)</title><rect x="837.4" y="867.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.4" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.accepts (2 samples, 0.05%)</title><rect x="838.3" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.3" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.encode (4 samples, 0.10%)</title><rect x="838.9" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.9" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.accepts (5 samples, 0.13%)</title><rect x="840.1" y="867.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.1" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (2 samples, 0.05%)</title><rect x="841.7" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.7" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="842.3" y="867.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="845.3" y="878.0"></text>
</g>
<g>
<title>hammer/core$getInsertStatementBind.invoke (172 samples, 4.44%)</title><rect x="842.6" y="915.0" width="52.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.6" y="926.0">hamme..</text>
</g>
<g>
<title>hammer/core$getInsertStatementBind.invokeStatic (172 samples, 4.44%)</title><rect x="842.6" y="899.0" width="52.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.6" y="910.0">hamme..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (35 samples, 0.90%)</title><rect x="842.6" y="883.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.6" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (19 samples, 0.49%)</title><rect x="842.6" y="867.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.6" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromInternal (2 samples, 0.05%)</title><rect x="842.6" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.6" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isDoubleQuoted (3 samples, 0.08%)</title><rect x="843.2" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.2" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isQuoted (3 samples, 0.08%)</title><rect x="843.2" y="835.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="843.8" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.8" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (7 samples, 0.18%)</title><rect x="844.1" y="851.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.1" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (7 samples, 0.18%)</title><rect x="844.1" y="835.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.1" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (4 samples, 0.10%)</title><rect x="844.1" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="845.0" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="848.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="845.3" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="845.3" y="803.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.3" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="845.6" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.18%)</title><rect x="846.2" y="851.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.18%)</title><rect x="846.2" y="835.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.10%)</title><rect x="846.2" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.10%)</title><rect x="846.2" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.2" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.05%)</title><rect x="846.2" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.2" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="846.8" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.8" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.08%)</title><rect x="847.5" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.5" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (16 samples, 0.41%)</title><rect x="848.4" y="867.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.4" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (16 samples, 0.41%)</title><rect x="848.4" y="851.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.4" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.&lt;init&gt; (16 samples, 0.41%)</title><rect x="848.4" y="835.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.&lt;init&gt; (16 samples, 0.41%)</title><rect x="848.4" y="819.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.4" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (2 samples, 0.05%)</title><rect x="850.8" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (2 samples, 0.05%)</title><rect x="851.4" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkPositionIndex (3 samples, 0.08%)</title><rect x="852.0" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.0" y="814.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="852.9" y="803.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="855.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/insert/OngoingValues.value (86 samples, 2.22%)</title><rect x="853.2" y="883.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.2" y="894.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (32 samples, 0.83%)</title><rect x="853.2" y="867.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.2" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isDoubleQuoted (11 samples, 0.28%)</title><rect x="853.2" y="851.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.2" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isQuoted (11 samples, 0.28%)</title><rect x="853.2" y="835.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.18%)</title><rect x="854.5" y="819.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.5" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (19 samples, 0.49%)</title><rect x="856.6" y="851.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.6" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (15 samples, 0.39%)</title><rect x="857.2" y="835.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.2" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (14 samples, 0.36%)</title><rect x="857.2" y="819.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="860.9" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="861.5" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="861.5" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="861.5" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="861.5" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="861.8" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="862.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="862.4" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="862.4" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="862.4" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="862.4" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.value (54 samples, 1.39%)</title><rect x="863.0" y="867.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.0" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/ImmutableCollections.append (46 samples, 1.19%)</title><rect x="863.0" y="851.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.0" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.build (22 samples, 0.57%)</title><rect x="863.0" y="835.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.0" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.fromEntryArray (21 samples, 0.54%)</title><rect x="863.3" y="819.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.3" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.checkNoConflictInKeyBucket (1 samples, 0.03%)</title><rect x="866.0" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.0" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.equals (1 samples, 0.03%)</title><rect x="866.0" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.makeImmutable (11 samples, 0.28%)</title><rect x="866.4" y="803.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="869.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntry.&lt;init&gt; (11 samples, 0.28%)</title><rect x="866.4" y="787.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.4" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.&lt;init&gt; (11 samples, 0.28%)</title><rect x="866.4" y="771.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.4" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.hashCode (1 samples, 0.03%)</title><rect x="869.4" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.4" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.put (12 samples, 0.31%)</title><rect x="869.7" y="835.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.7" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getValue (1 samples, 0.03%)</title><rect x="869.7" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.7" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.put (7 samples, 0.18%)</title><rect x="870.0" y="819.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.0" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.ensureCapacity (7 samples, 0.18%)</title><rect x="870.0" y="803.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.0" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.15%)</title><rect x="870.3" y="787.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getKey (1 samples, 0.03%)</title><rect x="870.3" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.3" y="782.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.13%)</title><rect x="870.6" y="771.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="873.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.entryOf (3 samples, 0.08%)</title><rect x="872.1" y="819.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.1" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/CollectPreconditions.checkEntryNotNull (2 samples, 0.05%)</title><rect x="872.4" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.4" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="873.1" y="819.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="876.1" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.builder (3 samples, 0.08%)</title><rect x="873.4" y="835.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.&lt;init&gt; (3 samples, 0.08%)</title><rect x="873.4" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.4" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.&lt;init&gt; (3 samples, 0.08%)</title><rect x="873.4" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getKey (2 samples, 0.05%)</title><rect x="873.7" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.7" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.entrySet (7 samples, 0.18%)</title><rect x="874.3" y="835.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.3" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.createEntrySet (5 samples, 0.13%)</title><rect x="874.3" y="819.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.3" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.&lt;init&gt; (5 samples, 0.13%)</title><rect x="874.3" y="803.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.3" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.asImmutableList (4 samples, 0.10%)</title><rect x="874.3" y="787.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.asImmutableList (4 samples, 0.10%)</title><rect x="874.3" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.&lt;init&gt; (4 samples, 0.10%)</title><rect x="874.3" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.2" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.2" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.2" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.2" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getValue (1 samples, 0.03%)</title><rect x="875.2" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.2" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.5" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.5" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.fromEntryArray (1 samples, 0.03%)</title><rect x="875.5" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.5" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableBiMap.createEntrySet (2 samples, 0.05%)</title><rect x="875.8" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.8" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableSet.of (1 samples, 0.03%)</title><rect x="875.8" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableSet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="875.8" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Maps.immutableEntry (1 samples, 0.03%)</title><rect x="876.1" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.1" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="876.1" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.iterator (2 samples, 0.05%)</title><rect x="876.4" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (2 samples, 0.05%)</title><rect x="876.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="879.4" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (2 samples, 0.05%)</title><rect x="876.4" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.listIterator (2 samples, 0.05%)</title><rect x="876.4" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.4" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Iterators.forArray (2 samples, 0.05%)</title><rect x="876.4" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.4" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkPositionIndex (1 samples, 0.03%)</title><rect x="876.4" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.4" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Iterators$ArrayItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="876.7" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.7" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="876.7" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.&lt;init&gt; (8 samples, 0.21%)</title><rect x="877.0" y="851.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.0" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkArgument (5 samples, 0.13%)</title><rect x="877.6" y="835.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.6" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.append (3 samples, 0.08%)</title><rect x="877.6" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/ImmutableCollections.append (2 samples, 0.05%)</title><rect x="878.5" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.5" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/UnmodifiableIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="879.2" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.2" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.appendIds (1 samples, 0.03%)</title><rect x="879.5" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.5" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.build (46 samples, 1.19%)</title><rect x="879.8" y="883.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.8" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatementBuilder.build (3 samples, 0.08%)</title><rect x="879.8" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.8" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (3 samples, 0.08%)</title><rect x="879.8" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.8" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.builder (43 samples, 1.11%)</title><rect x="880.7" y="867.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.7" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.asCql (43 samples, 1.11%)</title><rect x="880.7" y="851.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.7" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.append (7 samples, 0.18%)</title><rect x="880.7" y="835.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.7" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultBindMarker.appendTo (1 samples, 0.03%)</title><rect x="880.7" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="880.7" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.7" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="880.7" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.7" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="880.7" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.7" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="880.7" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.7" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.next (2 samples, 0.05%)</title><rect x="881.0" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.0" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.get (1 samples, 0.03%)</title><rect x="881.3" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.3" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap$Values.get (1 samples, 0.03%)</title><rect x="881.3" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (1 samples, 0.03%)</title><rect x="881.6" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (1 samples, 0.03%)</title><rect x="881.6" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (1 samples, 0.03%)</title><rect x="881.6" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (1 samples, 0.03%)</title><rect x="881.6" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="881.6" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.08%)</title><rect x="881.9" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.08%)</title><rect x="881.9" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="882.2" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.2" y="798.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.03%)</title><rect x="882.5" y="787.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="885.5" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.appendIds (25 samples, 0.65%)</title><rect x="882.8" y="835.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.8" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (5 samples, 0.13%)</title><rect x="882.8" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.8" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (5 samples, 0.13%)</title><rect x="882.8" y="803.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (4 samples, 0.10%)</title><rect x="883.1" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (1 samples, 0.03%)</title><rect x="883.1" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="883.4" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="883.4" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="883.4" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="883.4" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.4" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="884.0" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.next (3 samples, 0.08%)</title><rect x="884.3" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.3" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.get (3 samples, 0.08%)</title><rect x="884.3" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap$Values.get (2 samples, 0.05%)</title><rect x="884.6" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.6" y="798.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="884.9" y="771.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="887.9" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet.iterator (12 samples, 0.31%)</title><rect x="885.2" y="819.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.2" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet.iterator (12 samples, 0.31%)</title><rect x="885.2" y="803.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.2" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (7 samples, 0.18%)</title><rect x="885.2" y="787.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.2" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (7 samples, 0.18%)</title><rect x="885.2" y="771.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.2" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (7 samples, 0.18%)</title><rect x="885.2" y="755.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.&lt;init&gt; (4 samples, 0.10%)</title><rect x="886.2" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="886.8" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/UnmodifiableListIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="886.8" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.8" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/UnmodifiableIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="886.8" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableSet.asList (5 samples, 0.13%)</title><rect x="887.4" y="787.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.13%)</title><rect x="888.9" y="819.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.13%)</title><rect x="888.9" y="803.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.9" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.13%)</title><rect x="888.9" y="787.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.9" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.08%)</title><rect x="889.5" y="771.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.5" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.qualify (7 samples, 0.18%)</title><rect x="890.4" y="835.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (5 samples, 0.13%)</title><rect x="890.4" y="819.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.4" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (5 samples, 0.13%)</title><rect x="890.4" y="803.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (4 samples, 0.10%)</title><rect x="890.4" y="787.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.05%)</title><rect x="890.4" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="891.0" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="891.0" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.0" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="891.6" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="892.0" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="892.0" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.0" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="892.0" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (1 samples, 0.03%)</title><rect x="892.0" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.03%)</title><rect x="892.3" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.values (3 samples, 0.08%)</title><rect x="892.6" y="835.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.6" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.createValues (3 samples, 0.08%)</title><rect x="892.6" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap$Values.&lt;init&gt; (3 samples, 0.08%)</title><rect x="892.6" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.&lt;init&gt; (3 samples, 0.08%)</title><rect x="892.6" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableCollection.&lt;init&gt; (3 samples, 0.08%)</title><rect x="892.6" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.08%)</title><rect x="892.6" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.08%)</title><rect x="892.6" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.6" y="750.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.08%)</title><rect x="892.6" y="723.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="895.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="893.5" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="893.5" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.5" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="893.5" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.5" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="893.5" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="896.5" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="893.5" y="771.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="896.5" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="893.5" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="896.5" y="766.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.03%)</title><rect x="893.5" y="739.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="896.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smear (4 samples, 0.10%)</title><rect x="893.8" y="883.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.8" y="894.0"></text>
</g>
<g>
<title>hammer/core$writeToLocalDisk.invoke (834 samples, 21.54%)</title><rect x="895.0" y="915.0" width="254.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.0" y="926.0">hammer/core$writeToLocalDisk.invoke</text>
</g>
<g>
<title>hammer/core$writeToLocalDisk.invokeStatic (834 samples, 21.54%)</title><rect x="895.0" y="899.0" width="254.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.0" y="910.0">hammer/core$writeToLocalDisk.invok..</text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.next (1 samples, 0.03%)</title><rect x="896.5" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.5" y="894.0"></text>
</g>
<g>
<title>clojure/lang/RestFn.invoke (44 samples, 1.14%)</title><rect x="896.8" y="883.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="894.0"></text>
</g>
<g>
<title>clojure/core$str.doInvoke (26 samples, 0.67%)</title><rect x="898.0" y="867.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.0" y="878.0"></text>
</g>
<g>
<title>clojure/core$str.invokeStatic (26 samples, 0.67%)</title><rect x="898.0" y="851.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.0" y="862.0"></text>
</g>
<g>
<title>clojure/core$str$fn__5466.invoke (26 samples, 0.67%)</title><rect x="898.0" y="835.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.0" y="846.0"></text>
</g>
<g>
<title>clojure/core$next__5386.invokeStatic (1 samples, 0.03%)</title><rect x="898.0" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.0" y="830.0"></text>
</g>
<g>
<title>clojure/lang/RT.next (1 samples, 0.03%)</title><rect x="898.0" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.0" y="814.0"></text>
</g>
<g>
<title>clojure/core$str.invokeStatic (20 samples, 0.52%)</title><rect x="898.4" y="819.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.4" y="830.0"></text>
</g>
<g>
<title>java/util/UUID.toString (19 samples, 0.49%)</title><rect x="898.7" y="803.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.08%)</title><rect x="898.7" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.7" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.08%)</title><rect x="898.7" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.7" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.08%)</title><rect x="898.7" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.7" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="899.0" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.0" y="750.0"></text>
</g>
<g>
<title>java/util/UUID.digits (16 samples, 0.41%)</title><rect x="899.6" y="787.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.toHexString (3 samples, 0.08%)</title><rect x="899.9" y="771.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.toUnsignedString0 (3 samples, 0.08%)</title><rect x="899.9" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="900.2" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.28%)</title><rect x="900.8" y="771.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.21%)</title><rect x="901.4" y="755.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="902.0" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.0" y="750.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.03%)</title><rect x="902.6" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="905.6" y="750.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="902.9" y="739.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="905.9" y="750.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="903.8" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="906.8" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="904.1" y="771.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="907.1" y="782.0"></text>
</g>
<g>
<title>clojure/lang/ArraySeq.next (5 samples, 0.13%)</title><rect x="904.4" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.4" y="830.0"></text>
</g>
<g>
<title>clojure/core$str.getRequiredArity (2 samples, 0.05%)</title><rect x="906.0" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.0" y="878.0"></text>
</g>
<g>
<title>clojure/lang/ArraySeq.create (1 samples, 0.03%)</title><rect x="906.6" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="909.6" y="878.0"></text>
</g>
<g>
<title>clojure/lang/ArraySeq.&lt;init&gt; (1 samples, 0.03%)</title><rect x="906.6" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.6" y="862.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="906.6" y="835.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="909.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.toString (5 samples, 0.13%)</title><rect x="906.9" y="867.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.9" y="878.0"></text>
</g>
<g>
<title>java/util/UUID.toString (4 samples, 0.10%)</title><rect x="908.4" y="867.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.4" y="878.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="909.6" y="867.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="912.6" y="878.0"></text>
</g>
<g>
<title>java/io/File.&lt;init&gt; (6 samples, 0.15%)</title><rect x="910.2" y="883.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.2" y="894.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.normalize (4 samples, 0.10%)</title><rect x="910.2" y="867.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.10%)</title><rect x="910.2" y="851.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.2" y="862.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (1 samples, 0.03%)</title><rect x="910.2" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.2" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeInstanceMethod (2 samples, 0.05%)</title><rect x="910.5" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.5" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.&lt;init&gt; (1 samples, 0.03%)</title><rect x="911.2" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.2" y="846.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.prefixLength (2 samples, 0.05%)</title><rect x="911.5" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="911.5" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.5" y="862.0"></text>
</g>
<g>
<title>java/io/File.createNewFile (778 samples, 20.09%)</title><rect x="912.1" y="883.0" width="237.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.1" y="894.0">java/io/File.createNewFile</text>
</g>
<g>
<title>java/io/File.isInvalid (1 samples, 0.03%)</title><rect x="912.1" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.1" y="878.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.createFileExclusively (777 samples, 20.07%)</title><rect x="912.4" y="867.0" width="236.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.4" y="878.0">java/io/UnixFileSystem.createFi..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.05%)</title><rect x="912.7" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.7" y="862.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars (2 samples, 0.05%)</title><rect x="913.3" y="851.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="916.3" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="913.6" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.6" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="913.6" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="916.6" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="913.6" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.6" y="814.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="913.6" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.6" y="798.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="913.6" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.6" y="782.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="913.6" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="916.6" y="766.0"></text>
</g>
<g>
<title>JNU_GetStringPlatformChars@plt (2 samples, 0.05%)</title><rect x="913.9" y="851.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="916.9" y="862.0"></text>
</g>
<g>
<title>JNU_ReleaseStringPlatformChars (1 samples, 0.03%)</title><rect x="914.5" y="851.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="917.5" y="862.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_createFileExclusively (715 samples, 18.47%)</title><rect x="914.8" y="851.0" width="217.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="917.8" y="862.0">Java_java_io_UnixFileSystem_c..</text>
</g>
<g>
<title>JNU_GetStringPlatformChars (44 samples, 1.14%)</title><rect x="915.7" y="835.0" width="13.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="918.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.05%)</title><rect x="916.3" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="919.3" y="830.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="916.6" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.6" y="814.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="916.6" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.6" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="916.6" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.6" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="916.6" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.6" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="916.6" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.6" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="916.6" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.6" y="734.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="916.6" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.6" y="718.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="916.6" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.6" y="702.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="916.6" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.6" y="686.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="916.6" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.6" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="916.6" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.6" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="916.6" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.6" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="916.6" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="919.6" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="916.6" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.6" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="916.6" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.6" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="916.6" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="919.6" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="916.6" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.6" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="916.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.6" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="916.6" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.6" y="526.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="916.6" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.6" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="916.6" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.6" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="916.6" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="916.6" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.6" y="462.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (38 samples, 0.98%)</title><rect x="916.9" y="819.0" width="11.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="919.9" y="830.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.235] (33 samples, 0.85%)</title><rect x="917.9" y="803.0" width="10.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="920.9" y="814.0"></text>
</g>
<g>
<title>CompilationPolicy::must_be_compiled(methodHandle, int) (1 samples, 0.03%)</title><rect x="918.5" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="921.5" y="798.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="918.8" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="921.8" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.03%)</title><rect x="919.1" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="922.1" y="798.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.05%)</title><rect x="919.4" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="922.4" y="798.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_object() (1 samples, 0.03%)</title><rect x="919.7" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.7" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="919.7" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.7" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="919.7" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.7" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="919.7" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.7" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="919.7" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.7" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="919.7" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.7" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="919.7" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.7" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="919.7" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.7" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="919.7" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.7" y="654.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="919.7" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.7" y="638.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="919.7" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.7" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="919.7" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.7" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="919.7" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.7" y="590.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="919.7" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.7" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="919.7" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.7" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="919.7" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.7" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="919.7" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.7" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="919.7" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.7" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="919.7" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="922.7" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="919.7" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.7" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="919.7" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="919.7" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.7" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="919.7" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="919.7" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.7" y="414.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle, Handle, JavaValue*, Thread*) (2 samples, 0.05%)</title><rect x="920.0" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="923.0" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (18 samples, 0.46%)</title><rect x="920.6" y="787.0" width="5.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.6" y="798.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="923.0" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.0" y="782.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle, Handle, JavaValue*, Thread*) (3 samples, 0.08%)</title><rect x="923.3" y="771.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="926.3" y="782.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (3 samples, 0.08%)</title><rect x="923.3" y="755.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.3" y="766.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 0.03%)</title><rect x="924.3" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.3" y="782.0"></text>
</g>
<g>
<title>Thread::is_Compiler_thread() const (1 samples, 0.03%)</title><rect x="924.6" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="927.6" y="782.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="924.9" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.9" y="782.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="925.2" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.2" y="782.0"></text>
</g>
<g>
<title>os::vm_page_size() (2 samples, 0.05%)</title><rect x="925.5" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="928.5" y="782.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 0.03%)</title><rect x="926.1" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="929.1" y="798.0"></text>
</g>
<g>
<title>methodHandle::remove() (1 samples, 0.03%)</title><rect x="926.4" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="929.4" y="798.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle) (4 samples, 0.10%)</title><rect x="926.7" y="787.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="929.7" y="798.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle*, JavaCallArguments*, Thread*), JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="927.9" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="930.9" y="814.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.03%)</title><rect x="928.5" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="931.5" y="830.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="928.8" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="931.8" y="830.0"></text>
</g>
<g>
<title>__GI___fxstat (17 samples, 0.44%)</title><rect x="929.1" y="835.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="932.1" y="846.0"></text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="931.3" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.3" y="830.0"></text>
</g>
<g>
<title>current_kernel_time (1 samples, 0.03%)</title><rect x="931.3" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.3" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (9 samples, 0.23%)</title><rect x="931.6" y="819.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.6" y="830.0"></text>
</g>
<g>
<title>SYSC_newfstat (1 samples, 0.03%)</title><rect x="931.6" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="934.6" y="814.0"></text>
</g>
<g>
<title>sys_newfstat (8 samples, 0.21%)</title><rect x="931.9" y="803.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.9" y="814.0"></text>
</g>
<g>
<title>SYSC_newfstat (8 samples, 0.21%)</title><rect x="931.9" y="787.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.9" y="798.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="932.2" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>cp_new_stat (2 samples, 0.05%)</title><rect x="932.5" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.5" y="782.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="932.8" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.8" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="932.8" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.8" y="750.0"></text>
</g>
<g>
<title>from_kuid_munged (2 samples, 0.05%)</title><rect x="933.1" y="771.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.1" y="782.0"></text>
</g>
<g>
<title>vfs_fstat (1 samples, 0.03%)</title><rect x="933.7" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.7" y="782.0"></text>
</g>
<g>
<title>vfs_getattr (1 samples, 0.03%)</title><rect x="933.7" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.7" y="766.0"></text>
</g>
<g>
<title>generic_fillattr (1 samples, 0.03%)</title><rect x="933.7" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.7" y="750.0"></text>
</g>
<g>
<title>vfs_getattr (1 samples, 0.03%)</title><rect x="934.0" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="937.0" y="782.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="934.3" y="835.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="937.3" y="846.0"></text>
</g>
<g>
<title>__fxstat64@plt (1 samples, 0.03%)</title><rect x="934.6" y="835.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="937.6" y="846.0"></text>
</g>
<g>
<title>__libc_open (647 samples, 16.71%)</title><rect x="934.9" y="835.0" width="197.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.9" y="846.0">__libc_open</text>
</g>
<g>
<title>sys_open (1 samples, 0.03%)</title><rect x="937.1" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.1" y="830.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.03%)</title><rect x="937.4" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.4" y="830.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="937.4" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.4" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (638 samples, 16.48%)</title><rect x="937.7" y="819.0" width="194.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="940.7" y="830.0">system_call_fastpath</text>
</g>
<g>
<title>do_sys_open (1 samples, 0.03%)</title><rect x="938.3" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.3" y="814.0"></text>
</g>
<g>
<title>sys_open (635 samples, 16.40%)</title><rect x="938.6" y="803.0" width="193.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.6" y="814.0">sys_open</text>
</g>
<g>
<title>do_sys_open (631 samples, 16.30%)</title><rect x="938.6" y="787.0" width="192.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.6" y="798.0">do_sys_open</text>
</g>
<g>
<title>do_filp_open (608 samples, 15.70%)</title><rect x="938.6" y="771.0" width="185.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.6" y="782.0">do_filp_open</text>
</g>
<g>
<title>path_init (2 samples, 0.05%)</title><rect x="938.6" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="941.6" y="766.0"></text>
</g>
<g>
<title>path_openat (606 samples, 15.65%)</title><rect x="939.2" y="755.0" width="184.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.2" y="766.0">path_openat</text>
</g>
<g>
<title>complete_walk (1 samples, 0.03%)</title><rect x="939.8" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.8" y="750.0"></text>
</g>
<g>
<title>do_last (577 samples, 14.90%)</title><rect x="940.1" y="739.0" width="175.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.1" y="750.0">do_last</text>
</g>
<g>
<title>__mutex_unlock_slowpath (1 samples, 0.03%)</title><rect x="941.0" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="944.0" y="734.0"></text>
</g>
<g>
<title>cap_path_mknod (1 samples, 0.03%)</title><rect x="941.3" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="944.3" y="734.0"></text>
</g>
<g>
<title>complete_walk (5 samples, 0.13%)</title><rect x="941.6" y="723.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="944.6" y="734.0"></text>
</g>
<g>
<title>legitimize_mnt (4 samples, 0.10%)</title><rect x="941.6" y="707.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="944.6" y="718.0"></text>
</g>
<g>
<title>__legitimize_mnt (4 samples, 0.10%)</title><rect x="941.6" y="691.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.6" y="702.0"></text>
</g>
<g>
<title>lockref_get_not_dead (1 samples, 0.03%)</title><rect x="942.8" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.8" y="718.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.03%)</title><rect x="943.2" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.2" y="734.0"></text>
</g>
<g>
<title>ext4_create?[ext4] (1 samples, 0.03%)</title><rect x="943.5" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.5" y="734.0"></text>
</g>
<g>
<title>ext4_lookup?[ext4] (1 samples, 0.03%)</title><rect x="943.8" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.8" y="734.0"></text>
</g>
<g>
<title>ima_file_check (2 samples, 0.05%)</title><rect x="944.1" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.1" y="734.0"></text>
</g>
<g>
<title>ima_get_action (2 samples, 0.05%)</title><rect x="944.1" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.1" y="718.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.03%)</title><rect x="944.7" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.7" y="734.0"></text>
</g>
<g>
<title>legitimize_mnt (1 samples, 0.03%)</title><rect x="945.0" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="948.0" y="734.0"></text>
</g>
<g>
<title>lookup_dcache (19 samples, 0.49%)</title><rect x="945.3" y="723.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.3" y="734.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.03%)</title><rect x="945.3" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.3" y="718.0"></text>
</g>
<g>
<title>d_alloc (11 samples, 0.28%)</title><rect x="945.6" y="707.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.6" y="718.0"></text>
</g>
<g>
<title>__d_alloc (11 samples, 0.28%)</title><rect x="945.6" y="691.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.6" y="702.0"></text>
</g>
<g>
<title>__kmalloc (5 samples, 0.13%)</title><rect x="945.9" y="675.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="948.9" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="947.1" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.1" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.13%)</title><rect x="947.4" y="675.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="950.4" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="948.3" y="659.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.3" y="670.0"></text>
</g>
<g>
<title>d_lookup (7 samples, 0.18%)</title><rect x="948.9" y="707.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="951.9" y="718.0"></text>
</g>
<g>
<title>__d_lookup (7 samples, 0.18%)</title><rect x="948.9" y="691.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>lookup_real (140 samples, 3.62%)</title><rect x="951.1" y="723.0" width="42.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="954.1" y="734.0">look..</text>
</g>
<g>
<title>d_splice_alias (2 samples, 0.05%)</title><rect x="951.1" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="954.1" y="718.0"></text>
</g>
<g>
<title>ext4_find_entry?[ext4] (1 samples, 0.03%)</title><rect x="951.7" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.7" y="718.0"></text>
</g>
<g>
<title>ext4_lookup?[ext4] (137 samples, 3.54%)</title><rect x="952.0" y="707.0" width="41.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="955.0" y="718.0">ext..</text>
</g>
<g>
<title>d_instantiate (1 samples, 0.03%)</title><rect x="952.0" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.0" y="702.0"></text>
</g>
<g>
<title>d_splice_alias (4 samples, 0.10%)</title><rect x="952.3" y="691.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="955.3" y="702.0"></text>
</g>
<g>
<title>d_instantiate (4 samples, 0.10%)</title><rect x="952.3" y="675.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.3" y="686.0"></text>
</g>
<g>
<title>__d_instantiate (1 samples, 0.03%)</title><rect x="952.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.6" y="670.0"></text>
</g>
<g>
<title>cap_d_instantiate (1 samples, 0.03%)</title><rect x="952.9" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="955.9" y="670.0"></text>
</g>
<g>
<title>security_d_instantiate (1 samples, 0.03%)</title><rect x="953.2" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.2" y="670.0"></text>
</g>
<g>
<title>ext4_find_entry?[ext4] (132 samples, 3.41%)</title><rect x="953.5" y="691.0" width="40.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.5" y="702.0">ext..</text>
</g>
<g>
<title>dx_release?[ext4] (1 samples, 0.03%)</title><rect x="954.1" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.1" y="686.0"></text>
</g>
<g>
<title>ext4_dx_find_entry?[ext4] (129 samples, 3.33%)</title><rect x="954.4" y="675.0" width="39.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="957.4" y="686.0">ext..</text>
</g>
<g>
<title>__ext4_read_dirblock?[ext4] (27 samples, 0.70%)</title><rect x="954.7" y="659.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.7" y="670.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (23 samples, 0.59%)</title><rect x="956.0" y="643.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="959.0" y="654.0"></text>
</g>
<g>
<title>ext4_getblk?[ext4] (22 samples, 0.57%)</title><rect x="956.3" y="627.0" width="6.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.3" y="638.0"></text>
</g>
<g>
<title>__getblk (17 samples, 0.44%)</title><rect x="956.3" y="611.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.3" y="622.0"></text>
</g>
<g>
<title>__find_get_block (17 samples, 0.44%)</title><rect x="956.3" y="595.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.3" y="606.0"></text>
</g>
<g>
<title>__find_get_block_slow (17 samples, 0.44%)</title><rect x="956.3" y="579.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.3" y="590.0"></text>
</g>
<g>
<title>find_get_page (13 samples, 0.34%)</title><rect x="957.5" y="563.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.5" y="574.0"></text>
</g>
<g>
<title>__find_get_page (12 samples, 0.31%)</title><rect x="957.5" y="547.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.5" y="558.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (6 samples, 0.15%)</title><rect x="959.3" y="531.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.3" y="542.0"></text>
</g>
<g>
<title>__radix_tree_lookup (4 samples, 0.10%)</title><rect x="959.3" y="515.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="962.3" y="526.0"></text>
</g>
<g>
<title>radix_tree_descend (3 samples, 0.08%)</title><rect x="959.6" y="499.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="962.6" y="510.0"></text>
</g>
<g>
<title>radix_tree_descend (2 samples, 0.05%)</title><rect x="960.5" y="515.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="963.5" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="961.1" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="964.1" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="961.1" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="964.1" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="961.1" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="964.1" y="526.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="961.1" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.1" y="510.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="961.1" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.1" y="494.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="961.1" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.1" y="478.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (5 samples, 0.13%)</title><rect x="961.4" y="611.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="964.4" y="622.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent?[ext4] (4 samples, 0.10%)</title><rect x="961.7" y="595.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.7" y="606.0"></text>
</g>
<g>
<title>dx_probe?[ext4] (83 samples, 2.14%)</title><rect x="963.0" y="659.0" width="25.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="966.0" y="670.0">d..</text>
</g>
<g>
<title>__ext4_read_dirblock?[ext4] (66 samples, 1.70%)</title><rect x="965.1" y="643.0" width="20.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.1" y="654.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (64 samples, 1.65%)</title><rect x="965.7" y="627.0" width="19.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.7" y="638.0"></text>
</g>
<g>
<title>__getblk (1 samples, 0.03%)</title><rect x="965.7" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.7" y="622.0"></text>
</g>
<g>
<title>ext4_getblk?[ext4] (62 samples, 1.60%)</title><rect x="966.0" y="611.0" width="18.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="969.0" y="622.0"></text>
</g>
<g>
<title>__getblk (31 samples, 0.80%)</title><rect x="966.3" y="595.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.3" y="606.0"></text>
</g>
<g>
<title>__find_get_block (30 samples, 0.77%)</title><rect x="966.3" y="579.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.3" y="590.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="970.6" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.6" y="574.0"></text>
</g>
<g>
<title>__find_get_block_slow (12 samples, 0.31%)</title><rect x="970.9" y="563.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="973.9" y="574.0"></text>
</g>
<g>
<title>find_get_page (12 samples, 0.31%)</title><rect x="970.9" y="547.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.9" y="558.0"></text>
</g>
<g>
<title>__find_get_page (11 samples, 0.28%)</title><rect x="970.9" y="531.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="973.9" y="542.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.03%)</title><rect x="972.1" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="975.1" y="526.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (6 samples, 0.15%)</title><rect x="972.4" y="515.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.4" y="526.0"></text>
</g>
<g>
<title>__radix_tree_lookup (4 samples, 0.10%)</title><rect x="972.4" y="499.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="975.4" y="510.0"></text>
</g>
<g>
<title>radix_tree_descend (1 samples, 0.03%)</title><rect x="973.0" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.0" y="494.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="973.3" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="976.3" y="494.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="973.3" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.3" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="973.3" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="973.3" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.3" y="446.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="973.3" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.3" y="430.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="973.3" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="976.3" y="414.0"></text>
</g>
<g>
<title>radix_tree_descend (2 samples, 0.05%)</title><rect x="973.6" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.6" y="510.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.03%)</title><rect x="974.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="977.2" y="542.0"></text>
</g>
<g>
<title>bh_lru_install (1 samples, 0.03%)</title><rect x="974.5" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.5" y="574.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.05%)</title><rect x="974.8" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.8" y="574.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="975.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.5" y="590.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="975.5" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.5" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="975.5" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.5" y="558.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="975.5" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="978.5" y="542.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="975.5" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.5" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="975.5" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.5" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="975.5" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.5" y="494.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="975.5" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.5" y="478.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="975.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="978.5" y="462.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="975.5" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="975.5" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.5" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="975.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="978.5" y="414.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="975.5" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.5" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="975.5" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="978.5" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="975.5" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.5" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="975.5" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="975.5" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.5" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="975.5" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.5" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="975.5" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.5" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="975.5" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="978.5" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="975.5" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.5" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="975.5" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.5" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="975.5" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="978.5" y="238.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="975.8" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.8" y="606.0"></text>
</g>
<g>
<title>ext4_data_block_valid?[ext4] (2 samples, 0.05%)</title><rect x="976.1" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.1" y="606.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent?[ext4] (2 samples, 0.05%)</title><rect x="976.7" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="979.7" y="606.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (25 samples, 0.65%)</title><rect x="977.3" y="595.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.3" y="606.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="977.9" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.9" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="978.2" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="981.2" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="978.2" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="981.2" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="978.2" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.2" y="558.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="978.2" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.2" y="542.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="978.2" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="981.2" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="978.2" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="981.2" y="510.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent?[ext4] (21 samples, 0.54%)</title><rect x="978.5" y="579.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="981.5" y="590.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.05%)</title><rect x="984.3" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="987.3" y="574.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (1 samples, 0.03%)</title><rect x="984.9" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="987.9" y="622.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (2 samples, 0.05%)</title><rect x="985.2" y="643.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="988.2" y="654.0"></text>
</g>
<g>
<title>ext4fs_dirhash?[ext4] (8 samples, 0.21%)</title><rect x="985.8" y="643.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.8" y="654.0"></text>
</g>
<g>
<title>half_md4_transform (1 samples, 0.03%)</title><rect x="986.4" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="989.4" y="638.0"></text>
</g>
<g>
<title>str2hashbuf_signed?[ext4] (5 samples, 0.13%)</title><rect x="986.7" y="627.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.7" y="638.0"></text>
</g>
<g>
<title>memcmp (2 samples, 0.05%)</title><rect x="988.3" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.3" y="670.0"></text>
</g>
<g>
<title>search_dir?[ext4] (16 samples, 0.41%)</title><rect x="988.9" y="659.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="991.9" y="670.0"></text>
</g>
<g>
<title>memcmp (4 samples, 0.10%)</title><rect x="992.5" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.5" y="654.0"></text>
</g>
<g>
<title>mnt_want_write (3 samples, 0.08%)</title><rect x="993.7" y="723.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="996.7" y="734.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.08%)</title><rect x="993.7" y="707.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.7" y="718.0"></text>
</g>
<g>
<title>__percpu_counter_add (1 samples, 0.03%)</title><rect x="994.3" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="997.3" y="702.0"></text>
</g>
<g>
<title>mutex_lock (46 samples, 1.19%)</title><rect x="994.7" y="723.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.7" y="734.0"></text>
</g>
<g>
<title>__mutex_lock_slowpath (44 samples, 1.14%)</title><rect x="995.0" y="707.0" width="13.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="998.0" y="718.0"></text>
</g>
<g>
<title>mutex_spin_on_owner (39 samples, 1.01%)</title><rect x="995.0" y="691.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="998.0" y="702.0"></text>
</g>
<g>
<title>osq_lock (5 samples, 0.13%)</title><rect x="1006.8" y="691.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1009.8" y="702.0"></text>
</g>
<g>
<title>mutex_spin_on_owner (1 samples, 0.03%)</title><rect x="1008.4" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.4" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="1008.7" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1011.7" y="734.0"></text>
</g>
<g>
<title>__mutex_unlock_slowpath (1 samples, 0.03%)</title><rect x="1008.7" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1011.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1008.7" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1011.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1008.7" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1011.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1008.7" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.7" y="670.0"></text>
</g>
<g>
<title>terminate_walk (1 samples, 0.03%)</title><rect x="1009.0" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.0" y="734.0"></text>
</g>
<g>
<title>dput (1 samples, 0.03%)</title><rect x="1009.0" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.0" y="718.0"></text>
</g>
<g>
<title>lockref_put_or_lock (1 samples, 0.03%)</title><rect x="1009.0" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.0" y="702.0"></text>
</g>
<g>
<title>vfs_create (338 samples, 8.73%)</title><rect x="1009.3" y="723.0" width="103.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.3" y="734.0">vfs_create</text>
</g>
<g>
<title>__ext4_new_inode?[ext4] (1 samples, 0.03%)</title><rect x="1009.3" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.3" y="718.0"></text>
</g>
<g>
<title>dquot_initialize (2 samples, 0.05%)</title><rect x="1009.6" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.6" y="718.0"></text>
</g>
<g>
<title>ext4_create?[ext4] (334 samples, 8.63%)</title><rect x="1010.2" y="707.0" width="101.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.2" y="718.0">ext4_create?..</text>
</g>
<g>
<title>__dquot_initialize (2 samples, 0.05%)</title><rect x="1010.2" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.2" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb?[ext4] (2 samples, 0.05%)</title><rect x="1010.8" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1013.8" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_stop?[ext4] (6 samples, 0.15%)</title><rect x="1011.4" y="691.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1014.4" y="702.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="1011.4" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1014.4" y="686.0"></text>
</g>
<g>
<title>jbd2_journal_stop?[jbd2] (5 samples, 0.13%)</title><rect x="1011.7" y="675.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.7" y="686.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.08%)</title><rect x="1011.7" y="659.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.7" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="1011.7" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="1011.7" y="627.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.7" y="638.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="1012.6" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1015.6" y="670.0"></text>
</g>
<g>
<title>__ext4_new_inode?[ext4] (195 samples, 5.04%)</title><rect x="1013.2" y="691.0" width="59.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.2" y="702.0">__ext4..</text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (5 samples, 0.13%)</title><rect x="1018.7" y="675.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1021.7" y="686.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (4 samples, 0.10%)</title><rect x="1019.0" y="659.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1022.0" y="670.0"></text>
</g>
<g>
<title>jbd2_journal_grab_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1019.6" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.6" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_put_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1019.9" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.9" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (20 samples, 0.52%)</title><rect x="1020.3" y="675.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.3" y="686.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (20 samples, 0.52%)</title><rect x="1020.3" y="659.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1023.3" y="670.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (13 samples, 0.34%)</title><rect x="1020.3" y="643.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.3" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_cancel_revoke?[jbd2] (1 samples, 0.03%)</title><rect x="1020.6" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1023.6" y="638.0"></text>
</g>
<g>
<title>unlock_buffer (11 samples, 0.28%)</title><rect x="1020.9" y="627.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>wake_up_bit (11 samples, 0.28%)</title><rect x="1020.9" y="611.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>bit_waitqueue (11 samples, 0.28%)</title><rect x="1020.9" y="595.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.9" y="606.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (7 samples, 0.18%)</title><rect x="1024.2" y="643.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.2" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb?[ext4] (57 samples, 1.47%)</title><rect x="1026.3" y="675.0" width="17.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1029.3" y="686.0"></text>
</g>
<g>
<title>ext4_journal_check_start?[ext4] (2 samples, 0.05%)</title><rect x="1026.3" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.3" y="670.0"></text>
</g>
<g>
<title>jbd2__journal_start?[jbd2] (55 samples, 1.42%)</title><rect x="1027.0" y="659.0" width="16.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1030.0" y="670.0"></text>
</g>
<g>
<title>add_transaction_credits?[jbd2] (1 samples, 0.03%)</title><rect x="1027.6" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.6" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="1027.9" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.9" y="654.0"></text>
</g>
<g>
<title>start_this_handle?[jbd2] (51 samples, 1.32%)</title><rect x="1028.2" y="643.0" width="15.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1031.2" y="654.0"></text>
</g>
<g>
<title>add_transaction_credits?[jbd2] (50 samples, 1.29%)</title><rect x="1028.5" y="627.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.5" y="638.0"></text>
</g>
<g>
<title>__jbd2_log_wait_for_space?[jbd2] (48 samples, 1.24%)</title><rect x="1028.8" y="611.0" width="14.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.8" y="622.0"></text>
</g>
<g>
<title>jbd2_log_do_checkpoint?[jbd2] (48 samples, 1.24%)</title><rect x="1028.8" y="595.0" width="14.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1031.8" y="606.0"></text>
</g>
<g>
<title>__flush_batch?[jbd2] (37 samples, 0.96%)</title><rect x="1031.8" y="579.0" width="11.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.8" y="590.0"></text>
</g>
<g>
<title>blk_finish_plug (3 samples, 0.08%)</title><rect x="1032.1" y="563.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1035.1" y="574.0"></text>
</g>
<g>
<title>blk_flush_plug_list (3 samples, 0.08%)</title><rect x="1032.1" y="547.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1035.1" y="558.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (3 samples, 0.08%)</title><rect x="1032.1" y="531.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.1" y="542.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (3 samples, 0.08%)</title><rect x="1032.1" y="515.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1035.1" y="526.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (2 samples, 0.05%)</title><rect x="1032.1" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.1" y="510.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (2 samples, 0.05%)</title><rect x="1032.1" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1035.1" y="494.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (2 samples, 0.05%)</title><rect x="1032.1" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1035.1" y="478.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (2 samples, 0.05%)</title><rect x="1032.1" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.1" y="462.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (2 samples, 0.05%)</title><rect x="1032.1" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.1" y="446.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (2 samples, 0.05%)</title><rect x="1032.1" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1035.1" y="430.0"></text>
</g>
<g>
<title>blk_mq_get_driver_tag (1 samples, 0.03%)</title><rect x="1032.1" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1035.1" y="414.0"></text>
</g>
<g>
<title>virtio_queue_rq?[virtio_blk] (1 samples, 0.03%)</title><rect x="1032.4" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1035.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1032.4" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.4" y="398.0"></text>
</g>
<g>
<title>elv_rb_add (1 samples, 0.03%)</title><rect x="1032.7" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1035.7" y="510.0"></text>
</g>
<g>
<title>write_dirty_buffer (33 samples, 0.85%)</title><rect x="1033.1" y="563.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.1" y="574.0"></text>
</g>
<g>
<title>_submit_bh (32 samples, 0.83%)</title><rect x="1033.4" y="547.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1036.4" y="558.0"></text>
</g>
<g>
<title>submit_bio (28 samples, 0.72%)</title><rect x="1034.6" y="531.0" width="8.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.6" y="542.0"></text>
</g>
<g>
<title>generic_make_request (27 samples, 0.70%)</title><rect x="1034.9" y="515.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1037.9" y="526.0"></text>
</g>
<g>
<title>blk_mq_make_request (27 samples, 0.70%)</title><rect x="1034.9" y="499.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.9" y="510.0"></text>
</g>
<g>
<title>__blk_mq_sched_bio_merge (8 samples, 0.21%)</title><rect x="1035.2" y="483.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.2" y="494.0"></text>
</g>
<g>
<title>dd_bio_merge (7 samples, 0.18%)</title><rect x="1035.5" y="467.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.5" y="478.0"></text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.08%)</title><rect x="1035.5" y="451.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.5" y="462.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (3 samples, 0.08%)</title><rect x="1035.5" y="435.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1038.5" y="446.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (3 samples, 0.08%)</title><rect x="1035.5" y="419.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.5" y="430.0"></text>
</g>
<g>
<title>blk_mq_sched_try_merge (4 samples, 0.10%)</title><rect x="1036.4" y="451.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.4" y="462.0"></text>
</g>
<g>
<title>dd_request_merge (1 samples, 0.03%)</title><rect x="1036.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.4" y="446.0"></text>
</g>
<g>
<title>elv_bio_merge_ok (1 samples, 0.03%)</title><rect x="1036.7" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.7" y="446.0"></text>
</g>
<g>
<title>elv_merge (2 samples, 0.05%)</title><rect x="1037.0" y="435.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1040.0" y="446.0"></text>
</g>
<g>
<title>dd_request_merge (1 samples, 0.03%)</title><rect x="1037.0" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.0" y="430.0"></text>
</g>
<g>
<title>elv_rb_find (1 samples, 0.03%)</title><rect x="1037.0" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.0" y="414.0"></text>
</g>
<g>
<title>elv_rqhash_find (1 samples, 0.03%)</title><rect x="1037.3" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.3" y="430.0"></text>
</g>
<g>
<title>blk_flush_plug_list (8 samples, 0.21%)</title><rect x="1037.6" y="483.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1040.6" y="494.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (8 samples, 0.21%)</title><rect x="1037.6" y="467.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.6" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r12 (1 samples, 0.03%)</title><rect x="1037.6" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1040.6" y="462.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (7 samples, 0.18%)</title><rect x="1037.9" y="451.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.9" y="462.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (5 samples, 0.13%)</title><rect x="1037.9" y="435.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1040.9" y="446.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (5 samples, 0.13%)</title><rect x="1037.9" y="419.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.9" y="430.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (5 samples, 0.13%)</title><rect x="1037.9" y="403.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.9" y="414.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (5 samples, 0.13%)</title><rect x="1037.9" y="387.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.9" y="398.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.03%)</title><rect x="1037.9" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1040.9" y="382.0"></text>
</g>
<g>
<title>virtio_queue_rq?[virtio_blk] (1 samples, 0.03%)</title><rect x="1037.9" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1040.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1037.9" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (4 samples, 0.10%)</title><rect x="1038.2" y="371.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.2" y="382.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (4 samples, 0.10%)</title><rect x="1038.2" y="355.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.2" y="366.0"></text>
</g>
<g>
<title>virtio_queue_rq?[virtio_blk] (4 samples, 0.10%)</title><rect x="1038.2" y="339.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="1038.2" y="323.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1041.2" y="334.0"></text>
</g>
<g>
<title>blk_mq_start_request (1 samples, 0.03%)</title><rect x="1039.1" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.1" y="334.0"></text>
</g>
<g>
<title>dd_insert_requests (1 samples, 0.03%)</title><rect x="1039.5" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.5" y="446.0"></text>
</g>
<g>
<title>elv_rb_add (1 samples, 0.03%)</title><rect x="1039.5" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.5" y="430.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="1039.5" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1042.5" y="414.0"></text>
</g>
<g>
<title>elv_rb_add (1 samples, 0.03%)</title><rect x="1039.8" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.8" y="446.0"></text>
</g>
<g>
<title>blk_mq_bio_to_request (1 samples, 0.03%)</title><rect x="1040.1" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1043.1" y="494.0"></text>
</g>
<g>
<title>init_request_from_bio (1 samples, 0.03%)</title><rect x="1040.1" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1043.1" y="478.0"></text>
</g>
<g>
<title>blk_rq_bio_prep (1 samples, 0.03%)</title><rect x="1040.1" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1043.1" y="462.0"></text>
</g>
<g>
<title>blk_mq_sched_get_request (9 samples, 0.23%)</title><rect x="1040.4" y="483.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1043.4" y="494.0"></text>
</g>
<g>
<title>__blk_mq_alloc_request (9 samples, 0.23%)</title><rect x="1040.4" y="467.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1043.4" y="478.0"></text>
</g>
<g>
<title>blk_mq_get_tag (5 samples, 0.13%)</title><rect x="1041.0" y="451.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1044.0" y="462.0"></text>
</g>
<g>
<title>__blk_mq_get_tag (3 samples, 0.08%)</title><rect x="1041.0" y="435.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.0" y="446.0"></text>
</g>
<g>
<title>__sbitmap_queue_get (3 samples, 0.08%)</title><rect x="1041.0" y="419.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.0" y="430.0"></text>
</g>
<g>
<title>sbitmap_get (3 samples, 0.08%)</title><rect x="1041.0" y="403.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.0" y="414.0"></text>
</g>
<g>
<title>__sbitmap_get_word (3 samples, 0.08%)</title><rect x="1041.0" y="387.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1044.0" y="398.0"></text>
</g>
<g>
<title>io_schedule (2 samples, 0.05%)</title><rect x="1041.9" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.9" y="446.0"></text>
</g>
<g>
<title>io_schedule_timeout (2 samples, 0.05%)</title><rect x="1041.9" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.9" y="430.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.03%)</title><rect x="1041.9" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1044.9" y="414.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.03%)</title><rect x="1041.9" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.9" y="398.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.03%)</title><rect x="1041.9" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1044.9" y="382.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.03%)</title><rect x="1042.2" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.2" y="414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1042.2" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1045.2" y="398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1042.2" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1045.2" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1042.2" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.2" y="366.0"></text>
</g>
<g>
<title>blk_mq_rq_ctx_init (2 samples, 0.05%)</title><rect x="1042.5" y="451.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1045.5" y="462.0"></text>
</g>
<g>
<title>__jbd2_journal_remove_checkpoint?[jbd2] (1 samples, 0.03%)</title><rect x="1043.1" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1046.1" y="590.0"></text>
</g>
<g>
<title>wait_transaction_locked?[jbd2] (1 samples, 0.03%)</title><rect x="1043.4" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.4" y="622.0"></text>
</g>
<g>
<title>jbd2_log_start_commit?[jbd2] (1 samples, 0.03%)</title><rect x="1043.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1046.4" y="606.0"></text>
</g>
<g>
<title>__jbd2_log_start_commit?[jbd2] (1 samples, 0.03%)</title><rect x="1043.4" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1046.4" y="590.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="1043.4" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.4" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1043.4" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1046.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1043.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.4" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1043.7" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1046.7" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1043.7" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1046.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1043.7" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1046.7" y="654.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1043.7" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.7" y="638.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1043.7" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.7" y="622.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1043.7" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.7" y="606.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1043.7" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.7" y="590.0"></text>
</g>
<g>
<title>free_pages (1 samples, 0.03%)</title><rect x="1043.7" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1046.7" y="574.0"></text>
</g>
<g>
<title>ext4_free_inodes_count?[ext4] (3 samples, 0.08%)</title><rect x="1044.0" y="675.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.0" y="686.0"></text>
</g>
<g>
<title>ext4_get_group_desc?[ext4] (24 samples, 0.62%)</title><rect x="1044.9" y="675.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.9" y="686.0"></text>
</g>
<g>
<title>ext4_journal_check_start?[ext4] (1 samples, 0.03%)</title><rect x="1052.3" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1055.3" y="686.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (1 samples, 0.03%)</title><rect x="1052.6" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1055.6" y="686.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (25 samples, 0.65%)</title><rect x="1052.9" y="675.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1055.9" y="686.0"></text>
</g>
<g>
<title>__memset (1 samples, 0.03%)</title><rect x="1052.9" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1055.9" y="670.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (11 samples, 0.28%)</title><rect x="1053.2" y="659.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.2" y="670.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="1054.7" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1057.7" y="654.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (1 samples, 0.03%)</title><rect x="1055.0" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1058.0" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (1 samples, 0.03%)</title><rect x="1055.0" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.0" y="638.0"></text>
</g>
<g>
<title>jbd2_journal_grab_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1055.0" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1058.0" y="622.0"></text>
</g>
<g>
<title>ext4_get_inode_flags?[ext4] (4 samples, 0.10%)</title><rect x="1055.3" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1058.3" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (13 samples, 0.34%)</title><rect x="1056.5" y="659.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1059.5" y="670.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc?[ext4] (2 samples, 0.05%)</title><rect x="1056.5" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1059.5" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (5 samples, 0.13%)</title><rect x="1057.1" y="643.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1060.1" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (5 samples, 0.13%)</title><rect x="1057.1" y="627.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1060.1" y="638.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (3 samples, 0.08%)</title><rect x="1057.1" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.1" y="622.0"></text>
</g>
<g>
<title>unlock_buffer (3 samples, 0.08%)</title><rect x="1057.1" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1060.1" y="606.0"></text>
</g>
<g>
<title>wake_up_bit (3 samples, 0.08%)</title><rect x="1057.1" y="579.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.1" y="590.0"></text>
</g>
<g>
<title>__wake_up_bit (1 samples, 0.03%)</title><rect x="1057.1" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1060.1" y="574.0"></text>
</g>
<g>
<title>bit_waitqueue (2 samples, 0.05%)</title><rect x="1057.4" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.4" y="574.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (2 samples, 0.05%)</title><rect x="1058.0" y="611.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.0" y="622.0"></text>
</g>
<g>
<title>ext4_get_inode_loc?[ext4] (6 samples, 0.15%)</title><rect x="1058.7" y="643.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1061.7" y="654.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc?[ext4] (6 samples, 0.15%)</title><rect x="1058.7" y="627.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.7" y="638.0"></text>
</g>
<g>
<title>__getblk (6 samples, 0.15%)</title><rect x="1058.7" y="611.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1061.7" y="622.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.13%)</title><rect x="1058.7" y="595.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.7" y="606.0"></text>
</g>
<g>
<title>__find_get_block_slow (1 samples, 0.03%)</title><rect x="1059.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1062.6" y="590.0"></text>
</g>
<g>
<title>find_get_page (1 samples, 0.03%)</title><rect x="1059.6" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.6" y="574.0"></text>
</g>
<g>
<title>__find_get_page (1 samples, 0.03%)</title><rect x="1059.6" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1062.6" y="558.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.03%)</title><rect x="1059.6" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1062.6" y="542.0"></text>
</g>
<g>
<title>radix_tree_descend (1 samples, 0.03%)</title><rect x="1059.6" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1062.6" y="526.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="1059.9" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.9" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="1060.2" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.2" y="606.0"></text>
</g>
<g>
<title>ext4_read_inode_bitmap?[ext4] (3 samples, 0.08%)</title><rect x="1060.5" y="675.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1063.5" y="686.0"></text>
</g>
<g>
<title>__getblk (2 samples, 0.05%)</title><rect x="1060.5" y="659.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.5" y="670.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.03%)</title><rect x="1060.8" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1063.8" y="654.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="1060.8" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1063.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="1061.1" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.1" y="670.0"></text>
</g>
<g>
<title>ext4_set_inode_flags?[ext4] (2 samples, 0.05%)</title><rect x="1061.4" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.4" y="686.0"></text>
</g>
<g>
<title>inode_set_flags (1 samples, 0.03%)</title><rect x="1061.7" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.7" y="670.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.03%)</title><rect x="1062.0" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.0" y="686.0"></text>
</g>
<g>
<title>insert_inode_locked (10 samples, 0.26%)</title><rect x="1062.3" y="675.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.3" y="686.0"></text>
</g>
<g>
<title>new_inode (22 samples, 0.57%)</title><rect x="1065.4" y="675.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1068.4" y="686.0"></text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.08%)</title><rect x="1065.4" y="659.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.4" y="670.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.03%)</title><rect x="1066.3" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.3" y="670.0"></text>
</g>
<g>
<title>new_inode_pseudo (18 samples, 0.46%)</title><rect x="1066.6" y="659.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1069.6" y="670.0"></text>
</g>
<g>
<title>alloc_inode (14 samples, 0.36%)</title><rect x="1066.6" y="643.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1069.6" y="654.0"></text>
</g>
<g>
<title>ext4_alloc_inode?[ext4] (12 samples, 0.31%)</title><rect x="1066.6" y="627.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1069.6" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (12 samples, 0.31%)</title><rect x="1066.6" y="611.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1069.6" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (11 samples, 0.28%)</title><rect x="1066.9" y="595.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.9" y="606.0"></text>
</g>
<g>
<title>___slab_alloc (3 samples, 0.08%)</title><rect x="1069.3" y="579.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1072.3" y="590.0"></text>
</g>
<g>
<title>new_slab (3 samples, 0.08%)</title><rect x="1069.3" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.3" y="574.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.05%)</title><rect x="1069.6" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1072.6" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="1069.6" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.6" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="1069.6" y="515.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1072.6" y="526.0"></text>
</g>
<g>
<title>inode_init_always (2 samples, 0.05%)</title><rect x="1070.2" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1073.2" y="638.0"></text>
</g>
<g>
<title>ext4_alloc_inode?[ext4] (4 samples, 0.10%)</title><rect x="1070.8" y="643.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1073.8" y="654.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.03%)</title><rect x="1072.1" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.1" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1072.4" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1075.4" y="686.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1072.4" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1075.4" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1072.4" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.4" y="654.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1072.4" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.4" y="638.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1072.4" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1075.4" y="622.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1072.4" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.4" y="606.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1072.4" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1075.4" y="590.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="1072.4" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1075.4" y="574.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="1072.4" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.4" y="558.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1072.4" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1075.4" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1072.4" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.4" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="1072.4" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1075.4" y="510.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1072.4" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.4" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1072.4" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1075.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1072.4" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.4" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1072.4" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1075.4" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1072.4" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1075.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1072.4" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.4" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1072.4" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1075.4" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1072.4" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1075.4" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="1072.4" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1075.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1072.4" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1072.4" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.4" y="334.0"></text>
</g>
<g>
<title>current_fs_time (1 samples, 0.03%)</title><rect x="1072.7" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.7" y="702.0"></text>
</g>
<g>
<title>dquot_alloc_inode (2 samples, 0.05%)</title><rect x="1073.0" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1076.0" y="702.0"></text>
</g>
<g>
<title>dquot_initialize (2 samples, 0.05%)</title><rect x="1073.6" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1076.6" y="702.0"></text>
</g>
<g>
<title>dquot_active.isra.7 (2 samples, 0.05%)</title><rect x="1073.6" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1076.6" y="686.0"></text>
</g>
<g>
<title>ext4_add_nondir?[ext4] (104 samples, 2.69%)</title><rect x="1074.2" y="691.0" width="31.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1077.2" y="702.0">ex..</text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (1 samples, 0.03%)</title><rect x="1074.2" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.2" y="686.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.03%)</title><rect x="1074.5" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1077.5" y="686.0"></text>
</g>
<g>
<title>d_instantiate_new (1 samples, 0.03%)</title><rect x="1074.8" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.8" y="686.0"></text>
</g>
<g>
<title>wake_up_bit (1 samples, 0.03%)</title><rect x="1074.8" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.8" y="670.0"></text>
</g>
<g>
<title>bit_waitqueue (1 samples, 0.03%)</title><rect x="1074.8" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1077.8" y="654.0"></text>
</g>
<g>
<title>ext4_add_entry?[ext4] (90 samples, 2.32%)</title><rect x="1075.1" y="675.0" width="27.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1078.1" y="686.0">e..</text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (17 samples, 0.44%)</title><rect x="1075.4" y="659.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1078.4" y="670.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (17 samples, 0.44%)</title><rect x="1075.4" y="643.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1078.4" y="654.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (7 samples, 0.18%)</title><rect x="1075.4" y="627.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1078.4" y="638.0"></text>
</g>
<g>
<title>__jbd2_journal_file_buffer?[jbd2] (1 samples, 0.03%)</title><rect x="1075.4" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1078.4" y="622.0"></text>
</g>
<g>
<title>unlock_buffer (6 samples, 0.15%)</title><rect x="1075.7" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1078.7" y="622.0"></text>
</g>
<g>
<title>wake_up_bit (6 samples, 0.15%)</title><rect x="1075.7" y="595.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1078.7" y="606.0"></text>
</g>
<g>
<title>__wake_up_bit (2 samples, 0.05%)</title><rect x="1076.0" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.0" y="590.0"></text>
</g>
<g>
<title>bit_waitqueue (3 samples, 0.08%)</title><rect x="1076.6" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1079.6" y="590.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (10 samples, 0.26%)</title><rect x="1077.5" y="627.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1080.5" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.05%)</title><rect x="1080.0" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.0" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="1080.3" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.3" y="606.0"></text>
</g>
<g>
<title>__ext4_read_dirblock?[ext4] (4 samples, 0.10%)</title><rect x="1080.6" y="659.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1083.6" y="670.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (4 samples, 0.10%)</title><rect x="1080.6" y="643.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1083.6" y="654.0"></text>
</g>
<g>
<title>ext4_getblk?[ext4] (4 samples, 0.10%)</title><rect x="1080.6" y="627.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1083.6" y="638.0"></text>
</g>
<g>
<title>__getblk (2 samples, 0.05%)</title><rect x="1080.6" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.6" y="622.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.05%)</title><rect x="1080.6" y="595.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1083.6" y="606.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="1080.9" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1083.9" y="590.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (2 samples, 0.05%)</title><rect x="1081.2" y="611.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1084.2" y="622.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent?[ext4] (1 samples, 0.03%)</title><rect x="1081.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1084.2" y="606.0"></text>
</g>
<g>
<title>ext4_es_lru_add?[ext4] (1 samples, 0.03%)</title><rect x="1081.5" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.5" y="606.0"></text>
</g>
<g>
<title>add_dirent_to_buf?[ext4] (43 samples, 1.11%)</title><rect x="1081.8" y="659.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1084.8" y="670.0"></text>
</g>
<g>
<title>__ext4_check_dir_entry?[ext4] (3 samples, 0.08%)</title><rect x="1081.8" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.8" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (2 samples, 0.05%)</title><rect x="1082.7" y="643.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1085.7" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (2 samples, 0.05%)</title><rect x="1082.7" y="627.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1085.7" y="638.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1082.7" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1085.7" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_put_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1083.0" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1086.0" y="622.0"></text>
</g>
<g>
<title>__memcpy (1 samples, 0.03%)</title><rect x="1083.3" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.3" y="654.0"></text>
</g>
<g>
<title>current_kernel_time (1 samples, 0.03%)</title><rect x="1083.6" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1086.6" y="654.0"></text>
</g>
<g>
<title>ext4_find_dest_de?[ext4] (15 samples, 0.39%)</title><rect x="1083.9" y="643.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1086.9" y="654.0"></text>
</g>
<g>
<title>__ext4_check_dir_entry?[ext4] (9 samples, 0.23%)</title><rect x="1085.5" y="627.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1088.5" y="638.0"></text>
</g>
<g>
<title>memcmp (1 samples, 0.03%)</title><rect x="1088.2" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1091.2" y="638.0"></text>
</g>
<g>
<title>ext4_handle_dirty_dirent_node?[ext4] (2 samples, 0.05%)</title><rect x="1088.5" y="643.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.5" y="654.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (2 samples, 0.05%)</title><rect x="1088.5" y="627.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1091.5" y="638.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (2 samples, 0.05%)</title><rect x="1088.5" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1091.5" y="622.0"></text>
</g>
<g>
<title>__jbd2_journal_file_buffer?[jbd2] (2 samples, 0.05%)</title><rect x="1088.5" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1091.5" y="606.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (18 samples, 0.46%)</title><rect x="1089.1" y="643.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1092.1" y="654.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (5 samples, 0.13%)</title><rect x="1089.1" y="627.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.1" y="638.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (1 samples, 0.03%)</title><rect x="1090.3" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.3" y="622.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (13 samples, 0.34%)</title><rect x="1090.7" y="627.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.7" y="638.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (8 samples, 0.21%)</title><rect x="1090.7" y="611.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.7" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (8 samples, 0.21%)</title><rect x="1090.7" y="595.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.7" y="606.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (6 samples, 0.15%)</title><rect x="1090.7" y="579.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.7" y="590.0"></text>
</g>
<g>
<title>unlock_buffer (5 samples, 0.13%)</title><rect x="1091.0" y="563.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.0" y="574.0"></text>
</g>
<g>
<title>wake_up_bit (5 samples, 0.13%)</title><rect x="1091.0" y="547.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1094.0" y="558.0"></text>
</g>
<g>
<title>__wake_up_bit (4 samples, 0.10%)</title><rect x="1091.0" y="531.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.0" y="542.0"></text>
</g>
<g>
<title>bit_waitqueue (1 samples, 0.03%)</title><rect x="1092.2" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.2" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (2 samples, 0.05%)</title><rect x="1092.5" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1095.5" y="590.0"></text>
</g>
<g>
<title>ext4_get_inode_loc?[ext4] (5 samples, 0.13%)</title><rect x="1093.1" y="611.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1096.1" y="622.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc?[ext4] (5 samples, 0.13%)</title><rect x="1093.1" y="595.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1096.1" y="606.0"></text>
</g>
<g>
<title>__getblk (4 samples, 0.10%)</title><rect x="1093.4" y="579.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1096.4" y="590.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.10%)</title><rect x="1093.4" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.4" y="574.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.08%)</title><rect x="1093.7" y="547.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.7" y="558.0"></text>
</g>
<g>
<title>memcmp (1 samples, 0.03%)</title><rect x="1094.6" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1097.6" y="654.0"></text>
</g>
<g>
<title>do_split?[ext4] (13 samples, 0.34%)</title><rect x="1094.9" y="659.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.9" y="670.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (1 samples, 0.03%)</title><rect x="1096.1" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1099.1" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (1 samples, 0.03%)</title><rect x="1096.1" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1099.1" y="638.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (1 samples, 0.03%)</title><rect x="1096.1" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1099.1" y="622.0"></text>
</g>
<g>
<title>unlock_buffer (1 samples, 0.03%)</title><rect x="1096.1" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.1" y="606.0"></text>
</g>
<g>
<title>wake_up_bit (1 samples, 0.03%)</title><rect x="1096.1" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.1" y="590.0"></text>
</g>
<g>
<title>bit_waitqueue (1 samples, 0.03%)</title><rect x="1096.1" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.1" y="574.0"></text>
</g>
<g>
<title>ext4_append?[ext4] (4 samples, 0.10%)</title><rect x="1096.4" y="643.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1099.4" y="654.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (4 samples, 0.10%)</title><rect x="1096.4" y="627.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.4" y="638.0"></text>
</g>
<g>
<title>ext4_getblk?[ext4] (4 samples, 0.10%)</title><rect x="1096.4" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1099.4" y="622.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (1 samples, 0.03%)</title><rect x="1096.4" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1099.4" y="606.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (1 samples, 0.03%)</title><rect x="1096.4" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.4" y="590.0"></text>
</g>
<g>
<title>__jbd2_journal_file_buffer?[jbd2] (1 samples, 0.03%)</title><rect x="1096.4" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1099.4" y="574.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (3 samples, 0.08%)</title><rect x="1096.7" y="595.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1099.7" y="606.0"></text>
</g>
<g>
<title>ext4_ind_map_blocks?[ext4] (3 samples, 0.08%)</title><rect x="1096.7" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.7" y="590.0"></text>
</g>
<g>
<title>ext4_get_branch?[ext4] (1 samples, 0.03%)</title><rect x="1096.7" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1099.7" y="574.0"></text>
</g>
<g>
<title>__getblk (1 samples, 0.03%)</title><rect x="1096.7" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.7" y="558.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.03%)</title><rect x="1096.7" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1099.7" y="542.0"></text>
</g>
<g>
<title>__find_get_block_slow (1 samples, 0.03%)</title><rect x="1096.7" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1099.7" y="526.0"></text>
</g>
<g>
<title>put_page (1 samples, 0.03%)</title><rect x="1096.7" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1099.7" y="510.0"></text>
</g>
<g>
<title>ext4_mb_new_blocks?[ext4] (2 samples, 0.05%)</title><rect x="1097.1" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1100.1" y="574.0"></text>
</g>
<g>
<title>ext4_mb_good_group?[ext4] (1 samples, 0.03%)</title><rect x="1097.1" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.1" y="558.0"></text>
</g>
<g>
<title>ext4_mb_regular_allocator?[ext4] (1 samples, 0.03%)</title><rect x="1097.4" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1100.4" y="558.0"></text>
</g>
<g>
<title>ext4_mb_load_buddy?[ext4] (1 samples, 0.03%)</title><rect x="1097.4" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.4" y="542.0"></text>
</g>
<g>
<title>find_get_page (1 samples, 0.03%)</title><rect x="1097.4" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1100.4" y="526.0"></text>
</g>
<g>
<title>__find_get_page (1 samples, 0.03%)</title><rect x="1097.4" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1100.4" y="510.0"></text>
</g>
<g>
<title>ext4fs_dirhash?[ext4] (3 samples, 0.08%)</title><rect x="1097.7" y="643.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1100.7" y="654.0"></text>
</g>
<g>
<title>str2hashbuf_signed?[ext4] (3 samples, 0.08%)</title><rect x="1097.7" y="627.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.7" y="638.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.03%)</title><rect x="1098.6" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1101.6" y="654.0"></text>
</g>
<g>
<title>dx_probe?[ext4] (10 samples, 0.26%)</title><rect x="1098.9" y="659.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1101.9" y="670.0"></text>
</g>
<g>
<title>__ext4_read_dirblock?[ext4] (4 samples, 0.10%)</title><rect x="1099.2" y="643.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1102.2" y="654.0"></text>
</g>
<g>
<title>ext4_bread?[ext4] (4 samples, 0.10%)</title><rect x="1099.2" y="627.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1102.2" y="638.0"></text>
</g>
<g>
<title>ext4_getblk?[ext4] (4 samples, 0.10%)</title><rect x="1099.2" y="611.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1102.2" y="622.0"></text>
</g>
<g>
<title>__getblk (1 samples, 0.03%)</title><rect x="1099.2" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.2" y="606.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.03%)</title><rect x="1099.2" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1102.2" y="590.0"></text>
</g>
<g>
<title>ext4_map_blocks?[ext4] (3 samples, 0.08%)</title><rect x="1099.5" y="595.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1102.5" y="606.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent?[ext4] (2 samples, 0.05%)</title><rect x="1099.8" y="579.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.8" y="590.0"></text>
</g>
<g>
<title>ext4fs_dirhash?[ext4] (5 samples, 0.13%)</title><rect x="1100.4" y="643.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1103.4" y="654.0"></text>
</g>
<g>
<title>half_md4_transform (2 samples, 0.05%)</title><rect x="1100.7" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1103.7" y="638.0"></text>
</g>
<g>
<title>str2hashbuf_signed?[ext4] (2 samples, 0.05%)</title><rect x="1101.3" y="627.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1104.3" y="638.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.03%)</title><rect x="1101.9" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.9" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1102.2" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.2" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1102.2" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.2" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1102.2" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1105.2" y="638.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1105.2" y="622.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1105.2" y="606.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1105.2" y="590.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1102.2" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1105.2" y="574.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="1102.2" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1105.2" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="1102.2" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.2" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1102.2" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.2" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1102.2" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.2" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="1102.2" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1102.2" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1105.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1102.2" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1105.2" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1102.2" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1105.2" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1102.2" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1105.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1102.2" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.2" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1102.2" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1102.2" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.2" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1102.2" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.2" y="366.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="1102.2" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1105.2" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1102.2" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1105.2" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1102.2" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1105.2" y="318.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (11 samples, 0.28%)</title><rect x="1102.5" y="675.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1105.5" y="686.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (7 samples, 0.18%)</title><rect x="1102.5" y="659.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1105.5" y="670.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (4 samples, 0.10%)</title><rect x="1103.1" y="643.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1106.1" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (3 samples, 0.08%)</title><rect x="1103.5" y="627.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.5" y="638.0"></text>
</g>
<g>
<title>jbd2_journal_grab_journal_head?[jbd2] (2 samples, 0.05%)</title><rect x="1103.5" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.5" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_put_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1104.1" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.1" y="622.0"></text>
</g>
<g>
<title>ext4_get_inode_flags?[ext4] (1 samples, 0.03%)</title><rect x="1104.4" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.4" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (4 samples, 0.10%)</title><rect x="1104.7" y="659.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1107.7" y="670.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access?[ext4] (2 samples, 0.05%)</title><rect x="1104.7" y="643.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.7" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access?[jbd2] (2 samples, 0.05%)</title><rect x="1104.7" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.7" y="638.0"></text>
</g>
<g>
<title>do_get_write_access?[jbd2] (1 samples, 0.03%)</title><rect x="1104.7" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1107.7" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_add_journal_head?[jbd2] (1 samples, 0.03%)</title><rect x="1105.0" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1108.0" y="622.0"></text>
</g>
<g>
<title>ext4_get_inode_loc?[ext4] (2 samples, 0.05%)</title><rect x="1105.3" y="643.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.3" y="654.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc?[ext4] (2 samples, 0.05%)</title><rect x="1105.3" y="627.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1108.3" y="638.0"></text>
</g>
<g>
<title>ext4_get_group_desc?[ext4] (1 samples, 0.03%)</title><rect x="1105.6" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.6" y="622.0"></text>
</g>
<g>
<title>ext4_free_inodes_count?[ext4] (11 samples, 0.28%)</title><rect x="1105.9" y="691.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1108.9" y="702.0"></text>
</g>
<g>
<title>ext4_get_group_desc?[ext4] (3 samples, 0.08%)</title><rect x="1109.2" y="691.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1112.2" y="702.0"></text>
</g>
<g>
<title>ext4_init_acl?[ext4] (1 samples, 0.03%)</title><rect x="1110.2" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.2" y="702.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (2 samples, 0.05%)</title><rect x="1110.5" y="691.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.5" y="702.0"></text>
</g>
<g>
<title>new_inode (2 samples, 0.05%)</title><rect x="1111.1" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1114.1" y="702.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1111.7" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.7" y="702.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1111.7" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1114.7" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1111.7" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.7" y="670.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1111.7" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.7" y="654.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1111.7" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.7" y="638.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1111.7" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.7" y="622.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1111.7" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.7" y="606.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="1111.7" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.7" y="590.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="1111.7" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.7" y="574.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1111.7" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.7" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1111.7" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1114.7" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="1111.7" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.7" y="526.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1111.7" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1114.7" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1111.7" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.7" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1111.7" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.7" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1111.7" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1114.7" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1111.7" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.7" y="446.0"></text>
</g>
<g>
<title>tcp_filter (1 samples, 0.03%)</title><rect x="1111.7" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.7" y="430.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="1111.7" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.7" y="414.0"></text>
</g>
<g>
<title>ext4_set_aops?[ext4] (1 samples, 0.03%)</title><rect x="1112.0" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.0" y="718.0"></text>
</g>
<g>
<title>vfs_open (12 samples, 0.31%)</title><rect x="1112.3" y="723.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.3" y="734.0"></text>
</g>
<g>
<title>do_dentry_open (10 samples, 0.26%)</title><rect x="1112.3" y="707.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1115.3" y="718.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (5 samples, 0.13%)</title><rect x="1113.2" y="691.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1116.2" y="702.0"></text>
</g>
<g>
<title>dquot_file_open (1 samples, 0.03%)</title><rect x="1113.2" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1116.2" y="686.0"></text>
</g>
<g>
<title>__dquot_initialize (1 samples, 0.03%)</title><rect x="1113.2" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.2" y="670.0"></text>
</g>
<g>
<title>dquot_active.isra.7 (1 samples, 0.03%)</title><rect x="1113.2" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.2" y="654.0"></text>
</g>
<g>
<title>ext4_inode_attach_jinode?[ext4] (4 samples, 0.10%)</title><rect x="1113.5" y="675.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.5" y="686.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.10%)</title><rect x="1113.5" y="659.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.5" y="670.0"></text>
</g>
<g>
<title>lockref_get (2 samples, 0.05%)</title><rect x="1114.7" y="691.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.7" y="702.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (1 samples, 0.03%)</title><rect x="1115.3" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1118.3" y="718.0"></text>
</g>
<g>
<title>try_module_get (1 samples, 0.03%)</title><rect x="1115.6" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.6" y="718.0"></text>
</g>
<g>
<title>get_empty_filp (5 samples, 0.13%)</title><rect x="1115.9" y="739.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.9" y="750.0"></text>
</g>
<g>
<title>__percpu_counter_add (1 samples, 0.03%)</title><rect x="1117.2" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.2" y="734.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.03%)</title><rect x="1117.5" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.5" y="750.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.03%)</title><rect x="1117.8" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.8" y="750.0"></text>
</g>
<g>
<title>link_path_walk (13 samples, 0.34%)</title><rect x="1118.1" y="739.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.1" y="750.0"></text>
</g>
<g>
<title>lookup_fast (13 samples, 0.34%)</title><rect x="1118.1" y="723.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.1" y="734.0"></text>
</g>
<g>
<title>__d_lookup_rcu (12 samples, 0.31%)</title><rect x="1118.4" y="707.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.4" y="718.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.03%)</title><rect x="1122.0" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.0" y="750.0"></text>
</g>
<g>
<title>may_open (1 samples, 0.03%)</title><rect x="1122.3" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.3" y="750.0"></text>
</g>
<g>
<title>path_init (2 samples, 0.05%)</title><rect x="1122.6" y="739.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.6" y="750.0"></text>
</g>
<g>
<title>vfs_create (1 samples, 0.03%)</title><rect x="1123.3" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.3" y="750.0"></text>
</g>
<g>
<title>vfs_open (1 samples, 0.03%)</title><rect x="1123.6" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.6" y="750.0"></text>
</g>
<g>
<title>fd_install (2 samples, 0.05%)</title><rect x="1123.9" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.9" y="782.0"></text>
</g>
<g>
<title>__fd_install (2 samples, 0.05%)</title><rect x="1123.9" y="755.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.9" y="766.0"></text>
</g>
<g>
<title>get_unused_fd_flags (14 samples, 0.36%)</title><rect x="1124.5" y="771.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1127.5" y="782.0"></text>
</g>
<g>
<title>__alloc_fd (9 samples, 0.23%)</title><rect x="1125.4" y="755.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.4" y="766.0"></text>
</g>
<g>
<title>find_next_zero_bit (6 samples, 0.15%)</title><rect x="1126.3" y="739.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1129.3" y="750.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.05%)</title><rect x="1128.1" y="755.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1131.1" y="766.0"></text>
</g>
<g>
<title>getname (5 samples, 0.13%)</title><rect x="1128.7" y="771.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.7" y="782.0"></text>
</g>
<g>
<title>getname_flags (5 samples, 0.13%)</title><rect x="1128.7" y="755.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1131.7" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.08%)</title><rect x="1129.0" y="739.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.0" y="750.0"></text>
</g>
<g>
<title>strncpy_from_user (1 samples, 0.03%)</title><rect x="1130.0" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.0" y="750.0"></text>
</g>
<g>
<title>putname (2 samples, 0.05%)</title><rect x="1130.3" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1133.3" y="782.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="1130.3" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.3" y="766.0"></text>
</g>
<g>
<title>get_unused_fd_flags (3 samples, 0.08%)</title><rect x="1130.9" y="787.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.9" y="798.0"></text>
</g>
<g>
<title>putname (1 samples, 0.03%)</title><rect x="1131.8" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1134.8" y="798.0"></text>
</g>
<g>
<title>jni_DeleteLocalRef (1 samples, 0.03%)</title><rect x="1132.1" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1135.1" y="846.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="1132.4" y="835.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1135.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="1132.7" y="851.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1135.7" y="862.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.03%)</title><rect x="1132.7" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1135.7" y="846.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.05%)</title><rect x="1133.0" y="835.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1136.0" y="846.0"></text>
</g>
<g>
<title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="1133.6" y="851.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1136.6" y="862.0"></text>
</g>
<g>
<title>__close (34 samples, 0.88%)</title><rect x="1134.8" y="851.0" width="10.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1137.8" y="862.0"></text>
</g>
<g>
<title>do_notify_resume (3 samples, 0.08%)</title><rect x="1137.9" y="835.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.9" y="846.0"></text>
</g>
<g>
<title>int_signal (14 samples, 0.36%)</title><rect x="1138.8" y="835.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.8" y="846.0"></text>
</g>
<g>
<title>do_notify_resume (14 samples, 0.36%)</title><rect x="1138.8" y="819.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.8" y="830.0"></text>
</g>
<g>
<title>queued_spin_unlock_wait (1 samples, 0.03%)</title><rect x="1138.8" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>task_work_run (13 samples, 0.34%)</title><rect x="1139.1" y="803.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1142.1" y="814.0"></text>
</g>
<g>
<title>____fput (13 samples, 0.34%)</title><rect x="1139.1" y="787.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.1" y="798.0"></text>
</g>
<g>
<title>__fput (9 samples, 0.23%)</title><rect x="1139.1" y="771.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.1" y="782.0"></text>
</g>
<g>
<title>__percpu_counter_add (1 samples, 0.03%)</title><rect x="1139.1" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1142.1" y="766.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.03%)</title><rect x="1139.4" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1142.4" y="766.0"></text>
</g>
<g>
<title>call_rcu_sched (1 samples, 0.03%)</title><rect x="1139.7" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1142.7" y="766.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.03%)</title><rect x="1139.7" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.7" y="750.0"></text>
</g>
<g>
<title>dput (1 samples, 0.03%)</title><rect x="1140.0" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1143.0" y="766.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.03%)</title><rect x="1140.0" y="739.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1143.0" y="750.0"></text>
</g>
<g>
<title>ima_file_free (3 samples, 0.08%)</title><rect x="1140.3" y="755.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.3" y="766.0"></text>
</g>
<g>
<title>integrity_iint_find (2 samples, 0.05%)</title><rect x="1141.2" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.2" y="766.0"></text>
</g>
<g>
<title>module_put (3 samples, 0.08%)</title><rect x="1141.8" y="771.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.8" y="782.0"></text>
</g>
<g>
<title>put_pid (1 samples, 0.03%)</title><rect x="1142.8" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1145.8" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (7 samples, 0.18%)</title><rect x="1143.1" y="835.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.1" y="846.0"></text>
</g>
<g>
<title>sys_close (7 samples, 0.18%)</title><rect x="1143.1" y="819.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.1" y="830.0"></text>
</g>
<g>
<title>__close_fd (7 samples, 0.18%)</title><rect x="1143.1" y="803.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.1" y="814.0"></text>
</g>
<g>
<title>filp_close (4 samples, 0.10%)</title><rect x="1143.4" y="787.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.4" y="798.0"></text>
</g>
<g>
<title>dnotify_flush (1 samples, 0.03%)</title><rect x="1143.4" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.4" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1143.7" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.7" y="782.0"></text>
</g>
<g>
<title>kick_process (1 samples, 0.03%)</title><rect x="1143.7" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.7" y="766.0"></text>
</g>
<g>
<title>task_work_add (2 samples, 0.05%)</title><rect x="1144.0" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.0" y="782.0"></text>
</g>
<g>
<title>locks_remove_posix (2 samples, 0.05%)</title><rect x="1144.6" y="787.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1147.6" y="798.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="1145.2" y="851.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1148.2" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1145.5" y="851.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1148.5" y="862.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="1145.5" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.5" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1145.8" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1148.8" y="862.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.03%)</title><rect x="1146.1" y="851.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1149.1" y="862.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.03%)</title><rect x="1146.4" y="851.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1149.4" y="862.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.08%)</title><rect x="1146.7" y="851.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1149.7" y="862.0"></text>
</g>
<g>
<title>handleOpen (1 samples, 0.03%)</title><rect x="1147.6" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1150.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.10%)</title><rect x="1147.9" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="1148.6" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.6" y="846.0"></text>
</g>
<g>
<title>hammer/utils$rand_str2.invoke (18 samples, 0.46%)</title><rect x="1149.2" y="947.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.2" y="958.0"></text>
</g>
<g>
<title>hammer/utils$rand_str2.invokeStatic (18 samples, 0.46%)</title><rect x="1149.2" y="931.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Double.intValue (1 samples, 0.03%)</title><rect x="1149.8" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Double.valueOf (1 samples, 0.03%)</title><rect x="1150.1" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="1150.4" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.4" y="926.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1151.0" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.0" y="926.0"></text>
</g>
<g>
<title>java/util/Random.seedUniquifier (2 samples, 0.05%)</title><rect x="1151.0" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1154.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.03%)</title><rect x="1151.3" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.3" y="894.0"></text>
</g>
<g>
<title>java/util/Random.nextFloat (10 samples, 0.26%)</title><rect x="1151.6" y="915.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.6" y="926.0"></text>
</g>
<g>
<title>java/util/Random.next (10 samples, 0.26%)</title><rect x="1151.6" y="899.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.03%)</title><rect x="1154.6" y="947.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.21%)</title><rect x="1155.0" y="947.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.21%)</title><rect x="1155.0" y="931.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.21%)</title><rect x="1155.0" y="915.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.03%)</title><rect x="1155.0" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.access$300 (1 samples, 0.03%)</title><rect x="1155.0" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringCoding.safeTrim (1 samples, 0.03%)</title><rect x="1155.0" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.deref (7 samples, 0.18%)</title><rect x="1155.3" y="899.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.3" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.18%)</title><rect x="1155.3" y="883.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.3" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (7 samples, 0.18%)</title><rect x="1155.3" y="867.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.18%)</title><rect x="1155.3" y="851.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (6 samples, 0.15%)</title><rect x="1155.6" y="835.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="1157.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.4" y="958.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (52 samples, 1.34%)</title><rect x="1157.7" y="947.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.7" y="958.0"></text>
</g>
<g>
<title>java/security/SecureRandom.nextBytes (52 samples, 1.34%)</title><rect x="1157.7" y="931.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.7" y="942.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.engineNextBytes (52 samples, 1.34%)</title><rect x="1157.7" y="915.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.7" y="926.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.access$400 (52 samples, 1.34%)</title><rect x="1157.7" y="899.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.7" y="910.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.implNextBytes (52 samples, 1.34%)</title><rect x="1157.7" y="883.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1159.8" y="867.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1162.8" y="878.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.ensureBufferValid (4 samples, 0.10%)</title><rect x="1160.1" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.1" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1160.1" y="851.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1163.1" y="862.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.readFully (3 samples, 0.08%)</title><rect x="1160.4" y="851.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.4" y="862.0"></text>
</g>
<g>
<title>java/io/FileInputStream.read (3 samples, 0.08%)</title><rect x="1160.4" y="835.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.4" y="846.0"></text>
</g>
<g>
<title>java/io/FileInputStream.readBytes (3 samples, 0.08%)</title><rect x="1160.4" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.4" y="830.0"></text>
</g>
<g>
<title>readBytes (3 samples, 0.08%)</title><rect x="1160.4" y="803.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1163.4" y="814.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (3 samples, 0.08%)</title><rect x="1160.4" y="787.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1163.4" y="798.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.08%)</title><rect x="1160.4" y="771.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.4" y="782.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.08%)</title><rect x="1160.4" y="755.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.4" y="766.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.08%)</title><rect x="1160.4" y="739.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.4" y="750.0"></text>
</g>
<g>
<title>urandom_read (3 samples, 0.08%)</title><rect x="1160.4" y="723.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.4" y="734.0"></text>
</g>
<g>
<title>extract_crng (3 samples, 0.08%)</title><rect x="1160.4" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.4" y="718.0"></text>
</g>
<g>
<title>_extract_crng (3 samples, 0.08%)</title><rect x="1160.4" y="691.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="1160.4" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.4" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.getMixRandom (6 samples, 0.15%)</title><rect x="1161.4" y="867.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.4" y="878.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1162.6" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.6" y="862.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.init (2 samples, 0.05%)</title><rect x="1162.6" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.6" y="846.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.engineNextBytes (34 samples, 0.88%)</title><rect x="1163.2" y="867.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.2" y="878.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (18 samples, 0.46%)</title><rect x="1165.9" y="851.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.9" y="862.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (16 samples, 0.41%)</title><rect x="1165.9" y="835.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.9" y="846.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.41%)</title><rect x="1165.9" y="819.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.9" y="830.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.41%)</title><rect x="1165.9" y="803.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.9" y="814.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implDigest (16 samples, 0.41%)</title><rect x="1165.9" y="787.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.9" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (1 samples, 0.03%)</title><rect x="1165.9" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.9" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (4 samples, 0.10%)</title><rect x="1166.2" y="771.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1166.8" y="755.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1169.8" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress (8 samples, 0.21%)</title><rect x="1167.4" y="771.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.4" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress0 (7 samples, 0.18%)</title><rect x="1167.8" y="755.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.8" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress0 (3 samples, 0.08%)</title><rect x="1169.9" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.9" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (2 samples, 0.05%)</title><rect x="1170.8" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.8" y="846.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (7 samples, 0.18%)</title><rect x="1171.4" y="851.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (6 samples, 0.15%)</title><rect x="1171.4" y="835.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (5 samples, 0.13%)</title><rect x="1171.7" y="819.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.7" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1171.7" y="803.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1174.7" y="814.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineReset (4 samples, 0.10%)</title><rect x="1172.0" y="803.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.0" y="814.0"></text>
</g>
<g>
<title>arrayof_jint_fill (2 samples, 0.05%)</title><rect x="1172.3" y="787.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implReset (1 samples, 0.03%)</title><rect x="1172.9" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.9" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.03%)</title><rect x="1172.9" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.9" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (1 samples, 0.03%)</title><rect x="1173.2" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.2" y="846.0"></text>
</g>
<g>
<title>start_thread (54 samples, 1.39%)</title><rect x="1173.5" y="1091.0" width="16.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1176.5" y="1102.0"></text>
</g>
<g>
<title>java_start(Thread*) (54 samples, 1.39%)</title><rect x="1173.5" y="1075.0" width="16.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1176.5" y="1086.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::run() (2 samples, 0.05%)</title><rect x="1173.5" y="1059.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.5" y="1070.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::run_young_rs_sampling() (2 samples, 0.05%)</title><rect x="1173.5" y="1043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.5" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1173.5" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.5" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1173.5" y="1011.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.5" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="1173.5" y="995.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1176.5" y="1006.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="1173.5" y="979.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1176.5" y="990.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1173.5" y="963.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.5" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1173.5" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.5" y="958.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1173.5" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.5" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1173.5" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1176.5" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1173.5" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1176.5" y="910.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1173.5" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1176.5" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1173.5" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.5" y="878.0"></text>
</g>
<g>
<title>YoungList::rs_length_sampling_next() (1 samples, 0.03%)</title><rect x="1173.8" y="1027.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.8" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.49%)</title><rect x="1174.2" y="1059.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.2" y="1070.0"></text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1174.2" y="1043.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.2" y="1054.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.05%)</title><rect x="1174.2" y="1027.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.2" y="1038.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="1174.2" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.2" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1174.5" y="1011.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1177.5" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) [clone .part.432] (16 samples, 0.41%)</title><rect x="1174.8" y="1043.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.8" y="1054.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.23%)</title><rect x="1174.8" y="1027.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.8" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.13%)</title><rect x="1174.8" y="1011.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.8" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1175.1" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.1" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.03%)</title><rect x="1175.1" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.1" y="990.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (3 samples, 0.08%)</title><rect x="1175.4" y="995.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1178.4" y="1006.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1176.0" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1176.0" y="963.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.0" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1176.0" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.0" y="958.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1176.0" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.0" y="942.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1176.0" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.0" y="926.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1176.0" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1179.0" y="910.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1176.0" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.0" y="894.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="1176.0" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1179.0" y="878.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="1176.0" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.0" y="862.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="1176.0" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.0" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1176.0" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.0" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="1176.0" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1179.0" y="814.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1176.0" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1176.0" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.0" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1176.0" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.0" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1176.0" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1176.0" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1176.0" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.0" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1176.0" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.0" y="702.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1176.0" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="1176.0" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.0" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1176.0" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.0" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1176.0" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.0" y="638.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="1176.3" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.3" y="1022.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.08%)</title><rect x="1176.6" y="1011.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1179.6" y="1022.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (2 samples, 0.05%)</title><rect x="1177.5" y="1027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.5" y="1038.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1177.5" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (1 samples, 0.03%)</title><rect x="1177.5" y="995.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1180.5" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(OopClosure*, OopClosure*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1177.8" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.8" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1177.8" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.8" y="1006.0"></text>
</g>
<g>
<title>Dictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1177.8" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.8" y="990.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (5 samples, 0.13%)</title><rect x="1178.1" y="1027.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="1038.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (5 samples, 0.13%)</title><rect x="1178.1" y="1011.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.1" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (4 samples, 0.10%)</title><rect x="1178.1" y="995.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.1" y="1006.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (4 samples, 0.10%)</title><rect x="1178.1" y="979.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.1" y="990.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer_helper(CardTableEntryClosure*, unsigned int, BufferNode*) (4 samples, 0.10%)</title><rect x="1178.1" y="963.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.1" y="974.0"></text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.10%)</title><rect x="1178.1" y="947.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.1" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) [clone .part.174] (4 samples, 0.10%)</title><rect x="1178.1" y="931.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="942.0"></text>
</g>
<g>
<title>HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*) (4 samples, 0.10%)</title><rect x="1178.1" y="915.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.1" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (3 samples, 0.08%)</title><rect x="1178.1" y="899.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.1" y="910.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, int) (3 samples, 0.08%)</title><rect x="1178.1" y="883.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="894.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_oop_iterate_nv_m(oopDesc*, FilterOutOfRegionClosure*, MemRegion) (1 samples, 0.03%)</title><rect x="1179.0" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>G1RemSet::scanRS(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="1179.3" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.3" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::collection_set_iterate_from(HeapRegion*, HeapRegionClosure*) (1 samples, 0.03%)</title><rect x="1179.3" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.3" y="990.0"></text>
</g>
<g>
<title>ScanRSClosure::doHeapRegion(HeapRegion*) (1 samples, 0.03%)</title><rect x="1179.3" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.3" y="974.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1179.3" y="947.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1182.3" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1179.3" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1182.3" y="942.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1179.6" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.6" y="1054.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1179.6" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="1179.6" y="1011.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1182.6" y="1022.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="1179.6" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1182.6" y="1006.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1179.6" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.6" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1179.6" y="963.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1182.6" y="974.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1179.6" y="947.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.6" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1179.6" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.6" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1179.6" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1182.6" y="926.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1179.6" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.6" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1179.6" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (30 samples, 0.77%)</title><rect x="1179.9" y="1059.0" width="9.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.9" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (30 samples, 0.77%)</title><rect x="1179.9" y="1043.0" width="9.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.9" y="1054.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (28 samples, 0.72%)</title><rect x="1179.9" y="1027.0" width="8.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.9" y="1038.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (22 samples, 0.57%)</title><rect x="1179.9" y="1011.0" width="6.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.9" y="1022.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (22 samples, 0.57%)</title><rect x="1179.9" y="995.0" width="6.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="1006.0"></text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.03%)</title><rect x="1179.9" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.9" y="990.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.03%)</title><rect x="1179.9" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.9" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1179.9" y="947.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.9" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1179.9" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1179.9" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.9" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1179.9" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.9" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1179.9" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1179.9" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.9" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_ldc(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1179.9" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.03%)</title><rect x="1179.9" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.9" y="846.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1179.9" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.9" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1179.9" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.9" y="814.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.03%)</title><rect x="1179.9" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.03%)</title><rect x="1179.9" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.9" y="782.0"></text>
</g>
<g>
<title>ciObject::ciObject(Handle) (1 samples, 0.03%)</title><rect x="1179.9" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.9" y="766.0"></text>
</g>
<g>
<title>JNIHandles::make_local(oopDesc*) (1 samples, 0.03%)</title><rect x="1179.9" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="750.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 0.34%)</title><rect x="1180.2" y="979.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.2" y="990.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="1180.2" y="963.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.2" y="974.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1180.2" y="947.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="958.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.03%)</title><rect x="1180.6" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.6" y="974.0"></text>
</g>
<g>
<title>AddPNode::ideal_reg() const (1 samples, 0.03%)</title><rect x="1180.6" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.6" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="1180.9" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.9" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="1180.9" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.9" y="958.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1180.9" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.9" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.26%)</title><rect x="1181.2" y="963.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.2" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.03%)</title><rect x="1181.2" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.2" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.03%)</title><rect x="1181.5" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.5" y="958.0"></text>
</g>
<g>
<title>MachOper::num_edges() const (1 samples, 0.03%)</title><rect x="1181.5" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.5" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.10%)</title><rect x="1181.8" y="947.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.05%)</title><rect x="1182.4" y="931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.4" y="942.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1182.7" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="1183.0" y="947.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="958.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.03%)</title><rect x="1183.0" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1186.0" y="942.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.03%)</title><rect x="1183.3" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.3" y="958.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1183.6" y="947.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.6" y="958.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.13%)</title><rect x="1184.2" y="979.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (4 samples, 0.10%)</title><rect x="1184.2" y="963.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1184.2" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1184.5" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.5" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="1184.8" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="1184.8" y="931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.8" y="942.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1184.8" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.8" y="926.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.03%)</title><rect x="1184.8" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.8" y="910.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.03%)</title><rect x="1184.8" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="894.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.03%)</title><rect x="1184.8" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="878.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1185.1" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="1185.4" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.4" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1185.4" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.4" y="958.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1185.4" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.4" y="942.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.03%)</title><rect x="1185.4" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.4" y="926.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.03%)</title><rect x="1185.4" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="910.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1185.4" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.4" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1185.7" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1185.7" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1185.7" y="947.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1185.7" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1185.7" y="915.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1185.7" y="899.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1185.7" y="883.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293] (1 samples, 0.03%)</title><rect x="1185.7" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1185.7" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1186.0" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1186.0" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1186.0" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1186.0" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1186.0" y="803.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1186.0" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="798.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1186.0" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1186.0" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1186.0" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1186.0" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1186.0" y="707.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1186.0" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1186.0" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.0" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1186.0" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="1186.0" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.0" y="654.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1186.0" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.0" y="638.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.0" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.0" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.0" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.0" y="563.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1186.3" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.3" y="990.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.3" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="974.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (6 samples, 0.15%)</title><rect x="1186.6" y="1011.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.6" y="1022.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (6 samples, 0.15%)</title><rect x="1186.6" y="995.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.6" y="1006.0"></text>
</g>
<g>
<title>Compilation::compile_method() (6 samples, 0.15%)</title><rect x="1186.6" y="979.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="990.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.15%)</title><rect x="1186.6" y="963.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.6" y="974.0"></text>
</g>
<g>
<title>Compilation::build_hir() (3 samples, 0.08%)</title><rect x="1186.6" y="947.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.6" y="958.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.05%)</title><rect x="1186.6" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.6" y="942.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.05%)</title><rect x="1186.6" y="915.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.05%)</title><rect x="1186.6" y="899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.05%)</title><rect x="1186.6" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.05%)</title><rect x="1186.6" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.05%)</title><rect x="1186.6" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1186.6" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.05%)</title><rect x="1186.6" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.6" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1186.6" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1186.6" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1186.6" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1186.6" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>ciMethod::should_exclude() (1 samples, 0.03%)</title><rect x="1186.6" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="1186.6" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.0" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.03%)</title><rect x="1187.0" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>BlockListBuilder::set_entries(int) (1 samples, 0.03%)</title><rect x="1187.0" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) [clone .constprop.448] (1 samples, 0.03%)</title><rect x="1187.0" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.03%)</title><rect x="1187.0" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.03%)</title><rect x="1187.3" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>Instruction::mirror(Instruction::Condition) (1 samples, 0.03%)</title><rect x="1187.3" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.08%)</title><rect x="1187.6" y="947.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.6" y="958.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.03%)</title><rect x="1187.6" y="931.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.6" y="942.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (1 samples, 0.03%)</title><rect x="1187.6" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.6" y="926.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.03%)</title><rect x="1187.6" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.03%)</title><rect x="1187.6" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.03%)</title><rect x="1187.6" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.03%)</title><rect x="1187.6" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.05%)</title><rect x="1187.9" y="931.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.9" y="942.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.03%)</title><rect x="1187.9" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.03%)</title><rect x="1187.9" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.03%)</title><rect x="1188.2" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.2" y="926.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.05%)</title><rect x="1188.5" y="1027.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.5" y="1038.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.05%)</title><rect x="1188.5" y="1011.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.5" y="1022.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.05%)</title><rect x="1188.5" y="995.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.5" y="1006.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (2 samples, 0.05%)</title><rect x="1188.5" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.5" y="990.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (2 samples, 0.05%)</title><rect x="1188.5" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.5" y="974.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.05%)</title><rect x="1189.1" y="1059.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.05%)</title><rect x="1189.1" y="1043.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.05%)</title><rect x="1189.1" y="1027.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.05%)</title><rect x="1189.1" y="1011.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1022.0"></text>
</g>
<g>
<title>VM_BulkRevokeBias::doit() (1 samples, 0.03%)</title><rect x="1189.1" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="1006.0"></text>
</g>
<g>
<title>bulk_revoke_or_rebias_at_safepoint(oopDesc*, bool, bool, JavaThread*) (1 samples, 0.03%)</title><rect x="1189.1" y="979.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.1" y="990.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) [clone .part.164] (1 samples, 0.03%)</title><rect x="1189.1" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.1" y="974.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 0.03%)</title><rect x="1189.1" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="958.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.03%)</title><rect x="1189.1" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="942.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.03%)</title><rect x="1189.1" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="926.0"></text>
</g>
<g>
<title>VM_G1IncCollectionPause::doit() (1 samples, 0.03%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1189.4" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_humongous_regions_with_in_cset_fast_test() (1 samples, 0.03%)</title><rect x="1189.4" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>HeapRegionManager::iterate(HeapRegionClosure*) const (1 samples, 0.03%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>RegisterHumongousWithInCSetFastTestClosure::doHeapRegion(HeapRegion*) (1 samples, 0.03%)</title><rect x="1189.4" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.7" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1189.7" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
</g>
</svg>
