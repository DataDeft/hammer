<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (2,929 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="10.0" y="995.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="10.4" y="995.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.4" y="1006.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="10.4" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="990.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::write_ref_array_work(MemRegion) (1 samples, 0.03%)</title><rect x="10.4" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="974.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="10.4" y="947.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="958.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="10.8" y="995.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.8" y="1006.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="10.8" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="990.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::write_ref_array_work(MemRegion) (1 samples, 0.03%)</title><rect x="10.8" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,843 samples, 97.06%)</title><rect x="11.2" y="995.0" width="1145.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.2" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>clojure/lang/AFn.run (5 samples, 0.17%)</title><rect x="11.2" y="979.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.2" y="990.0"></text>
</g>
<g>
<title>clojure/core/async/impl/concurrent$counted_thread_factory$reify__736$fn__737.invoke (5 samples, 0.17%)</title><rect x="11.2" y="963.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 0.17%)</title><rect x="11.2" y="947.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 0.17%)</title><rect x="11.2" y="931.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.2" y="942.0"></text>
</g>
<g>
<title>clojure/lang/AFn.run (5 samples, 0.17%)</title><rect x="11.2" y="915.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.2" y="926.0"></text>
</g>
<g>
<title>clojure/core/async/impl/channels/ManyToManyChannel$fn__833$fn__834.invoke (5 samples, 0.17%)</title><rect x="11.2" y="899.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.2" y="910.0"></text>
</g>
<g>
<title>clojure/core/async$do_alts$fn__6163$fn__6166.invoke (5 samples, 0.17%)</title><rect x="11.2" y="883.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.2" y="894.0"></text>
</g>
<g>
<title>clojure/core/async$ioc_alts_BANG_$fn__6224.invoke (5 samples, 0.17%)</title><rect x="11.2" y="867.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invoke (5 samples, 0.17%)</title><rect x="11.2" y="851.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invokeStatic (5 samples, 0.17%)</title><rect x="11.2" y="835.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invoke (5 samples, 0.17%)</title><rect x="11.2" y="819.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invokeStatic (5 samples, 0.17%)</title><rect x="11.2" y="803.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="814.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8990$state_machine__5995__auto____9035.invoke (5 samples, 0.17%)</title><rect x="11.2" y="787.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.2" y="798.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8990$state_machine__5995__auto____9035$fn__9037.invoke (5 samples, 0.17%)</title><rect x="11.2" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.2" y="782.0"></text>
</g>
<g>
<title>clojure/lang/Numbers.double_array (3 samples, 0.10%)</title><rect x="11.2" y="755.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.2" y="766.0"></text>
</g>
<g>
<title>clojure/lang/RT.count (3 samples, 0.10%)</title><rect x="11.2" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.2" y="750.0"></text>
</g>
<g>
<title>clojure/lang/RT.countFrom (3 samples, 0.10%)</title><rect x="11.2" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.2" y="734.0"></text>
</g>
<g>
<title>clojure/lang/Cons.next (2 samples, 0.07%)</title><rect x="11.6" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.6" y="718.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (2 samples, 0.07%)</title><rect x="11.6" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.6" y="702.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.sval (2 samples, 0.07%)</title><rect x="11.6" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.6" y="686.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495$fn__5496.invoke (2 samples, 0.07%)</title><rect x="11.6" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.6" y="670.0"></text>
</g>
<g>
<title>clojure/core$chunked_seq_QMARK_.invokeStatic (1 samples, 0.03%)</title><rect x="11.6" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.6" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="11.6" y="627.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.6" y="638.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495.invoke (1 samples, 0.03%)</title><rect x="12.0" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.0" y="654.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495$fn__5496.&lt;init&gt; (1 samples, 0.03%)</title><rect x="12.0" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.0" y="638.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invoke (1 samples, 0.03%)</title><rect x="12.4" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="766.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invokeStatic (1 samples, 0.03%)</title><rect x="12.4" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.4" y="750.0"></text>
</g>
<g>
<title>clojure/tools/logging/impl$fn__8629$G__8611__8640.invoke (1 samples, 0.03%)</title><rect x="12.4" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.4" y="734.0"></text>
</g>
<g>
<title>clojure/tools/logging$eval136$fn__141.invoke (1 samples, 0.03%)</title><rect x="12.4" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.4" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.03%)</title><rect x="12.4" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.03%)</title><rect x="12.4" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.03%)</title><rect x="12.4" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.03%)</title><rect x="12.4" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.4" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="12.4" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.03%)</title><rect x="12.4" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.4" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.03%)</title><rect x="12.4" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.4" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.03%)</title><rect x="12.4" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.4" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.03%)</title><rect x="12.4" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.03%)</title><rect x="12.4" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.4" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.03%)</title><rect x="12.4" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.4" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.03%)</title><rect x="12.4" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.03%)</title><rect x="12.4" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.03%)</title><rect x="12.4" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.4" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.03%)</title><rect x="12.4" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.4" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.03%)</title><rect x="12.4" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.4" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.03%)</title><rect x="12.4" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.4" y="446.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.03%)</title><rect x="12.4" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="430.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="12.4" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.4" y="414.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.03%)</title><rect x="12.4" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.4" y="398.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.03%)</title><rect x="12.4" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="382.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.03%)</title><rect x="12.4" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.4" y="366.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.03%)</title><rect x="12.4" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.4" y="350.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.03%)</title><rect x="12.4" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="334.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.getWeekNumber (1 samples, 0.03%)</title><rect x="12.4" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.4" y="318.0"></text>
</g>
<g>
<title>sun/util/calendar/AbstractCalendar.getDayOfWeekDateOnOrBefore (1 samples, 0.03%)</title><rect x="12.4" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.03%)</title><rect x="12.8" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.8" y="766.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.8" y="750.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.doSort (1 samples, 0.03%)</title><rect x="12.8" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.8" y="734.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.8" y="718.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.8" y="702.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.8" y="686.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.8" y="670.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.8" y="654.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.8" y="638.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.03%)</title><rect x="12.8" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.8" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (1,187 samples, 40.53%)</title><rect x="13.2" y="979.0" width="478.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.2" y="990.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.run (9 samples, 0.31%)</title><rect x="13.2" y="963.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.2" y="974.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelBucket.expireTimeouts (2 samples, 0.07%)</title><rect x="13.6" y="947.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.6" y="958.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelBucket.remove (1 samples, 0.03%)</title><rect x="13.6" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.6" y="942.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.expire (1 samples, 0.03%)</title><rect x="14.0" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.0" y="942.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler$$Lambda$287/1600572736.run (1 samples, 0.03%)</title><rect x="14.0" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.0" y="926.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.lambda$scheduleTimeout$1 (1 samples, 0.03%)</title><rect x="14.0" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.0" y="910.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler$InitialPrepareCallback.cancel (1 samples, 0.03%)</title><rect x="14.0" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.0" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.cancel (1 samples, 0.03%)</title><rect x="14.0" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.0" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.writeAndFlush (1 samples, 0.03%)</title><rect x="14.0" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.0" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.enqueue (1 samples, 0.03%)</title><rect x="14.0" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.access$100 (1 samples, 0.03%)</title><rect x="14.0" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.0" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (1 samples, 0.03%)</title><rect x="14.0" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.0" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.03%)</title><rect x="14.0" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.0" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.03%)</title><rect x="14.0" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (1 samples, 0.03%)</title><rect x="14.0" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (1 samples, 0.03%)</title><rect x="14.0" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="14.0" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.03%)</title><rect x="14.0" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.03%)</title><rect x="14.0" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.0" y="702.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="14.0" y="675.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="17.0" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="14.0" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.0" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.03%)</title><rect x="14.0" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="17.0" y="654.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.03%)</title><rect x="14.0" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.0" y="638.0"></text>
</g>
<g>
<title>do_sync_write (1 samples, 0.03%)</title><rect x="14.0" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.0" y="622.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.03%)</title><rect x="14.0" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="17.0" y="606.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="14.0" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.0" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="14.0" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="14.0" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.0" y="558.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.processCancelledTasks (4 samples, 0.14%)</title><rect x="14.4" y="947.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.4" y="958.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.transferTimeoutsToBuckets (1 samples, 0.03%)</title><rect x="16.0" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.0" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (1 samples, 0.03%)</title><rect x="16.0" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.get (1 samples, 0.03%)</title><rect x="16.4" y="947.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.4" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1,178 samples, 40.22%)</title><rect x="16.8" y="963.0" width="474.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="974.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1,178 samples, 40.22%)</title><rect x="16.8" y="947.0" width="474.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.8" y="958.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (1,177 samples, 40.18%)</title><rect x="16.8" y="931.0" width="474.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.8" y="942.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="17.3" y="915.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="20.3" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="17.3" y="899.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="20.3" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (388 samples, 13.25%)</title><rect x="17.7" y="915.0" width="156.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.7" y="926.0">io/netty/channel/nio..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="17.7" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="20.7" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (387 samples, 13.21%)</title><rect x="18.1" y="899.0" width="155.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.1" y="910.0">io/netty/channel/nio..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (387 samples, 13.21%)</title><rect x="18.1" y="883.0" width="155.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.1" y="894.0">io/netty/channel/nio..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (386 samples, 13.18%)</title><rect x="18.5" y="867.0" width="155.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.5" y="878.0">io/netty/channel/nio..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (259 samples, 8.84%)</title><rect x="19.3" y="851.0" width="104.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.3" y="862.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (259 samples, 8.84%)</title><rect x="19.3" y="835.0" width="104.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="846.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (259 samples, 8.84%)</title><rect x="19.3" y="819.0" width="104.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="830.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (259 samples, 8.84%)</title><rect x="19.3" y="803.0" width="104.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.3" y="814.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (259 samples, 8.84%)</title><rect x="19.3" y="787.0" width="104.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.3" y="798.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (259 samples, 8.84%)</title><rect x="19.3" y="771.0" width="104.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.3" y="782.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="19.3" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.3" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.03%)</title><rect x="19.3" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.3" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="19.3" y="723.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="22.3" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (258 samples, 8.81%)</title><rect x="19.7" y="755.0" width="103.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.7" y="766.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (253 samples, 8.64%)</title><rect x="21.7" y="739.0" width="101.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.7" y="750.0">io/netty/han..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (11 samples, 0.38%)</title><rect x="23.7" y="723.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.7" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (11 samples, 0.38%)</title><rect x="23.7" y="707.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.7" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (6 samples, 0.20%)</title><rect x="23.7" y="691.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (5 samples, 0.17%)</title><rect x="24.1" y="675.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.1" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (5 samples, 0.17%)</title><rect x="24.1" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.1" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (5 samples, 0.17%)</title><rect x="24.1" y="643.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (5 samples, 0.17%)</title><rect x="24.1" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.1" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (4 samples, 0.14%)</title><rect x="24.5" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (4 samples, 0.14%)</title><rect x="24.5" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.5" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (4 samples, 0.14%)</title><rect x="24.5" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (4 samples, 0.14%)</title><rect x="24.5" y="563.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (5 samples, 0.17%)</title><rect x="26.1" y="691.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.1" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (4 samples, 0.14%)</title><rect x="26.5" y="675.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.5" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (2 samples, 0.07%)</title><rect x="27.3" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.3" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (2 samples, 0.07%)</title><rect x="27.3" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (2 samples, 0.07%)</title><rect x="27.3" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offer (2 samples, 0.07%)</title><rect x="27.3" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offerLast (2 samples, 0.07%)</title><rect x="27.3" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (2 samples, 0.07%)</title><rect x="27.3" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.3" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.alloc (1 samples, 0.03%)</title><rect x="28.1" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.config (1 samples, 0.03%)</title><rect x="28.1" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.1" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (63 samples, 2.15%)</title><rect x="28.5" y="723.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.5" y="734.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (60 samples, 2.05%)</title><rect x="28.9" y="707.0" width="24.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.9" y="718.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (60 samples, 2.05%)</title><rect x="28.9" y="691.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.9" y="702.0">i..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.decode (60 samples, 2.05%)</title><rect x="28.9" y="675.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.9" y="686.0">c..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.decode (57 samples, 1.95%)</title><rect x="28.9" y="659.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.9" y="670.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (24 samples, 0.82%)</title><rect x="29.7" y="643.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (24 samples, 0.82%)</title><rect x="29.7" y="627.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompressWithoutLength (23 samples, 0.79%)</title><rect x="29.7" y="611.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.decompressDirect (23 samples, 0.79%)</title><rect x="29.7" y="595.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.7" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (2 samples, 0.07%)</title><rect x="29.7" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.7" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (2 samples, 0.07%)</title><rect x="29.7" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.7" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBuffer (2 samples, 0.07%)</title><rect x="29.7" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.7" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (2 samples, 0.07%)</title><rect x="29.7" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.7" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="29.7" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.7" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.duplicateInternalNioBuffer (1 samples, 0.03%)</title><rect x="30.1" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.1" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="30.1" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.1" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.03%)</title><rect x="30.1" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.1" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.03%)</title><rect x="30.1" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="30.1" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="30.1" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="30.1" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="30.1" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="30.1" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.1" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (9 samples, 0.31%)</title><rect x="30.5" y="579.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.5" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (9 samples, 0.31%)</title><rect x="30.5" y="563.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (9 samples, 0.31%)</title><rect x="30.5" y="547.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.5" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (3 samples, 0.10%)</title><rect x="30.5" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.5" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (3 samples, 0.10%)</title><rect x="30.5" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.5" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (3 samples, 0.10%)</title><rect x="30.5" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.5" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (3 samples, 0.10%)</title><rect x="30.5" y="483.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.5" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (3 samples, 0.10%)</title><rect x="30.5" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.10%)</title><rect x="30.5" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="30.9" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="30.9" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.9" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.07%)</title><rect x="30.9" y="403.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="33.9" y="414.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.07%)</title><rect x="30.9" y="387.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="33.9" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.07%)</title><rect x="30.9" y="371.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.9" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.07%)</title><rect x="30.9" y="355.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="33.9" y="366.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.03%)</title><rect x="31.4" y="339.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="34.4" y="350.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.03%)</title><rect x="31.4" y="323.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="34.4" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (6 samples, 0.20%)</title><rect x="31.8" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.8" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.03%)</title><rect x="31.8" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.8" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.03%)</title><rect x="31.8" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.8" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (1 samples, 0.03%)</title><rect x="31.8" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (1 samples, 0.03%)</title><rect x="31.8" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.8" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (1 samples, 0.03%)</title><rect x="31.8" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (1 samples, 0.03%)</title><rect x="31.8" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (1 samples, 0.03%)</title><rect x="31.8" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.8" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (5 samples, 0.17%)</title><rect x="32.2" y="515.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.2" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (5 samples, 0.17%)</title><rect x="32.2" y="499.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.2" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (5 samples, 0.17%)</title><rect x="32.2" y="483.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.2" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (5 samples, 0.17%)</title><rect x="32.2" y="467.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.2" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 0.03%)</title><rect x="32.2" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.2" y="462.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.03%)</title><rect x="32.2" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.2" y="446.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (1 samples, 0.03%)</title><rect x="32.2" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.2" y="430.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (1 samples, 0.03%)</title><rect x="32.2" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.2" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (2 samples, 0.07%)</title><rect x="32.6" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (2 samples, 0.07%)</title><rect x="32.6" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (2 samples, 0.07%)</title><rect x="32.6" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (1 samples, 0.03%)</title><rect x="32.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (1 samples, 0.03%)</title><rect x="32.6" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.6" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.03%)</title><rect x="33.0" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="36.0" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.03%)</title><rect x="33.0" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.0" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (1 samples, 0.03%)</title><rect x="33.0" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.0" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (2 samples, 0.07%)</title><rect x="33.4" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.4" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (1 samples, 0.03%)</title><rect x="33.4" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.4" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.03%)</title><rect x="33.8" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.8" y="446.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNIFastDecompressor.decompress (12 samples, 0.41%)</title><rect x="34.2" y="579.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.2" y="590.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_decompress_fast (12 samples, 0.41%)</title><rect x="34.2" y="563.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.2" y="574.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1decompress_1fast (5 samples, 0.17%)</title><rect x="34.2" y="547.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.2" y="558.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (4 samples, 0.14%)</title><rect x="34.2" y="531.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="37.2" y="542.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.03%)</title><rect x="35.0" y="515.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.0" y="526.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (1 samples, 0.03%)</title><rect x="35.4" y="515.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="38.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.03%)</title><rect x="35.4" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.4" y="510.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (1 samples, 0.03%)</title><rect x="35.8" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="38.8" y="542.0"></text>
</g>
<g>
<title>LZ4_decompress_fast (2 samples, 0.07%)</title><rect x="36.2" y="547.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="39.2" y="558.0"></text>
</g>
<g>
<title>LZ4_decompress_fast@plt (1 samples, 0.03%)</title><rect x="37.0" y="547.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="40.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="37.4" y="547.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="40.4" y="558.0"></text>
</g>
<g>
<title>LZ4_decompress_fast (2 samples, 0.07%)</title><rect x="37.4" y="531.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="40.4" y="542.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (2 samples, 0.07%)</title><rect x="38.2" y="531.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="41.2" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.readUncompressedLength (1 samples, 0.03%)</title><rect x="39.0" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.0" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (1 samples, 0.03%)</title><rect x="39.0" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.0" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf._getInt (1 samples, 0.03%)</title><rect x="39.0" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.0" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.unwrap (1 samples, 0.03%)</title><rect x="39.0" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.0" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.03%)</title><rect x="39.0" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.0" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (9 samples, 0.31%)</title><rect x="39.4" y="643.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.4" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (9 samples, 0.31%)</title><rect x="39.4" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.4" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readByte (8 samples, 0.27%)</title><rect x="39.8" y="611.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.8" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (5 samples, 0.17%)</title><rect x="39.8" y="595.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (5 samples, 0.17%)</title><rect x="39.8" y="579.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (5 samples, 0.17%)</title><rect x="39.8" y="563.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.03%)</title><rect x="39.8" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.unwrap (4 samples, 0.14%)</title><rect x="40.2" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.2" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.unwrap (4 samples, 0.14%)</title><rect x="40.2" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.2" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readUnsignedShort (3 samples, 0.10%)</title><rect x="40.2" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.2" y="526.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="41.4" y="515.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf._getByte (3 samples, 0.10%)</title><rect x="41.8" y="595.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._getByte (3 samples, 0.10%)</title><rect x="41.8" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getByte (3 samples, 0.10%)</title><rect x="41.8" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.8" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getByte (3 samples, 0.10%)</title><rect x="41.8" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.8" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getByte (3 samples, 0.10%)</title><rect x="41.8" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.8" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBufferCount (3 samples, 0.10%)</title><rect x="41.8" y="515.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.8" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (2 samples, 0.07%)</title><rect x="43.0" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.0" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (2 samples, 0.07%)</title><rect x="43.0" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.0" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (2 samples, 0.07%)</title><rect x="43.0" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.0" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (2 samples, 0.07%)</title><rect x="43.0" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.0" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (2 samples, 0.07%)</title><rect x="43.0" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.0" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (2 samples, 0.07%)</title><rect x="43.0" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.0" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (6 samples, 0.20%)</title><rect x="43.8" y="643.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (6 samples, 0.20%)</title><rect x="43.8" y="627.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (6 samples, 0.20%)</title><rect x="43.8" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.8" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (6 samples, 0.20%)</title><rect x="43.8" y="595.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (6 samples, 0.20%)</title><rect x="43.8" y="579.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (6 samples, 0.20%)</title><rect x="43.8" y="563.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (6 samples, 0.20%)</title><rect x="43.8" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.14%)</title><rect x="44.6" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.6" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (4 samples, 0.14%)</title><rect x="44.6" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.6" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.03%)</title><rect x="45.0" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.03%)</title><rect x="45.0" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.03%)</title><rect x="45.0" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.03%)</title><rect x="45.0" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (2 samples, 0.07%)</title><rect x="45.5" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.5" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.03%)</title><rect x="45.9" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.9" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.readStreamId (3 samples, 0.10%)</title><rect x="46.3" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.3" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readUnsignedShort (3 samples, 0.10%)</title><rect x="46.3" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/response/Result$Codec.decode (7 samples, 0.24%)</title><rect x="47.5" y="643.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.5" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (1 samples, 0.03%)</title><rect x="47.5" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.5" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (1 samples, 0.03%)</title><rect x="47.5" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (1 samples, 0.03%)</title><rect x="47.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.5" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (1 samples, 0.03%)</title><rect x="47.5" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.5" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.03%)</title><rect x="47.5" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.03%)</title><rect x="47.5" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.5" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/response/result/DefaultRows$SubCodec.decode (6 samples, 0.20%)</title><rect x="47.9" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readBytes (5 samples, 0.17%)</title><rect x="47.9" y="611.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readBytes (5 samples, 0.17%)</title><rect x="47.9" y="595.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readRawBytes (5 samples, 0.17%)</title><rect x="47.9" y="579.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.9" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (5 samples, 0.17%)</title><rect x="47.9" y="563.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.9" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (5 samples, 0.17%)</title><rect x="47.9" y="547.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.9" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.getBytes (5 samples, 0.17%)</title><rect x="47.9" y="531.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.getBytes (5 samples, 0.17%)</title><rect x="47.9" y="515.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getBytes (5 samples, 0.17%)</title><rect x="47.9" y="499.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.9" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.03%)</title><rect x="47.9" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.9" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (1 samples, 0.03%)</title><rect x="47.9" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.9" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkRangeBounds (1 samples, 0.03%)</title><rect x="47.9" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.9" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/MathUtil.isOutOfBounds (1 samples, 0.03%)</title><rect x="47.9" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.9" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (4 samples, 0.14%)</title><rect x="48.3" y="483.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.3" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (4 samples, 0.14%)</title><rect x="48.3" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.3" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (4 samples, 0.14%)</title><rect x="48.3" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.03%)</title><rect x="48.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.3" y="446.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="48.7" y="435.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="51.7" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="49.1" y="435.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.1" y="446.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="49.5" y="435.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.5" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList.builder (1 samples, 0.03%)</title><rect x="49.9" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList$Builder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="49.9" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.9" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="49.9" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="49.9" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="52.9" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="49.9" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="52.9" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(instanceKlassHandle, bool, int, Thread*) (1 samples, 0.03%)</title><rect x="49.9" y="531.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="52.9" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="50.3" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="50.7" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.7" y="654.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_decompress_fast (1 samples, 0.03%)</title><rect x="51.1" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.1" y="654.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="51.5" y="643.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="54.5" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (3 samples, 0.10%)</title><rect x="51.9" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.9" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.extractFrame (2 samples, 0.07%)</title><rect x="51.9" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.9" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.getUnadjustedFrameLength (1 samples, 0.03%)</title><rect x="52.7" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.7" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (2 samples, 0.07%)</title><rect x="53.1" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.1" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.5" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelRead (1 samples, 0.03%)</title><rect x="53.5" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.5" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.5" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.03%)</title><rect x="53.5" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (1 samples, 0.03%)</title><rect x="53.5" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.5" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.onResponse (1 samples, 0.03%)</title><rect x="53.5" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.access$1700 (1 samples, 0.03%)</title><rect x="53.5" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (1 samples, 0.03%)</title><rect x="53.5" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="53.5" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="53.5" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (1 samples, 0.03%)</title><rect x="53.5" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="53.5" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="462.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="53.5" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.5" y="446.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="53.5" y="419.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="56.5" y="430.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="53.5" y="403.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="56.5" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (171 samples, 5.84%)</title><rect x="53.9" y="723.0" width="68.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="734.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (171 samples, 5.84%)</title><rect x="53.9" y="707.0" width="68.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.9" y="718.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (2 samples, 0.07%)</title><rect x="53.9" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.9" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.07%)</title><rect x="53.9" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.9" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (1 samples, 0.03%)</title><rect x="54.3" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (169 samples, 5.77%)</title><rect x="54.7" y="691.0" width="68.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.7" y="702.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (169 samples, 5.77%)</title><rect x="54.7" y="675.0" width="68.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.7" y="686.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelRead (169 samples, 5.77%)</title><rect x="54.7" y="659.0" width="68.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.7" y="670.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (169 samples, 5.77%)</title><rect x="54.7" y="643.0" width="68.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.7" y="654.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (169 samples, 5.77%)</title><rect x="54.7" y="627.0" width="68.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.7" y="638.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (168 samples, 5.74%)</title><rect x="54.7" y="611.0" width="67.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.7" y="622.0">io/nett..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (167 samples, 5.70%)</title><rect x="55.1" y="595.0" width="67.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.1" y="606.0">com/dat..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.03%)</title><rect x="56.3" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.3" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.03%)</title><rect x="56.3" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.3" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/AdminRequestHandler.onResponse (1 samples, 0.03%)</title><rect x="56.7" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.7" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/ThrottledAdminRequestHandler.setFinalResult (1 samples, 0.03%)</title><rect x="56.7" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.7" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/AdminRequestHandler.setFinalResult (1 samples, 0.03%)</title><rect x="56.7" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="56.7" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="56.7" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.03%)</title><rect x="56.7" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="56.7" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.7" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures$$Lambda$232/583356295.accept (1 samples, 0.03%)</title><rect x="56.7" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.7" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.lambda$allDone$1 (1 samples, 0.03%)</title><rect x="56.7" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.7" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.release (3 samples, 0.10%)</title><rect x="57.1" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.1" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.release (1 samples, 0.03%)</title><rect x="57.5" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.5" y="574.0"></text>
</g>
<g>
<title>java/util/BitSet.clear (1 samples, 0.03%)</title><rect x="57.5" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="558.0"></text>
</g>
<g>
<title>java/util/BitSet.recalculateWordsInUse (1 samples, 0.03%)</title><rect x="57.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.5" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.remove (1 samples, 0.03%)</title><rect x="57.9" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.9" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.delete (1 samples, 0.03%)</title><rect x="57.9" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.9" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler$InitialPrepareCallback.onResponse (1 samples, 0.03%)</title><rect x="58.3" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.3" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.access$600 (1 samples, 0.03%)</title><rect x="58.3" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.3" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.setFinalResult (1 samples, 0.03%)</title><rect x="58.3" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.3" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.prepareOnOtherNodes (1 samples, 0.03%)</title><rect x="58.3" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.3" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.allDone (1 samples, 0.03%)</title><rect x="58.3" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="58.3" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.3" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.onResponse (156 samples, 5.33%)</title><rect x="58.7" y="579.0" width="62.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.7" y="590.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.access$1700 (148 samples, 5.05%)</title><rect x="60.4" y="563.0" width="59.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.4" y="574.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (148 samples, 5.05%)</title><rect x="60.4" y="547.0" width="59.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.4" y="558.0">com/da..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="61.6" y="531.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="64.6" y="542.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="61.6" y="515.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="64.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/dse/driver/internal/core/tracker/MultiplexingRequestTracker.onNodeSuccess (9 samples, 0.31%)</title><rect x="62.0" y="531.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.0" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.onNodeSuccess (6 samples, 0.20%)</title><rect x="62.0" y="515.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.0" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.updateResponseTimes (6 samples, 0.20%)</title><rect x="62.0" y="499.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.compute (6 samples, 0.20%)</title><rect x="62.0" y="483.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.0" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy$$Lambda$245/1986775117.apply (1 samples, 0.03%)</title><rect x="63.2" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.2" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.lambda$updateResponseTimes$0 (1 samples, 0.03%)</title><rect x="63.2" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.length (1 samples, 0.03%)</title><rect x="63.2" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.2" y="446.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="63.2" y="419.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="66.2" y="430.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="63.2" y="403.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="66.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (2 samples, 0.07%)</title><rect x="63.6" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (2 samples, 0.07%)</title><rect x="64.4" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.compute (2 samples, 0.07%)</title><rect x="64.4" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (1 samples, 0.03%)</title><rect x="65.2" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toResultSet (3 samples, 0.10%)</title><rect x="65.6" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.6" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.getResultDefinitions (1 samples, 0.03%)</title><rect x="65.6" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultAsyncResultSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="66.0" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/854487022.linkToTargetMethod (1 samples, 0.03%)</title><rect x="66.4" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (1 samples, 0.03%)</title><rect x="66.4" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.4" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultAsyncResultSet$$Lambda$293/1819357834.get$Lambda (1 samples, 0.03%)</title><rect x="66.4" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.4" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="66.4" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="69.4" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="66.4" y="435.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="69.4" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="66.4" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.4" y="430.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.03%)</title><rect x="66.4" y="403.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="69.4" y="414.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.buildExecutionInfo (2 samples, 0.07%)</title><rect x="66.8" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.8" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultExecutionInfo.&lt;init&gt; (1 samples, 0.03%)</title><rect x="67.2" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.2" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.cancelScheduledTasks (3 samples, 0.10%)</title><rect x="67.6" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="542.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.cancel (3 samples, 0.10%)</title><rect x="67.6" y="515.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="526.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.compareAndSetState (2 samples, 0.07%)</title><rect x="67.6" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (2 samples, 0.07%)</title><rect x="67.6" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.03%)</title><rect x="68.4" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.03%)</title><rect x="68.4" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.4" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.03%)</title><rect x="68.4" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (127 samples, 4.34%)</title><rect x="68.8" y="531.0" width="51.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.8" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (127 samples, 4.34%)</title><rect x="68.8" y="515.0" width="51.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.8" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (117 samples, 3.99%)</title><rect x="70.4" y="499.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.4" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (115 samples, 3.93%)</title><rect x="71.2" y="483.0" width="46.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="494.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (115 samples, 3.93%)</title><rect x="71.2" y="467.0" width="46.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.2" y="478.0">sun/..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (1 samples, 0.03%)</title><rect x="72.4" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="75.4" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (111 samples, 3.79%)</title><rect x="72.8" y="451.0" width="44.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="75.8" y="462.0">Unsa..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="72.8" y="435.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="75.8" y="446.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.07%)</title><rect x="73.3" y="435.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="76.3" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (2 samples, 0.07%)</title><rect x="74.1" y="435.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="77.1" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (101 samples, 3.45%)</title><rect x="74.9" y="435.0" width="40.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="77.9" y="446.0">__p..</text>
</g>
<g>
<title>system_call_fastpath (96 samples, 3.28%)</title><rect x="76.9" y="419.0" width="38.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="79.9" y="430.0">sys..</text>
</g>
<g>
<title>sys_futex (95 samples, 3.24%)</title><rect x="77.3" y="403.0" width="38.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.3" y="414.0">sys..</text>
</g>
<g>
<title>do_futex (94 samples, 3.21%)</title><rect x="77.3" y="387.0" width="37.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.3" y="398.0">do_..</text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.07%)</title><rect x="78.1" y="371.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.1" y="382.0"></text>
</g>
<g>
<title>futex_wake_op (90 samples, 3.07%)</title><rect x="78.9" y="371.0" width="36.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.9" y="382.0">fut..</text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.03%)</title><rect x="80.9" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.9" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.14%)</title><rect x="81.3" y="355.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.3" y="366.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="82.5" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.5" y="350.0"></text>
</g>
<g>
<title>wake_up_q (80 samples, 2.73%)</title><rect x="82.9" y="355.0" width="32.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.9" y="366.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (80 samples, 2.73%)</title><rect x="82.9" y="339.0" width="32.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.9" y="350.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (80 samples, 2.73%)</title><rect x="82.9" y="323.0" width="32.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.9" y="334.0">_r..</text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.03%)</title><rect x="115.1" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.1" y="398.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.10%)</title><rect x="115.6" y="435.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="118.6" y="446.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.07%)</title><rect x="116.8" y="435.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="119.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (5 samples, 0.17%)</title><rect x="117.6" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (1 samples, 0.03%)</title><rect x="119.2" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.03%)</title><rect x="119.2" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.2" y="478.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="119.6" y="499.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="122.6" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.access$700 (1 samples, 0.03%)</title><rect x="120.0" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.0" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (1 samples, 0.03%)</title><rect x="120.0" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (3 samples, 0.10%)</title><rect x="120.4" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.indexOf (1 samples, 0.03%)</title><rect x="120.8" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (1 samples, 0.03%)</title><rect x="121.2" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.2" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.get (2 samples, 0.07%)</title><rect x="121.6" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.6" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (2 samples, 0.07%)</title><rect x="121.6" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.6" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.03%)</title><rect x="122.4" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.03%)</title><rect x="122.4" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.4" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (1 samples, 0.03%)</title><rect x="122.4" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.4" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (2 samples, 0.07%)</title><rect x="122.8" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.8" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList$CodecOutputLists.getOrCreate (2 samples, 0.07%)</title><rect x="122.8" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.8" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (13 samples, 0.44%)</title><rect x="123.6" y="851.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (13 samples, 0.44%)</title><rect x="123.6" y="835.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (13 samples, 0.44%)</title><rect x="123.6" y="819.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (13 samples, 0.44%)</title><rect x="123.6" y="803.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (12 samples, 0.41%)</title><rect x="123.6" y="787.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (1 samples, 0.03%)</title><rect x="123.6" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (11 samples, 0.38%)</title><rect x="124.0" y="771.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (11 samples, 0.38%)</title><rect x="124.0" y="755.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (2 samples, 0.07%)</title><rect x="124.0" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelHandlerContext.handler (2 samples, 0.07%)</title><rect x="124.8" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.8" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (7 samples, 0.24%)</title><rect x="125.6" y="739.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (7 samples, 0.24%)</title><rect x="125.6" y="723.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.24%)</title><rect x="125.6" y="707.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (7 samples, 0.24%)</title><rect x="125.6" y="691.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelReadComplete (6 samples, 0.20%)</title><rect x="126.0" y="675.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.0" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (5 samples, 0.17%)</title><rect x="126.4" y="659.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (5 samples, 0.17%)</title><rect x="126.4" y="643.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (4 samples, 0.14%)</title><rect x="126.4" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.4" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.handler (4 samples, 0.14%)</title><rect x="126.4" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.03%)</title><rect x="128.0" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.0" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.inEventLoop (1 samples, 0.03%)</title><rect x="128.0" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.0" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (1 samples, 0.03%)</title><rect x="128.4" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (1 samples, 0.03%)</title><rect x="128.4" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (1 samples, 0.03%)</title><rect x="128.4" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.03%)</title><rect x="128.4" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.03%)</title><rect x="128.4" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.read (1 samples, 0.03%)</title><rect x="128.4" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.beginRead (1 samples, 0.03%)</title><rect x="128.4" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (1 samples, 0.03%)</title><rect x="128.4" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.javaChannel (1 samples, 0.03%)</title><rect x="128.4" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.javaChannel (1 samples, 0.03%)</title><rect x="128.4" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (43 samples, 1.47%)</title><rect x="128.8" y="851.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.8" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (40 samples, 1.37%)</title><rect x="129.2" y="835.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (40 samples, 1.37%)</title><rect x="129.2" y="819.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.2" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (38 samples, 1.30%)</title><rect x="130.1" y="803.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.validate (2 samples, 0.07%)</title><rect x="130.1" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.1" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (2 samples, 0.07%)</title><rect x="130.1" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.1" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (36 samples, 1.23%)</title><rect x="130.9" y="787.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (4 samples, 0.14%)</title><rect x="131.3" y="771.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.3" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (3 samples, 0.10%)</title><rect x="131.7" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (3 samples, 0.10%)</title><rect x="131.7" y="739.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.7" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (3 samples, 0.10%)</title><rect x="131.7" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.7" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (2 samples, 0.07%)</title><rect x="131.7" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.07%)</title><rect x="131.7" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="131.7" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="131.7" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.07%)</title><rect x="131.7" y="643.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.07%)</title><rect x="131.7" y="627.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.07%)</title><rect x="131.7" y="611.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.07%)</title><rect x="131.7" y="595.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.07%)</title><rect x="131.7" y="579.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (1 samples, 0.03%)</title><rect x="132.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.03%)</title><rect x="132.5" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.03%)</title><rect x="132.5" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.5" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.touch (2 samples, 0.07%)</title><rect x="132.9" y="771.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (25 samples, 0.85%)</title><rect x="133.7" y="771.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.7" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (9 samples, 0.31%)</title><rect x="133.7" y="755.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.7" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (6 samples, 0.20%)</title><rect x="134.9" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (2 samples, 0.07%)</title><rect x="136.1" y="723.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.1" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setIndex0 (1 samples, 0.03%)</title><rect x="136.1" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.1" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (1 samples, 0.03%)</title><rect x="136.5" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (1 samples, 0.03%)</title><rect x="136.5" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (1 samples, 0.03%)</title><rect x="136.5" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="136.9" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="136.9" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.03%)</title><rect x="136.9" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.9" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (16 samples, 0.55%)</title><rect x="137.3" y="755.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.3" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocateNormal (9 samples, 0.31%)</title><rect x="138.1" y="739.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.1" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.allocate (8 samples, 0.27%)</title><rect x="138.5" y="723.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocate (8 samples, 0.27%)</title><rect x="138.5" y="707.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.5" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateRun (4 samples, 0.14%)</title><rect x="139.7" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateNode (1 samples, 0.03%)</title><rect x="140.9" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.9" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.value (1 samples, 0.03%)</title><rect x="140.9" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollLast (1 samples, 0.03%)</title><rect x="141.3" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.3" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateNormal (2 samples, 0.07%)</title><rect x="141.7" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.7" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (2 samples, 0.07%)</title><rect x="141.7" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.7" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.03%)</title><rect x="142.1" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.1" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (2 samples, 0.07%)</title><rect x="142.5" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.5" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (2 samples, 0.07%)</title><rect x="142.5" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.log2 (1 samples, 0.03%)</title><rect x="142.9" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.03%)</title><rect x="143.3" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.3" y="750.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.14%)</title><rect x="143.8" y="771.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="146.8" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (1 samples, 0.03%)</title><rect x="145.4" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.4" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/FixedRecvByteBufAllocator$HandleImpl.guess (1 samples, 0.03%)</title><rect x="145.8" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.isDirect (1 samples, 0.03%)</title><rect x="145.8" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.8" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.reset (5 samples, 0.17%)</title><rect x="146.2" y="851.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.2" y="862.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="147.8" y="835.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.8" y="846.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="147.8" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.8" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="147.8" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="150.8" y="814.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="147.8" y="787.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.8" y="798.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="147.8" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.8" y="782.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="147.8" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.8" y="766.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="147.8" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="150.8" y="750.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="147.8" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.8" y="734.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="147.8" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="150.8" y="718.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="147.8" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.8" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="147.8" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="150.8" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="147.8" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.8" y="670.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="147.8" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.8" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="147.8" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="150.8" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="147.8" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.8" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="147.8" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="150.8" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="147.8" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.8" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="147.8" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.8" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="147.8" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="150.8" y="558.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="147.8" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="147.8" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.8" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="147.8" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="150.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="147.8" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="150.8" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.shouldBreakReadReady (1 samples, 0.03%)</title><rect x="148.2" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.2" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown0 (1 samples, 0.03%)</title><rect x="148.2" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown (1 samples, 0.03%)</title><rect x="148.2" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.isInputShutdown (1 samples, 0.03%)</title><rect x="148.2" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isInputOpen (1 samples, 0.03%)</title><rect x="148.2" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (63 samples, 2.15%)</title><rect x="148.6" y="851.0" width="25.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.6" y="862.0">i..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (63 samples, 2.15%)</title><rect x="148.6" y="835.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.6" y="846.0">i..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (63 samples, 2.15%)</title><rect x="148.6" y="819.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.6" y="830.0">i..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (63 samples, 2.15%)</title><rect x="148.6" y="803.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.6" y="814.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.10%)</title><rect x="150.2" y="787.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="150.2" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.2" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.07%)</title><rect x="150.6" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.6" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="151.4" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.4" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="151.4" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.4" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="151.4" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="151.4" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (44 samples, 1.50%)</title><rect x="151.8" y="787.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (43 samples, 1.47%)</title><rect x="152.2" y="771.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="152.2" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (42 samples, 1.43%)</title><rect x="152.6" y="755.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (42 samples, 1.43%)</title><rect x="152.6" y="739.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.6" y="750.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (39 samples, 1.33%)</title><rect x="153.4" y="723.0" width="15.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="156.4" y="734.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.07%)</title><rect x="156.2" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="159.2" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.07%)</title><rect x="156.2" y="691.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="159.2" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (30 samples, 1.02%)</title><rect x="157.0" y="707.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="160.0" y="718.0"></text>
</g>
<g>
<title>sys_read (30 samples, 1.02%)</title><rect x="157.0" y="691.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="160.0" y="702.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.10%)</title><rect x="157.0" y="675.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.0" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="158.3" y="675.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.3" y="686.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.85%)</title><rect x="159.1" y="675.0" width="10.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.1" y="686.0"></text>
</g>
<g>
<title>do_sync_read (23 samples, 0.79%)</title><rect x="159.9" y="659.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="162.9" y="670.0"></text>
</g>
<g>
<title>sock_aio_read (23 samples, 0.79%)</title><rect x="159.9" y="643.0" width="9.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="162.9" y="654.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (23 samples, 0.79%)</title><rect x="159.9" y="627.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="162.9" y="638.0"></text>
</g>
<g>
<title>cap_socket_recvmsg (2 samples, 0.07%)</title><rect x="160.7" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="163.7" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (18 samples, 0.61%)</title><rect x="161.5" y="611.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="164.5" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="161.5" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="164.5" y="606.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="161.9" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.9" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (1 samples, 0.03%)</title><rect x="162.7" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.7" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="163.1" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.1" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.44%)</title><rect x="163.5" y="595.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="166.5" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="163.9" y="579.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="166.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="163.9" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.9" y="574.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="163.9" y="547.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="166.9" y="558.0"></text>
</g>
<g>
<title>put_page (1 samples, 0.03%)</title><rect x="164.3" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="167.3" y="542.0"></text>
</g>
<g>
<title>__put_single_page (1 samples, 0.03%)</title><rect x="164.3" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="167.3" y="526.0"></text>
</g>
<g>
<title>free_hot_cold_page (1 samples, 0.03%)</title><rect x="164.3" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="167.3" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="164.7" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="167.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="165.1" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.1" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (8 samples, 0.27%)</title><rect x="165.5" y="579.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.5" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.20%)</title><rect x="165.9" y="563.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.9" y="574.0"></text>
</g>
<g>
<title>memcpy_toiovec (1 samples, 0.03%)</title><rect x="168.3" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="171.3" y="574.0"></text>
</g>
<g>
<title>static_key_enabled (1 samples, 0.03%)</title><rect x="168.3" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="171.3" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="168.7" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.7" y="622.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="169.1" y="723.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="172.1" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="169.1" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.20%)</title><rect x="169.5" y="787.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.5" y="798.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="170.3" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="173.3" y="782.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.10%)</title><rect x="170.7" y="771.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="173.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureReadOpen (2 samples, 0.07%)</title><rect x="172.0" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.03%)</title><rect x="172.4" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.readerCleanup (3 samples, 0.10%)</title><rect x="172.8" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (213 samples, 7.27%)</title><rect x="174.0" y="915.0" width="85.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.0" y="926.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (211 samples, 7.20%)</title><rect x="174.0" y="899.0" width="85.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.0" y="910.0">io/netty/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (211 samples, 7.20%)</title><rect x="174.0" y="883.0" width="85.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.0" y="894.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (211 samples, 7.20%)</title><rect x="174.0" y="867.0" width="85.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.0" y="878.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (211 samples, 7.20%)</title><rect x="174.0" y="851.0" width="85.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.0" y="862.0">sun/nio/ch..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="174.0" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="177.0" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (8 samples, 0.27%)</title><rect x="174.4" y="835.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.4" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.17%)</title><rect x="175.2" y="819.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.2" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.17%)</title><rect x="175.2" y="803.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.17%)</title><rect x="175.2" y="787.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.07%)</title><rect x="176.4" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.4" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="176.8" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.8" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="176.8" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.8" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="176.8" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.8" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="176.8" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="179.8" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="176.8" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.8" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="176.8" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (1 samples, 0.03%)</title><rect x="177.2" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.03%)</title><rect x="177.6" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="177.6" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.6" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="177.6" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="177.6" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (165 samples, 5.63%)</title><rect x="178.0" y="835.0" width="66.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.0" y="846.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (160 samples, 5.46%)</title><rect x="178.8" y="819.0" width="64.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.8" y="830.0">sun/nio..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPollArrayWrapper_epollWait (2 samples, 0.07%)</title><rect x="184.0" y="803.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="187.0" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="184.4" y="787.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="187.4" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="184.8" y="803.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="187.8" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="185.2" y="803.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="188.2" y="814.0"></text>
</g>
<g>
<title>__libc_writev (1 samples, 0.03%)</title><rect x="185.7" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="188.7" y="814.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="185.7" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="186.1" y="803.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="189.1" y="814.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="186.1" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="189.1" y="798.0"></text>
</g>
<g>
<title>epoll_wait (140 samples, 4.78%)</title><rect x="186.5" y="803.0" width="56.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="189.5" y="814.0">epoll_..</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="188.9" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.9" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="188.9" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.9" y="782.0"></text>
</g>
<g>
<title>ret_from_sys_call (3 samples, 0.10%)</title><rect x="189.3" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.3" y="798.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.07%)</title><rect x="190.5" y="787.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="190.5" y="771.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="193.5" y="782.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="190.5" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="190.5" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.5" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="190.5" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.5" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="190.5" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="190.5" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.5" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="190.5" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.5" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="190.5" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.5" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="190.5" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.5" y="654.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (1 samples, 0.03%)</title><rect x="190.5" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.5" y="638.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="190.9" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.9" y="766.0"></text>
</g>
<g>
<title>system_call_fastpath (128 samples, 4.37%)</title><rect x="191.3" y="787.0" width="51.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="194.3" y="798.0">syste..</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="192.1" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.1" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (125 samples, 4.27%)</title><rect x="192.5" y="771.0" width="50.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.5" y="782.0">sys_e..</text>
</g>
<g>
<title>ep_poll (114 samples, 3.89%)</title><rect x="194.9" y="755.0" width="45.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.9" y="766.0">ep_p..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.17%)</title><rect x="196.5" y="739.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="199.5" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (19 samples, 0.65%)</title><rect x="198.5" y="739.0" width="7.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.17%)</title><rect x="198.5" y="723.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="201.5" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.31%)</title><rect x="200.6" y="723.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.6" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="203.0" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="206.0" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.07%)</title><rect x="203.0" y="691.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="206.0" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="203.4" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.4" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="203.8" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.8" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.07%)</title><rect x="204.2" y="723.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.2" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="205.0" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="208.0" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="205.4" y="723.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.4" y="734.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.07%)</title><rect x="206.2" y="739.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="209.2" y="750.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="207.0" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.0" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="207.4" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.4" y="750.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="207.8" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="210.8" y="750.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="207.8" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="210.8" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="207.8" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="210.8" y="718.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="207.8" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.8" y="702.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="207.8" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="210.8" y="686.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="207.8" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.8" y="670.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="207.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.8" y="654.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="207.8" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="210.8" y="638.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="207.8" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="210.8" y="622.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="207.8" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.8" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="207.8" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="210.8" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="207.8" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="210.8" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="207.8" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="210.8" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="207.8" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.8" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="207.8" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.8" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="207.8" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="207.8" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="207.8" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="210.8" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="207.8" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.8" y="462.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="207.8" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.8" y="446.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="207.8" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.8" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="207.8" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.8" y="414.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (78 samples, 2.66%)</title><rect x="208.2" y="739.0" width="31.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="211.2" y="750.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (77 samples, 2.63%)</title><rect x="208.6" y="723.0" width="31.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="211.6" y="734.0">sc..</text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.20%)</title><rect x="208.6" y="707.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="211.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.17%)</title><rect x="209.0" y="691.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.0" y="702.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.14%)</title><rect x="211.0" y="707.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.14%)</title><rect x="211.0" y="691.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.0" y="702.0"></text>
</g>
<g>
<title>schedule (67 samples, 2.29%)</title><rect x="212.6" y="707.0" width="27.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.6" y="718.0">s..</text>
</g>
<g>
<title>__schedule (66 samples, 2.25%)</title><rect x="212.6" y="691.0" width="26.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="215.6" y="702.0">_..</text>
</g>
<g>
<title>finish_task_switch (60 samples, 2.05%)</title><rect x="213.0" y="675.0" width="24.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.0" y="686.0">f..</text>
</g>
<g>
<title>ret_from_intr (5 samples, 0.17%)</title><rect x="237.2" y="675.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="240.2" y="686.0"></text>
</g>
<g>
<title>__irqentry_text_start (5 samples, 0.17%)</title><rect x="237.2" y="659.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.2" y="670.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.17%)</title><rect x="237.2" y="643.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="240.2" y="654.0"></text>
</g>
<g>
<title>do_softirq (5 samples, 0.17%)</title><rect x="237.2" y="627.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.2" y="638.0"></text>
</g>
<g>
<title>call_softirq (5 samples, 0.17%)</title><rect x="237.2" y="611.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.2" y="622.0"></text>
</g>
<g>
<title>__do_softirq (5 samples, 0.17%)</title><rect x="237.2" y="595.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.2" y="606.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.14%)</title><rect x="237.6" y="579.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.6" y="590.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (4 samples, 0.14%)</title><rect x="237.6" y="563.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.6" y="574.0"></text>
</g>
<g>
<title>__memcpy (1 samples, 0.03%)</title><rect x="237.6" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.6" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (3 samples, 0.10%)</title><rect x="238.0" y="547.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.0" y="558.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.03%)</title><rect x="238.0" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.0" y="542.0"></text>
</g>
<g>
<title>inet_gro_receive (1 samples, 0.03%)</title><rect x="238.0" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.0" y="526.0"></text>
</g>
<g>
<title>tcp4_gro_receive (1 samples, 0.03%)</title><rect x="238.0" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.0" y="510.0"></text>
</g>
<g>
<title>__skb_gro_checksum_complete (1 samples, 0.03%)</title><rect x="238.0" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.0" y="494.0"></text>
</g>
<g>
<title>skb_checksum (1 samples, 0.03%)</title><rect x="238.0" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.0" y="478.0"></text>
</g>
<g>
<title>__skb_checksum (1 samples, 0.03%)</title><rect x="238.0" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="241.0" y="462.0"></text>
</g>
<g>
<title>csum_partial_ext (1 samples, 0.03%)</title><rect x="238.0" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="241.0" y="446.0"></text>
</g>
<g>
<title>csum_partial (1 samples, 0.03%)</title><rect x="238.0" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="241.0" y="430.0"></text>
</g>
<g>
<title>do_csum (1 samples, 0.03%)</title><rect x="238.0" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.0" y="414.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.07%)</title><rect x="238.4" y="531.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.4" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.07%)</title><rect x="238.4" y="515.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.4" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="238.4" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.4" y="510.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.07%)</title><rect x="238.4" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.4" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.07%)</title><rect x="238.4" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="241.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.07%)</title><rect x="238.4" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.4" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.07%)</title><rect x="238.4" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.4" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.07%)</title><rect x="238.4" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="241.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.07%)</title><rect x="238.4" y="403.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="241.4" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.07%)</title><rect x="238.4" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.4" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.07%)</title><rect x="238.4" y="371.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.4" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.07%)</title><rect x="238.4" y="355.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.07%)</title><rect x="238.4" y="339.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="238.4" y="323.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.4" y="334.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="239.2" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.2" y="702.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="239.6" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.6" y="750.0"></text>
</g>
<g>
<title>set_normalized_timespec (1 samples, 0.03%)</title><rect x="240.0" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.0" y="750.0"></text>
</g>
<g>
<title>task_nice (1 samples, 0.03%)</title><rect x="240.4" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.4" y="750.0"></text>
</g>
<g>
<title>fput (3 samples, 0.10%)</title><rect x="240.8" y="755.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.8" y="766.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="242.1" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.1" y="766.0"></text>
</g>
<g>
<title>timespec_add_safe (1 samples, 0.03%)</title><rect x="242.5" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.5" y="766.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="242.9" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="245.9" y="814.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="242.9" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.9" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="242.9" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.9" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="242.9" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="245.9" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="242.9" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="245.9" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="242.9" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.9" y="734.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="242.9" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.9" y="718.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="242.9" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="245.9" y="702.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="242.9" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.9" y="686.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="242.9" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.9" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="242.9" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="245.9" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="242.9" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="245.9" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="242.9" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.9" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="242.9" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.9" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="242.9" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.9" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="242.9" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.9" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="242.9" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="245.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="242.9" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="245.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="242.9" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="245.9" y="526.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="242.9" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.9" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="242.9" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.9" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="242.9" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="245.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="242.9" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (3 samples, 0.10%)</title><rect x="243.3" y="819.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.updateSelectedKeys (7 samples, 0.24%)</title><rect x="244.5" y="835.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.getEventOps (3 samples, 0.10%)</title><rect x="244.5" y="819.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (4 samples, 0.14%)</title><rect x="245.7" y="819.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (3 samples, 0.10%)</title><rect x="246.1" y="803.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (27 samples, 0.92%)</title><rect x="247.3" y="835.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.3" y="846.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (26 samples, 0.89%)</title><rect x="247.7" y="819.0" width="10.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="250.7" y="830.0"></text>
</g>
<g>
<title>system_call_fastpath (24 samples, 0.82%)</title><rect x="248.5" y="803.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.5" y="814.0"></text>
</g>
<g>
<title>sys_read (24 samples, 0.82%)</title><rect x="248.5" y="787.0" width="9.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="251.5" y="798.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="248.5" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="251.5" y="782.0"></text>
</g>
<g>
<title>vfs_read (23 samples, 0.79%)</title><rect x="248.9" y="771.0" width="9.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="251.9" y="782.0"></text>
</g>
<g>
<title>do_sync_read (19 samples, 0.65%)</title><rect x="248.9" y="755.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="251.9" y="766.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="248.9" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.9" y="750.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.10%)</title><rect x="249.3" y="739.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.3" y="750.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (1 samples, 0.03%)</title><rect x="250.5" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.5" y="750.0"></text>
</g>
<g>
<title>generic_pipe_buf_unmap (1 samples, 0.03%)</title><rect x="250.9" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="253.9" y="750.0"></text>
</g>
<g>
<title>pipe_read (13 samples, 0.44%)</title><rect x="251.3" y="739.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.3" y="750.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="251.7" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.7" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="251.7" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.7" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.07%)</title><rect x="252.1" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.1" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.07%)</title><rect x="252.1" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="252.1" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.1" y="702.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (1 samples, 0.03%)</title><rect x="252.9" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.9" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="253.3" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="256.3" y="734.0"></text>
</g>
<g>
<title>static_key_enabled (1 samples, 0.03%)</title><rect x="253.7" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.7" y="734.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.20%)</title><rect x="254.1" y="723.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.1" y="734.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="254.5" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.5" y="718.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="254.9" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.9" y="718.0"></text>
</g>
<g>
<title>update_time (3 samples, 0.10%)</title><rect x="255.3" y="707.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="258.3" y="718.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.07%)</title><rect x="255.7" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.7" y="702.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="256.6" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.6" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="257.0" y="755.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.0" y="766.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="257.4" y="739.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="260.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.07%)</title><rect x="258.2" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.2" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.deadlineToDelayNanos (2 samples, 0.07%)</title><rect x="259.0" y="899.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.deadlineToDelayNanos (2 samples, 0.07%)</title><rect x="259.0" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="259.0" y="867.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="262.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="259.0" y="851.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="262.0" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (573 samples, 19.56%)</title><rect x="259.8" y="915.0" width="230.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.8" y="926.0">io/netty/util/concurrent/Singl..</text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (558 samples, 19.05%)</title><rect x="260.2" y="899.0" width="224.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.2" y="910.0">io/netty/util/concurrent/Abstr..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$175/1040454975.run (554 samples, 18.91%)</title><rect x="260.2" y="883.0" width="223.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.2" y="894.0">com/datastax/oss/driver/inter..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (554 samples, 18.91%)</title><rect x="260.2" y="867.0" width="223.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.2" y="878.0">com/datastax/oss/driver/inter..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (321 samples, 10.96%)</title><rect x="261.4" y="851.0" width="129.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.4" y="862.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (321 samples, 10.96%)</title><rect x="261.4" y="835.0" width="129.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.4" y="846.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (321 samples, 10.96%)</title><rect x="261.4" y="819.0" width="129.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.4" y="830.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (4 samples, 0.14%)</title><rect x="261.4" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (1 samples, 0.03%)</title><rect x="261.8" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.03%)</title><rect x="261.8" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.8" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="261.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.8" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.03%)</title><rect x="261.8" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="261.8" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.8" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (2 samples, 0.07%)</title><rect x="262.2" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (317 samples, 10.82%)</title><rect x="263.0" y="803.0" width="127.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.0" y="814.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (317 samples, 10.82%)</title><rect x="263.0" y="787.0" width="127.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.0" y="798.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (317 samples, 10.82%)</title><rect x="263.0" y="771.0" width="127.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.0" y="782.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (317 samples, 10.82%)</title><rect x="263.0" y="755.0" width="127.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.0" y="766.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addFlush (1 samples, 0.03%)</title><rect x="263.0" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (316 samples, 10.79%)</title><rect x="263.4" y="739.0" width="127.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.4" y="750.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (315 samples, 10.75%)</title><rect x="263.8" y="723.0" width="126.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.8" y="734.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (315 samples, 10.75%)</title><rect x="263.8" y="707.0" width="126.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.8" y="718.0">io/netty/channel..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (17 samples, 0.58%)</title><rect x="263.8" y="691.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.8" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (15 samples, 0.51%)</title><rect x="264.6" y="675.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.6" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (13 samples, 0.44%)</title><rect x="265.4" y="659.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.4" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (12 samples, 0.41%)</title><rect x="265.8" y="643.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.8" y="654.0"></text>
</g>
<g>
<title>BarrierSet::static_write_ref_array_post(HeapWord*, unsigned long) (4 samples, 0.14%)</title><rect x="265.8" y="627.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="268.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (2 samples, 0.07%)</title><rect x="267.4" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.4" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.slice (2 samples, 0.07%)</title><rect x="267.4" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.4" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="267.4" y="595.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="270.4" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="267.4" y="579.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="270.4" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (2 samples, 0.07%)</title><rect x="267.4" y="563.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="270.4" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (1 samples, 0.03%)</title><rect x="267.4" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="270.4" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.03%)</title><rect x="267.8" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="270.8" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.03%)</title><rect x="267.8" y="531.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="270.8" y="542.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="267.8" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="270.8" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="267.8" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="270.8" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/RecyclableArrayList.newInstance (6 samples, 0.20%)</title><rect x="268.2" y="627.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.2" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.07%)</title><rect x="268.2" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.2" y="622.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.07%)</title><rect x="268.2" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.03%)</title><rect x="268.2" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.2" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.03%)</title><rect x="268.6" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacity (4 samples, 0.14%)</title><rect x="269.0" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (4 samples, 0.14%)</title><rect x="269.0" y="595.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.10%)</title><rect x="269.4" y="579.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.4" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (47 samples, 1.60%)</title><rect x="270.7" y="691.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (1 samples, 0.03%)</title><rect x="271.5" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.03%)</title><rect x="271.5" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.5" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.progress (5 samples, 0.17%)</title><rect x="271.9" y="675.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (39 samples, 1.33%)</title><rect x="273.9" y="675.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (1 samples, 0.03%)</title><rect x="273.9" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.9" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (23 samples, 0.79%)</title><rect x="274.3" y="659.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.3" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (23 samples, 0.79%)</title><rect x="274.3" y="643.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.3" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (23 samples, 0.79%)</title><rect x="274.3" y="627.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.3" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (23 samples, 0.79%)</title><rect x="274.3" y="611.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.3" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (23 samples, 0.79%)</title><rect x="274.3" y="595.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.3" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (23 samples, 0.79%)</title><rect x="274.3" y="579.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.3" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (21 samples, 0.72%)</title><rect x="275.1" y="563.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.1" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners0 (20 samples, 0.68%)</title><rect x="275.5" y="547.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.5" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler$$Lambda$166/1709554555.operationComplete (1 samples, 0.03%)</title><rect x="275.5" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.5" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (2 samples, 0.07%)</title><rect x="275.9" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.9" y="542.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (12 samples, 0.41%)</title><rect x="276.7" y="531.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.7" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (11 samples, 0.38%)</title><rect x="277.1" y="515.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.1" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.03%)</title><rect x="277.5" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.03%)</title><rect x="277.5" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_2 (1 samples, 0.03%)</title><rect x="277.5" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.5" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.scheduleSpeculativeExecution (7 samples, 0.24%)</title><rect x="277.9" y="499.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.9" y="510.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (2 samples, 0.07%)</title><rect x="277.9" y="483.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.9" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.03%)</title><rect x="278.3" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.3" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.03%)</title><rect x="278.3" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.3" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.03%)</title><rect x="278.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.3" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (1 samples, 0.03%)</title><rect x="278.3" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.03%)</title><rect x="278.7" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1065689062.linkToTargetMethod (2 samples, 0.07%)</title><rect x="279.1" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/722206154.invokeStatic_LI_L (2 samples, 0.07%)</title><rect x="279.1" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.1" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback$$Lambda$292/1675643651.get$Lambda (2 samples, 0.07%)</title><rect x="279.1" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.07%)</title><rect x="279.9" y="483.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="279.9" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.03%)</title><rect x="279.9" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="279.9" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="280.3" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.3" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.isSuccess (1 samples, 0.03%)</title><rect x="280.7" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.03%)</title><rect x="281.1" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="281.1" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.03%)</title><rect x="281.1" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="281.1" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.1" y="462.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.17%)</title><rect x="281.5" y="531.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="284.5" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (15 samples, 0.51%)</title><rect x="283.5" y="659.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.5" y="670.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (15 samples, 0.51%)</title><rect x="283.5" y="643.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.5" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (14 samples, 0.48%)</title><rect x="283.5" y="627.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.5" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (14 samples, 0.48%)</title><rect x="283.5" y="611.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (14 samples, 0.48%)</title><rect x="283.5" y="595.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.5" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (14 samples, 0.48%)</title><rect x="283.5" y="579.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.5" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (14 samples, 0.48%)</title><rect x="283.5" y="563.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (11 samples, 0.38%)</title><rect x="283.5" y="547.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.5" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (11 samples, 0.38%)</title><rect x="283.5" y="531.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.5" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (11 samples, 0.38%)</title><rect x="283.5" y="515.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.5" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (11 samples, 0.38%)</title><rect x="283.5" y="499.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (10 samples, 0.34%)</title><rect x="283.5" y="483.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (3 samples, 0.10%)</title><rect x="283.5" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.5" y="478.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.dropHandle (1 samples, 0.03%)</title><rect x="283.5" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.5" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="284.0" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.0" y="462.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.03%)</title><rect x="284.0" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.0" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (1 samples, 0.03%)</title><rect x="284.4" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.4" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (7 samples, 0.24%)</title><rect x="284.8" y="467.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.8" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (1 samples, 0.03%)</title><rect x="285.2" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.2" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerLimitField.lvProducerLimit (1 samples, 0.03%)</title><rect x="285.6" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.6" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (1 samples, 0.03%)</title><rect x="286.0" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.0" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (3 samples, 0.10%)</title><rect x="286.4" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.4" y="462.0"></text>
</g>
<g>
<title>g1_post_barrier_slow Runtime1 stub (1 samples, 0.03%)</title><rect x="287.2" y="435.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="290.2" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.03%)</title><rect x="287.6" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.03%)</title><rect x="287.6" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.6" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (3 samples, 0.10%)</title><rect x="288.0" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.0" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.tryFinalRelease0 (2 samples, 0.07%)</title><rect x="288.4" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (2 samples, 0.07%)</title><rect x="288.4" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.4" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.isDirect (1 samples, 0.03%)</title><rect x="288.4" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (1 samples, 0.03%)</title><rect x="288.8" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.8" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareCompositeByteBuf.release (1 samples, 0.03%)</title><rect x="289.2" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.2" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedCompositeByteBuf.release (1 samples, 0.03%)</title><rect x="289.2" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.2" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.03%)</title><rect x="289.2" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.2" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (1 samples, 0.03%)</title><rect x="289.2" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.2" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (1 samples, 0.03%)</title><rect x="289.2" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (251 samples, 8.57%)</title><rect x="289.6" y="691.0" width="101.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.6" y="702.0">sun/nio/ch/S..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="290.4" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.4" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="290.4" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (238 samples, 8.13%)</title><rect x="290.8" y="675.0" width="95.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.8" y="686.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (2 samples, 0.07%)</title><rect x="291.6" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.07%)</title><rect x="291.6" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.07%)</title><rect x="291.6" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.07%)</title><rect x="291.6" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="292.0" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.getBuffer (1 samples, 0.03%)</title><rect x="292.4" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (233 samples, 7.95%)</title><rect x="292.8" y="659.0" width="93.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.8" y="670.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (232 samples, 7.92%)</title><rect x="293.2" y="643.0" width="93.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.2" y="654.0">sun/nio/ch/..</text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="293.6" y="627.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="296.6" y="638.0"></text>
</g>
<g>
<title>__libc_writev (229 samples, 7.82%)</title><rect x="294.0" y="627.0" width="92.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="297.0" y="638.0">__libc_writev</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="296.8" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.8" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="296.8" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.8" y="606.0"></text>
</g>
<g>
<title>current_kernel_time (1 samples, 0.03%)</title><rect x="296.8" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.8" y="590.0"></text>
</g>
<g>
<title>ret_from_sys_call (1 samples, 0.03%)</title><rect x="297.2" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.2" y="622.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.07%)</title><rect x="297.6" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.6" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="297.6" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.6" y="606.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="298.1" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.1" y="590.0"></text>
</g>
<g>
<title>system_call_fastpath (218 samples, 7.44%)</title><rect x="298.5" y="611.0" width="87.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.5" y="622.0">system_cal..</text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="298.5" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="301.5" y="606.0"></text>
</g>
<g>
<title>sys_writev (216 samples, 7.37%)</title><rect x="299.3" y="595.0" width="87.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.3" y="606.0">sys_writev</text>
</g>
<g>
<title>fget_light (7 samples, 0.24%)</title><rect x="299.7" y="579.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.7" y="590.0"></text>
</g>
<g>
<title>vfs_writev (208 samples, 7.10%)</title><rect x="302.5" y="579.0" width="83.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="305.5" y="590.0">vfs_writev</text>
</g>
<g>
<title>do_readv_writev (207 samples, 7.07%)</title><rect x="302.9" y="563.0" width="83.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="305.9" y="574.0">do_readv_..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="303.7" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.7" y="558.0"></text>
</g>
<g>
<title>do_sync_readv_writev (201 samples, 6.86%)</title><rect x="304.1" y="547.0" width="81.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.1" y="558.0">do_sync_r..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="304.1" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="307.1" y="542.0"></text>
</g>
<g>
<title>sock_aio_write (200 samples, 6.83%)</title><rect x="304.5" y="531.0" width="80.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="307.5" y="542.0">sock_aio_..</text>
</g>
<g>
<title>inet_sendmsg (199 samples, 6.79%)</title><rect x="304.5" y="515.0" width="80.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.5" y="526.0">inet_send..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="306.1" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.1" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="306.5" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="309.5" y="510.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.03%)</title><rect x="306.9" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="309.9" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (191 samples, 6.52%)</title><rect x="307.3" y="499.0" width="77.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="310.3" y="510.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="308.9" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.9" y="494.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="308.9" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.9" y="478.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="309.3" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="309.7" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="312.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="310.1" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="313.1" y="494.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="310.5" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="310.5" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.5" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="310.5" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.5" y="462.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.41%)</title><rect x="310.9" y="483.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.9" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.38%)</title><rect x="310.9" y="467.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="313.9" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="310.9" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="313.9" y="462.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (1 samples, 0.03%)</title><rect x="311.3" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.3" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="311.3" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.3" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.27%)</title><rect x="311.7" y="451.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.7" y="462.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="314.6" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="317.6" y="446.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="315.0" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="315.4" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.4" y="478.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="315.8" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="318.8" y="494.0"></text>
</g>
<g>
<title>tcp_push (162 samples, 5.53%)</title><rect x="316.2" y="483.0" width="65.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.2" y="494.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (162 samples, 5.53%)</title><rect x="316.2" y="467.0" width="65.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.2" y="478.0">__tcp_p..</text>
</g>
<g>
<title>tcp_init_tso_segs (1 samples, 0.03%)</title><rect x="316.2" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="319.2" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="316.6" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.6" y="462.0"></text>
</g>
<g>
<title>tcp_write_xmit (160 samples, 5.46%)</title><rect x="317.0" y="451.0" width="64.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.0" y="462.0">tcp_wri..</text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.17%)</title><rect x="318.2" y="435.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.2" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="318.2" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.2" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.14%)</title><rect x="318.6" y="419.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.6" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.14%)</title><rect x="318.6" y="403.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.6" y="414.0"></text>
</g>
<g>
<title>lock_timer_base.isra.37 (1 samples, 0.03%)</title><rect x="318.6" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.6" y="398.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="319.0" y="387.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="319.0" y="371.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="322.0" y="382.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.07%)</title><rect x="320.2" y="435.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.2" y="446.0"></text>
</g>
<g>
<title>tcp_transmit_skb (148 samples, 5.05%)</title><rect x="321.0" y="435.0" width="59.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.0" y="446.0">tcp_tr..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="322.6" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.6" y="430.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="323.0" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.0" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="323.4" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.4" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (137 samples, 4.68%)</title><rect x="323.8" y="419.0" width="55.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.8" y="430.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out_sk (135 samples, 4.61%)</title><rect x="323.8" y="403.0" width="54.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.8" y="414.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out_sk (6 samples, 0.20%)</title><rect x="324.6" y="387.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="327.6" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.20%)</title><rect x="324.6" y="371.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.6" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="324.6" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="327.6" y="366.0"></text>
</g>
<g>
<title>nf_iterate (5 samples, 0.17%)</title><rect x="325.0" y="355.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.0" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.17%)</title><rect x="325.0" y="339.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="328.0" y="350.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.17%)</title><rect x="325.0" y="323.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="328.0" y="334.0"></text>
</g>
<g>
<title>ip_output (127 samples, 4.34%)</title><rect x="327.1" y="387.0" width="51.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.1" y="398.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (126 samples, 4.30%)</title><rect x="327.5" y="371.0" width="50.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.5" y="382.0">ip_fi..</text>
</g>
<g>
<title>dev_queue_xmit (119 samples, 4.06%)</title><rect x="329.9" y="355.0" width="47.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.9" y="366.0">dev_..</text>
</g>
<g>
<title>__dev_queue_xmit (119 samples, 4.06%)</title><rect x="329.9" y="339.0" width="47.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.9" y="350.0">__de..</text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.10%)</title><rect x="330.3" y="323.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.3" y="334.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.07%)</title><rect x="331.5" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="334.5" y="334.0"></text>
</g>
<g>
<title>virtnet_select_queue?[virtio_net] (1 samples, 0.03%)</title><rect x="331.9" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="334.9" y="318.0"></text>
</g>
<g>
<title>sch_direct_xmit (112 samples, 3.82%)</title><rect x="332.3" y="323.0" width="45.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.3" y="334.0">sch_..</text>
</g>
<g>
<title>dev_hard_start_xmit (110 samples, 3.76%)</title><rect x="332.3" y="307.0" width="44.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="335.3" y="318.0">dev_..</text>
</g>
<g>
<title>cleanup_module?[isofs] (1 samples, 0.03%)</title><rect x="332.7" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.7" y="302.0"></text>
</g>
<g>
<title>ktime_get_real (3 samples, 0.10%)</title><rect x="333.1" y="291.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.1" y="302.0"></text>
</g>
<g>
<title>getnstimeofday64 (3 samples, 0.10%)</title><rect x="333.1" y="275.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.1" y="286.0"></text>
</g>
<g>
<title>__getnstimeofday64 (3 samples, 0.10%)</title><rect x="333.1" y="259.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.1" y="270.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.07%)</title><rect x="333.5" y="243.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="336.5" y="254.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.07%)</title><rect x="333.5" y="227.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="336.5" y="238.0"></text>
</g>
<g>
<title>packet_rcv (5 samples, 0.17%)</title><rect x="334.3" y="291.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="337.3" y="302.0"></text>
</g>
<g>
<title>consume_skb (4 samples, 0.14%)</title><rect x="334.7" y="275.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="337.7" y="286.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.07%)</title><rect x="334.7" y="259.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.7" y="270.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.07%)</title><rect x="334.7" y="243.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.7" y="254.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="335.5" y="259.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.5" y="270.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="335.5" y="243.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.5" y="254.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="336.3" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.3" y="302.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="336.3" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.3" y="286.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (97 samples, 3.31%)</title><rect x="336.7" y="291.0" width="39.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="339.7" y="302.0">sta..</text>
</g>
<g>
<title>__kmalloc (1 samples, 0.03%)</title><rect x="337.1" y="275.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="340.1" y="286.0"></text>
</g>
<g>
<title>__memset (1 samples, 0.03%)</title><rect x="337.5" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="340.5" y="286.0"></text>
</g>
<g>
<title>free_old_xmit_skbs.isra.32?[virtio_net] (13 samples, 0.44%)</title><rect x="337.9" y="275.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="340.9" y="286.0"></text>
</g>
<g>
<title>__dev_kfree_skb_any (5 samples, 0.17%)</title><rect x="340.4" y="259.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.4" y="270.0"></text>
</g>
<g>
<title>consume_skb (5 samples, 0.17%)</title><rect x="340.4" y="243.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.4" y="254.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.10%)</title><rect x="340.4" y="227.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.4" y="238.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.07%)</title><rect x="340.8" y="211.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.8" y="222.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="341.6" y="227.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.6" y="238.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="341.6" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.6" y="222.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="341.6" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.6" y="206.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="342.0" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="345.0" y="222.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (2 samples, 0.07%)</title><rect x="342.4" y="259.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="345.4" y="270.0"></text>
</g>
<g>
<title>detach_buf?[virtio_ring] (1 samples, 0.03%)</title><rect x="342.8" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.8" y="254.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="342.8" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="345.8" y="238.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="342.8" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="345.8" y="222.0"></text>
</g>
<g>
<title>sock_wfree (1 samples, 0.03%)</title><rect x="343.2" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.2" y="286.0"></text>
</g>
<g>
<title>virtqueue_add_outbuf?[virtio_ring] (2 samples, 0.07%)</title><rect x="343.6" y="275.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="346.6" y="286.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.07%)</title><rect x="343.6" y="259.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="346.6" y="270.0"></text>
</g>
<g>
<title>virtqueue_kick?[virtio_ring] (76 samples, 2.59%)</title><rect x="344.4" y="275.0" width="30.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.4" y="286.0">vi..</text>
</g>
<g>
<title>iowrite16 (76 samples, 2.59%)</title><rect x="344.4" y="259.0" width="30.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.4" y="270.0">io..</text>
</g>
<g>
<title>vring_map_one_sg?[virtio_ring] (1 samples, 0.03%)</title><rect x="375.0" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.0" y="286.0"></text>
</g>
<g>
<title>vring_map_single.constprop.24?[virtio_ring] (1 samples, 0.03%)</title><rect x="375.4" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="378.4" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="375.8" y="291.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.8" y="302.0"></text>
</g>
<g>
<title>virtqueue_add_outbuf?[virtio_ring] (1 samples, 0.03%)</title><rect x="376.2" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.2" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (2 samples, 0.07%)</title><rect x="376.6" y="307.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.6" y="318.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="376.6" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.6" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (1 samples, 0.03%)</title><rect x="377.0" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.0" y="302.0"></text>
</g>
<g>
<title>passthru_features_check (1 samples, 0.03%)</title><rect x="377.0" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="380.0" y="286.0"></text>
</g>
<g>
<title>virtnet_select_queue?[virtio_net] (1 samples, 0.03%)</title><rect x="377.4" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.4" y="334.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.03%)</title><rect x="377.8" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="380.8" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="377.8" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.8" y="350.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="377.8" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.8" y="334.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="377.8" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.8" y="318.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="377.8" y="291.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.8" y="302.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="377.8" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.8" y="286.0"></text>
</g>
<g>
<title>put_cred_rcu (1 samples, 0.03%)</title><rect x="377.8" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.8" y="270.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="378.2" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.2" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="378.6" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.6" y="414.0"></text>
</g>
<g>
<title>local_clock (1 samples, 0.03%)</title><rect x="379.0" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.0" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.03%)</title><rect x="379.0" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.0" y="414.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.03%)</title><rect x="379.0" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.0" y="398.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="379.4" y="419.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.4" y="430.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.07%)</title><rect x="379.4" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.4" y="414.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="379.8" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="382.8" y="398.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="380.2" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.2" y="430.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="380.2" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.2" y="414.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.07%)</title><rect x="380.6" y="435.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.6" y="446.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.07%)</title><rect x="381.4" y="483.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="384.4" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.17%)</title><rect x="382.2" y="483.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.2" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.17%)</title><rect x="382.2" y="467.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.2" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="383.1" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.1" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.07%)</title><rect x="383.5" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.5" y="462.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="384.3" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="387.3" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="384.7" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="387.7" y="526.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="385.1" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.1" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="385.5" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.5" y="558.0"></text>
</g>
<g>
<title>sock_aio_write (1 samples, 0.03%)</title><rect x="385.9" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.9" y="558.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="386.3" y="627.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="389.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.31%)</title><rect x="386.7" y="675.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="686.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="387.5" y="659.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="390.5" y="670.0"></text>
</g>
<g>
<title>pthread_self (4 samples, 0.14%)</title><rect x="387.9" y="659.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="390.9" y="670.0"></text>
</g>
<g>
<title>pthread_self@plt (2 samples, 0.07%)</title><rect x="389.5" y="659.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="392.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureWriteOpen (1 samples, 0.03%)</title><rect x="390.3" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (211 samples, 7.20%)</title><rect x="390.7" y="851.0" width="85.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.7" y="862.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (210 samples, 7.17%)</title><rect x="391.1" y="835.0" width="84.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.1" y="846.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (210 samples, 7.17%)</title><rect x="391.1" y="819.0" width="84.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.1" y="830.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (210 samples, 7.17%)</title><rect x="391.1" y="803.0" width="84.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.1" y="814.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (5 samples, 0.17%)</title><rect x="391.1" y="787.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (2 samples, 0.07%)</title><rect x="391.1" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.1" y="782.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="391.9" y="771.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="394.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (205 samples, 7.00%)</title><rect x="393.1" y="787.0" width="82.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.1" y="798.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (205 samples, 7.00%)</title><rect x="393.1" y="771.0" width="82.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.1" y="782.0">io/netty/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (200 samples, 6.83%)</title><rect x="395.1" y="755.0" width="80.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.1" y="766.0">com/datas..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.cancel (1 samples, 0.03%)</title><rect x="395.1" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.1" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.setSuccess (1 samples, 0.03%)</title><rect x="395.1" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.setSuccess (1 samples, 0.03%)</title><rect x="395.1" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess (1 samples, 0.03%)</title><rect x="395.1" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.1" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.03%)</title><rect x="395.1" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.1" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.03%)</title><rect x="395.1" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.1" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (1 samples, 0.03%)</title><rect x="395.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.1" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (1 samples, 0.03%)</title><rect x="395.1" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.1" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (1 samples, 0.03%)</title><rect x="395.1" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.1" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel$$Lambda$294/1082510813.operationComplete (1 samples, 0.03%)</title><rect x="395.1" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.1" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/UncaughtExceptions.log (1 samples, 0.03%)</title><rect x="395.1" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.1" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.isSuccess (1 samples, 0.03%)</title><rect x="395.1" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.1" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (199 samples, 6.79%)</title><rect x="395.5" y="739.0" width="80.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="750.0">com/datas..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.acquire (5 samples, 0.17%)</title><rect x="395.5" y="723.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.5" y="734.0"></text>
</g>
<g>
<title>java/util/BitSet.nextClearBit (3 samples, 0.10%)</title><rect x="395.5" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.5" y="718.0"></text>
</g>
<g>
<title>java/util/BitSet.set (2 samples, 0.07%)</title><rect x="396.8" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.containsKey (2 samples, 0.07%)</title><rect x="397.6" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (2 samples, 0.07%)</title><rect x="397.6" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (15 samples, 0.51%)</title><rect x="398.4" y="723.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (15 samples, 0.51%)</title><rect x="398.4" y="707.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.insert (3 samples, 0.10%)</title><rect x="398.4" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.4" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (12 samples, 0.41%)</title><rect x="399.6" y="691.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.6" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smear (1 samples, 0.03%)</title><rect x="399.6" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.38%)</title><rect x="400.0" y="675.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.0" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.27%)</title><rect x="400.0" y="659.0" width="3.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="403.0" y="670.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="400.4" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="403.4" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.14%)</title><rect x="400.8" y="643.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="403.8" y="654.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="402.0" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="405.0" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="402.4" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="405.4" y="654.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="402.8" y="643.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="405.8" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="403.2" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="406.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (2 samples, 0.07%)</title><rect x="403.6" y="659.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.6" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/Frame.forRequest (5 samples, 0.17%)</title><rect x="404.4" y="723.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/Frame.&lt;init&gt; (5 samples, 0.17%)</title><rect x="404.4" y="707.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="404.4" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.14%)</title><rect x="404.8" y="691.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.8" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap.size (4 samples, 0.14%)</title><rect x="404.8" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableMap.entrySet (4 samples, 0.14%)</title><rect x="404.8" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.8" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (169 samples, 5.77%)</title><rect x="406.4" y="723.0" width="68.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.4" y="734.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (169 samples, 5.77%)</title><rect x="406.4" y="707.0" width="68.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.4" y="718.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (5 samples, 0.17%)</title><rect x="406.4" y="691.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.4" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (4 samples, 0.14%)</title><rect x="406.4" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.4" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="407.6" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.6" y="670.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="407.6" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.6" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="407.6" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.6" y="638.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="407.6" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.6" y="622.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="407.6" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.6" y="606.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="407.6" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.6" y="590.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="407.6" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.6" y="574.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="407.6" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.6" y="558.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="407.6" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="410.6" y="542.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="407.6" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.6" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="407.6" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.6" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="407.6" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="410.6" y="494.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="407.6" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.6" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="407.6" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.6" y="462.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.03%)</title><rect x="407.6" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.6" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="407.6" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.6" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="408.0" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="411.0" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (164 samples, 5.60%)</title><rect x="408.4" y="691.0" width="66.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.4" y="702.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (164 samples, 5.60%)</title><rect x="408.4" y="675.0" width="66.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.4" y="686.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (162 samples, 5.53%)</title><rect x="409.2" y="659.0" width="65.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.2" y="670.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (162 samples, 5.53%)</title><rect x="409.2" y="643.0" width="65.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.2" y="654.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (162 samples, 5.53%)</title><rect x="409.2" y="627.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.2" y="638.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (4 samples, 0.14%)</title><rect x="409.2" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.2" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (1 samples, 0.03%)</title><rect x="409.2" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.2" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (3 samples, 0.10%)</title><rect x="409.6" y="595.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (158 samples, 5.39%)</title><rect x="410.9" y="611.0" width="63.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.9" y="622.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (158 samples, 5.39%)</title><rect x="410.9" y="595.0" width="63.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.9" y="606.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (157 samples, 5.36%)</title><rect x="411.3" y="579.0" width="63.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.3" y="590.0">io/nett..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (135 samples, 4.61%)</title><rect x="411.3" y="563.0" width="54.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.3" y="574.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (135 samples, 4.61%)</title><rect x="411.3" y="547.0" width="54.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.3" y="558.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (135 samples, 4.61%)</title><rect x="411.3" y="531.0" width="54.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.3" y="542.0">com/d..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (54 samples, 1.84%)</title><rect x="411.3" y="515.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.3" y="526.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (54 samples, 1.84%)</title><rect x="411.3" y="499.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.3" y="510.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.compressDirect (54 samples, 1.84%)</title><rect x="411.3" y="483.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="494.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (5 samples, 0.17%)</title><rect x="411.3" y="467.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (2 samples, 0.07%)</title><rect x="411.3" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.03%)</title><rect x="411.3" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.03%)</title><rect x="411.3" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.3" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.03%)</title><rect x="411.3" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.3" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.03%)</title><rect x="411.3" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.3" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="411.3" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="411.7" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="411.7" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.7" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.03%)</title><rect x="411.7" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.7" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBufferCount (2 samples, 0.07%)</title><rect x="412.1" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.03%)</title><rect x="412.9" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.9" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.outputNioBuffer (1 samples, 0.03%)</title><rect x="413.3" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="413.3" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.03%)</title><rect x="413.3" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="413.3" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.3" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.03%)</title><rect x="413.3" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.3" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (6 samples, 0.20%)</title><rect x="413.7" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.7" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (6 samples, 0.20%)</title><rect x="413.7" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.7" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (6 samples, 0.20%)</title><rect x="413.7" y="435.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (2 samples, 0.07%)</title><rect x="413.7" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.7" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (2 samples, 0.07%)</title><rect x="413.7" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.7" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (2 samples, 0.07%)</title><rect x="413.7" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.7" y="398.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (2 samples, 0.07%)</title><rect x="413.7" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.7" y="382.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (2 samples, 0.07%)</title><rect x="413.7" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.07%)</title><rect x="413.7" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="413.7" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.7" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.07%)</title><rect x="413.7" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.7" y="318.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.07%)</title><rect x="413.7" y="291.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="416.7" y="302.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.07%)</title><rect x="413.7" y="275.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="416.7" y="286.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.07%)</title><rect x="413.7" y="259.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="416.7" y="270.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="413.7" y="243.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="416.7" y="254.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.03%)</title><rect x="414.1" y="243.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="417.1" y="254.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.07%)</title><rect x="414.5" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.5" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.07%)</title><rect x="414.5" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.5" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="414.5" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.5" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.03%)</title><rect x="414.5" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.5" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.03%)</title><rect x="414.5" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.03%)</title><rect x="414.5" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.5" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (1 samples, 0.03%)</title><rect x="414.5" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.5" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (1 samples, 0.03%)</title><rect x="414.9" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.9" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (1 samples, 0.03%)</title><rect x="414.9" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.9" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (1 samples, 0.03%)</title><rect x="414.9" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.9" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (1 samples, 0.03%)</title><rect x="414.9" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.9" y="350.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (1 samples, 0.03%)</title><rect x="414.9" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.9" y="334.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.07%)</title><rect x="415.3" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.3" y="430.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.03%)</title><rect x="415.7" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.7" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.fastGet (1 samples, 0.03%)</title><rect x="415.7" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.7" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.03%)</title><rect x="416.1" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.1" y="478.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNICompressor.compress (41 samples, 1.40%)</title><rect x="416.5" y="467.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.5" y="478.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_compress_limitedOutput (40 samples, 1.37%)</title><rect x="416.5" y="451.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.5" y="462.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1compress_1limitedOutput (5 samples, 0.17%)</title><rect x="417.7" y="435.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="420.7" y="446.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (2 samples, 0.07%)</title><rect x="418.5" y="419.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="421.5" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.03%)</title><rect x="418.5" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="421.5" y="414.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.03%)</title><rect x="418.9" y="403.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="421.9" y="414.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (1 samples, 0.03%)</title><rect x="419.3" y="419.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="422.3" y="430.0"></text>
</g>
<g>
<title>LZ4_compressBound (1 samples, 0.03%)</title><rect x="419.7" y="435.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="422.7" y="446.0"></text>
</g>
<g>
<title>LZ4_compress_default (1 samples, 0.03%)</title><rect x="420.1" y="435.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="423.1" y="446.0"></text>
</g>
<g>
<title>LZ4_compress_fast (1 samples, 0.03%)</title><rect x="420.5" y="435.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="423.5" y="446.0"></text>
</g>
<g>
<title>LZ4_compress_fast@plt (1 samples, 0.03%)</title><rect x="420.9" y="435.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="423.9" y="446.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState (3 samples, 0.10%)</title><rect x="421.3" y="435.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="424.3" y="446.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (2 samples, 0.07%)</title><rect x="422.5" y="435.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="425.5" y="446.0"></text>
</g>
<g>
<title>__memset_sse2 (20 samples, 0.68%)</title><rect x="423.3" y="435.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="426.3" y="446.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (3 samples, 0.10%)</title><rect x="431.4" y="435.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="434.4" y="446.0"></text>
</g>
<g>
<title>net/jpountz/util/ByteBufferUtils.checkRange (1 samples, 0.03%)</title><rect x="432.6" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.6" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (29 samples, 0.99%)</title><rect x="433.0" y="515.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.0" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (29 samples, 0.99%)</title><rect x="433.0" y="499.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (29 samples, 0.99%)</title><rect x="433.0" y="483.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (29 samples, 0.99%)</title><rect x="433.0" y="467.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (29 samples, 0.99%)</title><rect x="433.0" y="451.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (11 samples, 0.38%)</title><rect x="433.0" y="435.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.0" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (10 samples, 0.34%)</title><rect x="433.4" y="419.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.4" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (10 samples, 0.34%)</title><rect x="433.4" y="403.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.4" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (9 samples, 0.31%)</title><rect x="433.4" y="387.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.4" y="398.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (9 samples, 0.31%)</title><rect x="433.4" y="371.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.31%)</title><rect x="433.4" y="355.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.31%)</title><rect x="433.4" y="339.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.31%)</title><rect x="433.4" y="323.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.4" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.03%)</title><rect x="433.4" y="307.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="436.4" y="318.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (8 samples, 0.27%)</title><rect x="433.8" y="307.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="436.8" y="318.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (8 samples, 0.27%)</title><rect x="433.8" y="291.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="436.8" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (8 samples, 0.27%)</title><rect x="433.8" y="275.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="436.8" y="286.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="433.8" y="259.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="436.8" y="270.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (7 samples, 0.24%)</title><rect x="434.2" y="259.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="437.2" y="270.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (4 samples, 0.14%)</title><rect x="435.4" y="243.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="438.4" y="254.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.03%)</title><rect x="436.6" y="227.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="439.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextInt (1 samples, 0.03%)</title><rect x="437.0" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix32 (1 samples, 0.03%)</title><rect x="437.0" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.0" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (17 samples, 0.58%)</title><rect x="437.4" y="435.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (4 samples, 0.14%)</title><rect x="437.4" y="419.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (4 samples, 0.14%)</title><rect x="437.4" y="403.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (3 samples, 0.10%)</title><rect x="437.4" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.4" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (3 samples, 0.10%)</title><rect x="437.4" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.4" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (3 samples, 0.10%)</title><rect x="437.4" y="355.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (3 samples, 0.10%)</title><rect x="437.4" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (3 samples, 0.10%)</title><rect x="437.4" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.4" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.03%)</title><rect x="438.7" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.7" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (13 samples, 0.44%)</title><rect x="439.1" y="419.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (12 samples, 0.41%)</title><rect x="439.5" y="403.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.5" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (12 samples, 0.41%)</title><rect x="439.5" y="387.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.5" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (12 samples, 0.41%)</title><rect x="439.5" y="371.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.5" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 0.03%)</title><rect x="439.9" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.9" y="366.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.03%)</title><rect x="439.9" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.9" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (5 samples, 0.17%)</title><rect x="440.3" y="355.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.3" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (5 samples, 0.17%)</title><rect x="440.3" y="339.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.3" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (5 samples, 0.17%)</title><rect x="440.3" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.3" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (4 samples, 0.14%)</title><rect x="440.3" y="307.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.3" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (4 samples, 0.14%)</title><rect x="440.3" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.3" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.03%)</title><rect x="441.9" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.9" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.03%)</title><rect x="441.9" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.9" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (1 samples, 0.03%)</title><rect x="441.9" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.9" y="286.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (5 samples, 0.17%)</title><rect x="442.3" y="355.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.3" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (5 samples, 0.17%)</title><rect x="442.3" y="339.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.3" y="350.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.03%)</title><rect x="444.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.3" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.03%)</title><rect x="444.3" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.3" y="430.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (15 samples, 0.51%)</title><rect x="444.7" y="515.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.7" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (13 samples, 0.44%)</title><rect x="445.5" y="499.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (5 samples, 0.17%)</title><rect x="445.5" y="483.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (5 samples, 0.17%)</title><rect x="445.5" y="467.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.5" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (4 samples, 0.14%)</title><rect x="445.5" y="451.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.5" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (4 samples, 0.14%)</title><rect x="445.5" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.5" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (4 samples, 0.14%)</title><rect x="445.5" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.5" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (4 samples, 0.14%)</title><rect x="445.5" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.5" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (3 samples, 0.10%)</title><rect x="445.9" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.10%)</title><rect x="445.9" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.10%)</title><rect x="445.9" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.10%)</title><rect x="445.9" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.9" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.10%)</title><rect x="445.9" y="323.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="448.9" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.10%)</title><rect x="445.9" y="307.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="448.9" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (3 samples, 0.10%)</title><rect x="445.9" y="291.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="448.9" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (3 samples, 0.10%)</title><rect x="445.9" y="275.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="448.9" y="286.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="446.3" y="259.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="449.3" y="270.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="446.7" y="259.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="449.7" y="270.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="446.7" y="243.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="449.7" y="254.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="447.1" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (1 samples, 0.03%)</title><rect x="447.1" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (7 samples, 0.24%)</title><rect x="447.5" y="483.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (7 samples, 0.24%)</title><rect x="447.5" y="467.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.5" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents0 (7 samples, 0.24%)</title><rect x="447.5" y="451.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.5" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.ensureAccessible (1 samples, 0.03%)</title><rect x="448.7" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readableBytes (1 samples, 0.03%)</title><rect x="448.7" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.7" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newComponent (3 samples, 0.10%)</title><rect x="449.1" y="435.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.&lt;init&gt; (2 samples, 0.07%)</title><rect x="449.1" y="419.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.capacity (1 samples, 0.03%)</title><rect x="449.9" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.9" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedCompositeByteBuf.addComponents (1 samples, 0.03%)</title><rect x="450.3" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.3" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (3 samples, 0.10%)</title><rect x="450.7" y="515.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (3 samples, 0.10%)</title><rect x="450.7" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.7" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (3 samples, 0.10%)</title><rect x="450.7" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.7" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (3 samples, 0.10%)</title><rect x="450.7" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.7" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (3 samples, 0.10%)</title><rect x="450.7" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.7" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (3 samples, 0.10%)</title><rect x="450.7" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (3 samples, 0.10%)</title><rect x="450.7" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.7" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (2 samples, 0.07%)</title><rect x="450.7" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.7" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.07%)</title><rect x="450.7" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.7" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.03%)</title><rect x="451.1" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.1" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.03%)</title><rect x="451.1" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.1" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (1 samples, 0.03%)</title><rect x="451.1" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.1" y="350.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (1 samples, 0.03%)</title><rect x="451.1" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.1" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (1 samples, 0.03%)</title><rect x="451.5" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.5" y="414.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.computeFlags (5 samples, 0.17%)</title><rect x="451.9" y="515.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.9" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (2 samples, 0.07%)</title><rect x="453.2" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.2" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeBodyInto (10 samples, 0.34%)</title><rect x="454.0" y="515.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.0" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encode (10 samples, 0.34%)</title><rect x="454.0" y="499.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.0" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (1 samples, 0.03%)</title><rect x="454.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.0" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (1 samples, 0.03%)</title><rect x="454.0" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.03%)</title><rect x="454.0" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.03%)</title><rect x="454.0" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (1 samples, 0.03%)</title><rect x="454.0" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.0" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (1 samples, 0.03%)</title><rect x="454.0" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.0" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (1 samples, 0.03%)</title><rect x="454.0" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.0" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (1 samples, 0.03%)</title><rect x="454.0" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.0" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (1 samples, 0.03%)</title><rect x="454.0" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.03%)</title><rect x="454.0" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.0" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="454.0" y="323.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="457.0" y="334.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encode (9 samples, 0.31%)</title><rect x="454.4" y="483.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.4" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.03%)</title><rect x="454.4" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.4" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.03%)</title><rect x="454.4" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.4" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeByte (1 samples, 0.03%)</title><rect x="454.4" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.03%)</title><rect x="454.4" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.4" y="430.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (2 samples, 0.07%)</title><rect x="454.8" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.8" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (2 samples, 0.07%)</title><rect x="455.6" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.6" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (2 samples, 0.07%)</title><rect x="455.6" y="451.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeShort (2 samples, 0.07%)</title><rect x="455.6" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (2 samples, 0.07%)</title><rect x="455.6" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (2 samples, 0.07%)</title><rect x="455.6" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (2 samples, 0.07%)</title><rect x="455.6" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.6" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.03%)</title><rect x="456.0" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.03%)</title><rect x="456.0" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.size (1 samples, 0.03%)</title><rect x="456.0" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.0" y="350.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writePositionalValues (4 samples, 0.14%)</title><rect x="456.4" y="467.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.4" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writeValue (3 samples, 0.10%)</title><rect x="456.4" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.4" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (3 samples, 0.10%)</title><rect x="456.4" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.4" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (3 samples, 0.10%)</title><rect x="456.4" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.03%)</title><rect x="456.4" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (1 samples, 0.03%)</title><rect x="456.4" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.4" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (1 samples, 0.03%)</title><rect x="456.4" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.4" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="456.4" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.4" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="456.4" y="339.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="459.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.07%)</title><rect x="456.8" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.8" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="456.8" y="387.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="459.8" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="456.8" y="371.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="459.8" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="456.8" y="355.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="459.8" y="366.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.03%)</title><rect x="456.8" y="339.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="459.8" y="350.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.03%)</title><rect x="456.8" y="323.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="459.8" y="334.0"></text>
</g>
<g>
<title>G1AllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="456.8" y="307.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="459.8" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="456.8" y="291.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="459.8" y="302.0"></text>
</g>
<g>
<title>G1CollectorPolicy::add_region_to_incremental_cset_lhs(HeapRegion*) (1 samples, 0.03%)</title><rect x="456.8" y="275.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="459.8" y="286.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="457.2" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="460.2" y="398.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="457.2" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.2" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="457.2" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.2" y="366.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="457.2" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="460.2" y="350.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="457.2" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="460.2" y="334.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="457.2" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="457.2" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.2" y="302.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.03%)</title><rect x="457.2" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="460.2" y="286.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.03%)</title><rect x="457.2" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.2" y="270.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.03%)</title><rect x="457.2" y="243.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="460.2" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="457.2" y="227.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="457.2" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="457.2" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="460.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="457.2" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="457.2" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.2" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="457.2" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="457.2" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="457.2" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="457.2" y="99.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="457.2" y="83.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="457.2" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="457.2" y="51.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="457.2" y="35.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.2" y="46.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.03%)</title><rect x="457.6" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.size (1 samples, 0.03%)</title><rect x="457.6" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.6" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeHeaderInto (3 samples, 0.10%)</title><rect x="458.0" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.03%)</title><rect x="458.8" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.8" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodedBodySize (12 samples, 0.41%)</title><rect x="459.2" y="515.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.2" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.getMessageEncoder (3 samples, 0.10%)</title><rect x="459.6" y="499.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.6" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/IntIntMap.get (1 samples, 0.03%)</title><rect x="460.4" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.4" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/IntMap.get (1 samples, 0.03%)</title><rect x="460.4" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.4" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encodedSize (6 samples, 0.20%)</title><rect x="460.8" y="499.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.8" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/PrimitiveSizes.sizeOfShortBytes (1 samples, 0.03%)</title><rect x="460.8" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.8" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolSubpage.allocate (1 samples, 0.03%)</title><rect x="460.8" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.8" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encodedSize (4 samples, 0.14%)</title><rect x="461.2" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.2" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions.queryFlagsSize (1 samples, 0.03%)</title><rect x="461.6" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.6" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.03%)</title><rect x="461.6" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkRangeBounds (1 samples, 0.03%)</title><rect x="462.0" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.0" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.javaVersion (1 samples, 0.03%)</title><rect x="462.4" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.4" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 0.03%)</title><rect x="462.8" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.8" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (1 samples, 0.03%)</title><rect x="463.2" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyMap.isEmpty (1 samples, 0.03%)</title><rect x="463.6" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.6" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encode (4 samples, 0.14%)</title><rect x="464.0" y="515.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.0" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (14 samples, 0.48%)</title><rect x="465.6" y="563.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.6" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (14 samples, 0.48%)</title><rect x="465.6" y="547.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.6" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.03%)</title><rect x="465.6" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.6" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (1 samples, 0.03%)</title><rect x="465.6" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.6" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (10 samples, 0.34%)</title><rect x="466.0" y="531.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.0" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (10 samples, 0.34%)</title><rect x="466.0" y="515.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.0" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (8 samples, 0.27%)</title><rect x="466.9" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.9" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.write (8 samples, 0.27%)</title><rect x="466.9" y="483.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.9" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addMessage (5 samples, 0.17%)</title><rect x="468.1" y="467.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.1" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.newInstance (3 samples, 0.10%)</title><rect x="468.5" y="451.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.5" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes (1 samples, 0.03%)</title><rect x="469.7" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.7" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (3 samples, 0.10%)</title><rect x="470.1" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.1" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.03%)</title><rect x="470.1" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.1" y="526.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="470.5" y="515.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="473.5" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (6 samples, 0.20%)</title><rect x="471.3" y="563.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.3" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (5 samples, 0.17%)</title><rect x="471.7" y="547.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.7" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (5 samples, 0.17%)</title><rect x="471.7" y="531.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.7" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.acceptOutboundMessage (1 samples, 0.03%)</title><rect x="473.7" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.7" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.03%)</title><rect x="474.1" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.1" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (2 samples, 0.07%)</title><rect x="474.5" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (2 samples, 0.07%)</title><rect x="474.5" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (2 samples, 0.07%)</title><rect x="474.5" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener0 (1 samples, 0.03%)</title><rect x="474.9" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.03%)</title><rect x="475.3" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="475.7" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="475.7" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.hashCode (1 samples, 0.03%)</title><rect x="475.7" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.17%)</title><rect x="476.1" y="851.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.17%)</title><rect x="476.1" y="835.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.14%)</title><rect x="476.5" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.14%)</title><rect x="476.5" y="803.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.10%)</title><rect x="478.1" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="478.5" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (10 samples, 0.34%)</title><rect x="479.3" y="851.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (8 samples, 0.27%)</title><rect x="480.1" y="835.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.lazySetNext (4 samples, 0.14%)</title><rect x="480.5" y="819.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="480.5" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.10%)</title><rect x="481.0" y="803.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.casHead (3 samples, 0.10%)</title><rect x="482.2" y="819.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.2" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (1 samples, 0.03%)</title><rect x="482.6" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="483.0" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.0" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.run (4 samples, 0.14%)</title><rect x="483.4" y="883.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.4" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.runTask (4 samples, 0.14%)</title><rect x="483.4" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="878.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$179/1782414731.run (4 samples, 0.14%)</title><rect x="483.4" y="851.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (4 samples, 0.14%)</title><rect x="483.4" y="835.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.4" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (3 samples, 0.10%)</title><rect x="483.4" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (3 samples, 0.10%)</title><rect x="483.4" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (3 samples, 0.10%)</title><rect x="483.4" y="787.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (3 samples, 0.10%)</title><rect x="483.4" y="771.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (3 samples, 0.10%)</title><rect x="483.4" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (3 samples, 0.10%)</title><rect x="483.4" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (3 samples, 0.10%)</title><rect x="483.4" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (3 samples, 0.10%)</title><rect x="483.4" y="707.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (3 samples, 0.10%)</title><rect x="483.4" y="691.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (3 samples, 0.10%)</title><rect x="483.4" y="675.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (1 samples, 0.03%)</title><rect x="483.4" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (1 samples, 0.03%)</title><rect x="483.4" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (1 samples, 0.03%)</title><rect x="483.4" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (1 samples, 0.03%)</title><rect x="483.4" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (1 samples, 0.03%)</title><rect x="483.4" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.4" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.03%)</title><rect x="483.4" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.03%)</title><rect x="483.4" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (1 samples, 0.03%)</title><rect x="483.4" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.4" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (1 samples, 0.03%)</title><rect x="483.4" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.4" y="542.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners0 (1 samples, 0.03%)</title><rect x="483.4" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.4" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (1 samples, 0.03%)</title><rect x="483.4" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (1 samples, 0.03%)</title><rect x="483.4" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.scheduleSpeculativeExecution (1 samples, 0.03%)</title><rect x="483.4" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.03%)</title><rect x="483.4" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="483.4" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.07%)</title><rect x="483.8" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.07%)</title><rect x="483.8" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.07%)</title><rect x="483.8" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.07%)</title><rect x="483.8" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.8" y="622.0"></text>
</g>
<g>
<title>__libc_writev (2 samples, 0.07%)</title><rect x="483.8" y="595.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="486.8" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.07%)</title><rect x="483.8" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.8" y="590.0"></text>
</g>
<g>
<title>sys_writev (2 samples, 0.07%)</title><rect x="483.8" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="486.8" y="574.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.07%)</title><rect x="483.8" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="486.8" y="558.0"></text>
</g>
<g>
<title>do_readv_writev (2 samples, 0.07%)</title><rect x="483.8" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.8" y="542.0"></text>
</g>
<g>
<title>do_sync_readv_writev (2 samples, 0.07%)</title><rect x="483.8" y="515.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.8" y="526.0"></text>
</g>
<g>
<title>sock_aio_write (2 samples, 0.07%)</title><rect x="483.8" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.8" y="510.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.07%)</title><rect x="483.8" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="486.8" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.07%)</title><rect x="483.8" y="467.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.8" y="478.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.07%)</title><rect x="483.8" y="451.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="486.8" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.07%)</title><rect x="483.8" y="435.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="486.8" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.07%)</title><rect x="483.8" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.8" y="430.0"></text>
</g>
<g>
<title>tcp_transmit_skb (2 samples, 0.07%)</title><rect x="483.8" y="403.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.8" y="414.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.07%)</title><rect x="483.8" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.8" y="398.0"></text>
</g>
<g>
<title>ip_local_out_sk (2 samples, 0.07%)</title><rect x="483.8" y="371.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.8" y="382.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.07%)</title><rect x="483.8" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.07%)</title><rect x="483.8" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.8" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.07%)</title><rect x="483.8" y="323.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.8" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.07%)</title><rect x="483.8" y="307.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.8" y="318.0"></text>
</g>
<g>
<title>sch_direct_xmit (2 samples, 0.07%)</title><rect x="483.8" y="291.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.8" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="483.8" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.8" y="286.0"></text>
</g>
<g>
<title>ktime_get_real (1 samples, 0.03%)</title><rect x="483.8" y="259.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.8" y="270.0"></text>
</g>
<g>
<title>getnstimeofday64 (1 samples, 0.03%)</title><rect x="483.8" y="243.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.8" y="254.0"></text>
</g>
<g>
<title>__getnstimeofday64 (1 samples, 0.03%)</title><rect x="483.8" y="227.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.8" y="238.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.03%)</title><rect x="483.8" y="211.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.8" y="222.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.03%)</title><rect x="483.8" y="195.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="486.8" y="206.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.03%)</title><rect x="484.2" y="275.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="487.2" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (1 samples, 0.03%)</title><rect x="484.2" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.2" y="270.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="484.2" y="243.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.2" y="254.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (1 samples, 0.03%)</title><rect x="484.6" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (1 samples, 0.03%)</title><rect x="484.6" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="484.6" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="484.6" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.6" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (1 samples, 0.03%)</title><rect x="484.6" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (1 samples, 0.03%)</title><rect x="484.6" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="484.6" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="484.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.6" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (1 samples, 0.03%)</title><rect x="484.6" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.6" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.03%)</title><rect x="484.6" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.03%)</title><rect x="484.6" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.6" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.03%)</title><rect x="484.6" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.6" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (1 samples, 0.03%)</title><rect x="484.6" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.6" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (1 samples, 0.03%)</title><rect x="484.6" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.6" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (1 samples, 0.03%)</title><rect x="484.6" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (1 samples, 0.03%)</title><rect x="484.6" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.6" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeHeaderInto (1 samples, 0.03%)</title><rect x="484.6" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.6" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.03%)</title><rect x="484.6" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.6" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.03%)</title><rect x="484.6" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeByte (1 samples, 0.03%)</title><rect x="484.6" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.03%)</title><rect x="484.6" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (1 samples, 0.03%)</title><rect x="484.6" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.6" y="414.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.fetchFromScheduledTaskQueue (10 samples, 0.34%)</title><rect x="485.0" y="899.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.pollScheduledTask (8 samples, 0.27%)</title><rect x="485.8" y="883.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.8" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (5 samples, 0.17%)</title><rect x="486.6" y="867.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.peek (5 samples, 0.17%)</title><rect x="486.6" y="851.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.6" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.peek (2 samples, 0.07%)</title><rect x="487.8" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.8" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.setConsumed (1 samples, 0.03%)</title><rect x="488.6" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTask (4 samples, 0.14%)</title><rect x="489.0" y="899.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (4 samples, 0.14%)</title><rect x="489.0" y="883.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="489.0" y="867.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="492.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="489.4" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="492.4" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (2 samples, 0.07%)</title><rect x="489.8" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.8" y="878.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (2 samples, 0.07%)</title><rect x="489.8" y="851.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.8" y="862.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.lvRefElement (1 samples, 0.03%)</title><rect x="490.2" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.03%)</title><rect x="490.6" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="926.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="491.0" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="494.0" y="942.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="491.0" y="915.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.0" y="926.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="491.0" y="899.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="491.0" y="883.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.0" y="894.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="491.0" y="867.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.0" y="878.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="491.0" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.0" y="862.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="491.0" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,651 samples, 56.37%)</title><rect x="491.4" y="979.0" width="665.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.4" y="990.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,651 samples, 56.37%)</title><rect x="491.4" y="963.0" width="665.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.4" y="974.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>clojure/lang/AFn.run (1,651 samples, 56.37%)</title><rect x="491.4" y="947.0" width="665.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.4" y="958.0">clojure/lang/AFn.run</text>
</g>
<g>
<title>clojure/core/async$thread_call$fn__6246.invoke (1,651 samples, 56.37%)</title><rect x="491.4" y="931.0" width="665.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.4" y="942.0">clojure/core/async$thread_call$fn__6246.invoke</text>
</g>
<g>
<title>hammer/core$_main$fn__8901.invoke (1,651 samples, 56.37%)</title><rect x="491.4" y="915.0" width="665.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="926.0">hammer/core$_main$fn__8901.invoke</text>
</g>
<g>
<title>hammer/core$selectTaskOneSession.invoke (1,651 samples, 56.37%)</title><rect x="491.4" y="899.0" width="665.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.4" y="910.0">hammer/core$selectTaskOneSession.invoke</text>
</g>
<g>
<title>hammer/core$selectTaskOneSession.invokeStatic (1,651 samples, 56.37%)</title><rect x="491.4" y="883.0" width="665.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.4" y="894.0">hammer/core$selectTaskOneSession.invokeStatic</text>
</g>
<g>
<title>hammer/core$selectTaskOneSession$fn__8890.invoke (1,651 samples, 56.37%)</title><rect x="491.4" y="867.0" width="665.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.4" y="878.0">hammer/core$selectTaskOneSession$fn__8890.invoke</text>
</g>
<g>
<title>clojure/lang/RT.classForName (90 samples, 3.07%)</title><rect x="491.8" y="851.0" width="36.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.8" y="862.0">clo..</text>
</g>
<g>
<title>clojure/lang/RT.baseLoader (6 samples, 0.20%)</title><rect x="491.8" y="835.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.8" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Var.deref (6 samples, 0.20%)</title><rect x="491.8" y="819.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.8" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Var.getThreadBinding (6 samples, 0.20%)</title><rect x="491.8" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.8" y="814.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap.entryAt (2 samples, 0.07%)</title><rect x="491.8" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.8" y="798.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$ArrayNode.find (2 samples, 0.07%)</title><rect x="491.8" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.8" y="782.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (2 samples, 0.07%)</title><rect x="491.8" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.8" y="766.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (1 samples, 0.03%)</title><rect x="491.8" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.8" y="750.0"></text>
</g>
<g>
<title>clojure/lang/MapEntry.create (1 samples, 0.03%)</title><rect x="491.8" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.8" y="734.0"></text>
</g>
<g>
<title>clojure/lang/MapEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="491.8" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.8" y="718.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (1 samples, 0.03%)</title><rect x="492.2" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.14%)</title><rect x="492.6" y="787.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.03%)</title><rect x="493.8" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="493.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.8" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.03%)</title><rect x="493.8" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.8" y="750.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (84 samples, 2.87%)</title><rect x="494.2" y="835.0" width="33.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.2" y="846.0">cl..</text>
</g>
<g>
<title>java/lang/Class.forName (84 samples, 2.87%)</title><rect x="494.2" y="819.0" width="33.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.2" y="830.0">ja..</text>
</g>
<g>
<title>java/lang/Class.forName0 (84 samples, 2.87%)</title><rect x="494.2" y="803.0" width="33.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.2" y="814.0">ja..</text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.03%)</title><rect x="494.7" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="497.7" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (72 samples, 2.46%)</title><rect x="495.1" y="787.0" width="29.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="498.1" y="798.0">Ja..</text>
</g>
<g>
<title>JVM_FindClassFromCaller (45 samples, 1.54%)</title><rect x="495.1" y="771.0" width="18.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="498.1" y="782.0"></text>
</g>
<g>
<title>Atomic::inc(short volatile*) (1 samples, 0.03%)</title><rect x="495.1" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="498.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.03%)</title><rect x="495.5" y="755.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="498.5" y="766.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (2 samples, 0.07%)</title><rect x="495.9" y="755.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="498.9" y="766.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (9 samples, 0.31%)</title><rect x="496.7" y="755.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="499.7" y="766.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (1 samples, 0.03%)</title><rect x="499.9" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="502.9" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="500.3" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="503.3" y="766.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (31 samples, 1.06%)</title><rect x="500.7" y="755.0" width="12.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="503.7" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.07%)</title><rect x="500.7" y="739.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="503.7" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (28 samples, 0.96%)</title><rect x="501.5" y="739.0" width="11.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="504.5" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (27 samples, 0.92%)</title><rect x="501.5" y="723.0" width="10.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="504.5" y="734.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (19 samples, 0.65%)</title><rect x="502.7" y="707.0" width="7.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="505.7" y="718.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (5 samples, 0.17%)</title><rect x="510.4" y="707.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.4" y="718.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.03%)</title><rect x="512.4" y="723.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="515.4" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.03%)</title><rect x="512.8" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="515.8" y="750.0"></text>
</g>
<g>
<title>VerifyClassname (4 samples, 0.14%)</title><rect x="513.2" y="771.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="516.2" y="782.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (4 samples, 0.14%)</title><rect x="513.2" y="755.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="516.2" y="766.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (4 samples, 0.14%)</title><rect x="514.8" y="771.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="517.8" y="782.0"></text>
</g>
<g>
<title>__strlen_sse2_pminub (6 samples, 0.20%)</title><rect x="516.4" y="771.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="519.4" y="782.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.03%)</title><rect x="518.8" y="771.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="521.8" y="782.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (1 samples, 0.03%)</title><rect x="519.2" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="522.2" y="782.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (4 samples, 0.14%)</title><rect x="519.6" y="771.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="522.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (3 samples, 0.10%)</title><rect x="519.6" y="755.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="522.6" y="766.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (1 samples, 0.03%)</title><rect x="520.8" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="523.8" y="766.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (5 samples, 0.17%)</title><rect x="521.2" y="771.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="524.2" y="782.0"></text>
</g>
<g>
<title>UNICODE::as_utf8(unsigned short*, int) (2 samples, 0.07%)</title><rect x="522.0" y="755.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="525.0" y="766.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*, int, int) (1 samples, 0.03%)</title><rect x="522.9" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="525.9" y="766.0"></text>
</g>
<g>
<title>oopDesc::obj_field(int) const (1 samples, 0.03%)</title><rect x="522.9" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="525.9" y="750.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.03%)</title><rect x="523.3" y="771.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="526.3" y="782.0"></text>
</g>
<g>
<title>strlen@plt (1 samples, 0.03%)</title><rect x="523.7" y="771.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="526.7" y="782.0"></text>
</g>
<g>
<title>VerifyFixClassname (2 samples, 0.07%)</title><rect x="524.1" y="787.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="527.1" y="798.0"></text>
</g>
<g>
<title>jni_GetStringLength (3 samples, 0.10%)</title><rect x="524.9" y="787.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="527.9" y="798.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.03%)</title><rect x="526.1" y="787.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="529.1" y="798.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (4 samples, 0.14%)</title><rect x="526.5" y="787.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="529.5" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeStaticMethod (571 samples, 19.49%)</title><rect x="528.1" y="851.0" width="230.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.1" y="862.0">clojure/lang/Reflector.invokeS..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (529 samples, 18.06%)</title><rect x="528.1" y="835.0" width="213.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.1" y="846.0">clojure/lang/Reflector.getMe..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="568.0" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="571.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getMethods (418 samples, 14.27%)</title><rect x="568.4" y="819.0" width="168.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.4" y="830.0">java/lang/Class.getMet..</text>
</g>
<g>
<title>java/lang/Class.checkMemberAccess (2 samples, 0.07%)</title><rect x="568.4" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (414 samples, 14.13%)</title><rect x="569.2" y="803.0" width="166.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.2" y="814.0">java/lang/Class.copyM..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (5 samples, 0.17%)</title><rect x="575.6" y="787.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.6" y="798.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (393 samples, 13.42%)</title><rect x="577.6" y="787.0" width="158.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.6" y="798.0">sun/reflect/Reflecti..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (378 samples, 12.91%)</title><rect x="579.3" y="771.0" width="152.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.3" y="782.0">java/lang/reflect/R..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (377 samples, 12.87%)</title><rect x="579.7" y="755.0" width="151.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.7" y="766.0">java/lang/reflect/M..</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="624.4" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="627.4" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.17%)</title><rect x="624.8" y="739.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="627.8" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.14%)</title><rect x="625.2" y="723.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="628.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (3 samples, 0.10%)</title><rect x="625.6" y="707.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="628.6" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.03%)</title><rect x="625.6" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="628.6" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.03%)</title><rect x="625.6" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="628.6" y="686.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.03%)</title><rect x="625.6" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="628.6" y="670.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="626.0" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="629.0" y="702.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.03%)</title><rect x="626.4" y="691.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="629.4" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (260 samples, 8.88%)</title><rect x="626.8" y="739.0" width="104.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.8" y="750.0">java/lang/re..</text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (11 samples, 0.38%)</title><rect x="731.5" y="771.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (2 samples, 0.07%)</title><rect x="736.0" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.07%)</title><rect x="736.0" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (2 samples, 0.07%)</title><rect x="736.0" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.0" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getModifiers (1 samples, 0.03%)</title><rect x="736.8" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.8" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getName (2 samples, 0.07%)</title><rect x="737.2" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.2" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.03%)</title><rect x="738.0" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="741.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.14%)</title><rect x="738.4" y="819.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.4" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="740.0" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="740.0" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.0" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.calculateCapacity (1 samples, 0.03%)</title><rect x="740.0" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.isEmpty (1 samples, 0.03%)</title><rect x="740.4" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.4" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="740.8" y="819.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="743.8" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (41 samples, 1.40%)</title><rect x="741.2" y="835.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.2" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (5 samples, 0.17%)</title><rect x="741.6" y="819.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.6" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArg (2 samples, 0.07%)</title><rect x="742.8" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.03%)</title><rect x="743.2" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.2" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (14 samples, 0.48%)</title><rect x="743.6" y="819.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.6" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (9 samples, 0.31%)</title><rect x="749.3" y="819.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.3" y="830.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor5.invoke (4 samples, 0.14%)</title><rect x="749.3" y="803.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.3" y="814.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.17%)</title><rect x="750.9" y="803.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.9" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.03%)</title><rect x="752.9" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.9" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.38%)</title><rect x="753.3" y="819.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.3" y="830.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.38%)</title><rect x="753.3" y="803.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.3" y="814.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor2.invoke (9 samples, 0.31%)</title><rect x="753.3" y="787.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.3" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.aget (9 samples, 0.31%)</title><rect x="753.3" y="771.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.3" y="782.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor5.invoke (2 samples, 0.07%)</title><rect x="756.9" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.03%)</title><rect x="757.7" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (1 samples, 0.03%)</title><rect x="757.7" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.7" y="830.0"></text>
</g>
<g>
<title>clojure/lang/RestFn.invoke (1 samples, 0.03%)</title><rect x="758.1" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.1" y="862.0"></text>
</g>
<g>
<title>clojure/core$format.doInvoke (1 samples, 0.03%)</title><rect x="758.1" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.1" y="846.0"></text>
</g>
<g>
<title>clojure/core$format.invokeStatic (1 samples, 0.03%)</title><rect x="758.1" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.03%)</title><rect x="758.1" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.1" y="814.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.03%)</title><rect x="758.1" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.1" y="798.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.03%)</title><rect x="758.1" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.1" y="782.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.03%)</title><rect x="758.1" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.1" y="766.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (1 samples, 0.03%)</title><rect x="758.1" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.1" y="750.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.flags (1 samples, 0.03%)</title><rect x="758.1" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.1" y="734.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.parse (1 samples, 0.03%)</title><rect x="758.1" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.1" y="718.0"></text>
</g>
<g>
<title>clojure/lang/Var.get (15 samples, 0.51%)</title><rect x="758.5" y="851.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.5" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Var.deref (15 samples, 0.51%)</title><rect x="758.5" y="835.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.5" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Var.getThreadBinding (15 samples, 0.51%)</title><rect x="758.5" y="819.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.5" y="830.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap.entryAt (15 samples, 0.51%)</title><rect x="758.5" y="803.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.5" y="814.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$ArrayNode.find (4 samples, 0.14%)</title><rect x="758.5" y="787.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.5" y="798.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (4 samples, 0.14%)</title><rect x="758.5" y="771.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.5" y="782.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (2 samples, 0.07%)</title><rect x="758.5" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.5" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (2 samples, 0.07%)</title><rect x="758.5" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.5" y="750.0"></text>
</g>
<g>
<title>clojure/lang/Util.pcequiv (1 samples, 0.03%)</title><rect x="758.9" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.9" y="734.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (1 samples, 0.03%)</title><rect x="758.9" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.9" y="718.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (2 samples, 0.07%)</title><rect x="759.3" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.3" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Util.pcequiv (1 samples, 0.03%)</title><rect x="759.7" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.7" y="750.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (11 samples, 0.38%)</title><rect x="760.1" y="787.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.1" y="798.0"></text>
</g>
<g>
<title>clojure/lang/PersistentHashMap$BitmapIndexedNode.find (8 samples, 0.27%)</title><rect x="760.1" y="771.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.1" y="782.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (8 samples, 0.27%)</title><rect x="760.1" y="755.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.1" y="766.0"></text>
</g>
<g>
<title>clojure/lang/RT.baseLoader (1 samples, 0.03%)</title><rect x="763.0" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.0" y="750.0"></text>
</g>
<g>
<title>clojure/lang/Util.equiv (3 samples, 0.10%)</title><rect x="763.4" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.4" y="782.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="763.4" y="755.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="766.4" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="764.2" y="755.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="767.2" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Var.getRawRoot (1 samples, 0.03%)</title><rect x="764.6" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.6" y="862.0"></text>
</g>
<g>
<title>hammer/core$selectFromTable0.invoke (972 samples, 33.19%)</title><rect x="765.0" y="851.0" width="391.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.0" y="862.0">hammer/core$selectFromTable0.invoke</text>
</g>
<g>
<title>hammer/core$selectFromTable0.invokeStatic (972 samples, 33.19%)</title><rect x="765.0" y="835.0" width="391.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.0" y="846.0">hammer/core$selectFromTable0.invokeStatic</text>
</g>
<g>
<title>clojure/core$into_array.invoke (17 samples, 0.58%)</title><rect x="765.8" y="819.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.8" y="830.0"></text>
</g>
<g>
<title>clojure/core$into_array.invokeStatic (17 samples, 0.58%)</title><rect x="765.8" y="803.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.8" y="814.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (4 samples, 0.14%)</title><rect x="765.8" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.8" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (4 samples, 0.14%)</title><rect x="765.8" y="771.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.8" y="782.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (4 samples, 0.14%)</title><rect x="765.8" y="755.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.8" y="766.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (4 samples, 0.14%)</title><rect x="765.8" y="739.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.8" y="750.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (3 samples, 0.10%)</title><rect x="765.8" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.8" y="734.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="765.8" y="707.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="768.8" y="718.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqFrom (1 samples, 0.03%)</title><rect x="767.0" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.0" y="734.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqToTypedArray (13 samples, 0.44%)</title><rect x="767.4" y="787.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.4" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.set (13 samples, 0.44%)</title><rect x="767.4" y="771.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.4" y="782.0"></text>
</g>
<g>
<title>JVM_SetArrayElement (8 samples, 0.27%)</title><rect x="767.8" y="755.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="770.8" y="766.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::write_ref_field_pre_work(unsigned int*, oopDesc*) (2 samples, 0.07%)</title><rect x="769.0" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="772.0" y="750.0"></text>
</g>
<g>
<title>Reflection::array_set(jvalue*, arrayOopDesc*, int, BasicType, Thread*) (3 samples, 0.10%)</title><rect x="769.8" y="739.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="772.8" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_reflect_Array_set (1 samples, 0.03%)</title><rect x="771.0" y="755.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="774.0" y="766.0"></text>
</g>
<g>
<title>Reflection::array_set(jvalue*, arrayOopDesc*, int, BasicType, Thread*) (1 samples, 0.03%)</title><rect x="771.4" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="774.4" y="766.0"></text>
</g>
<g>
<title>Reflection::unbox_for_regular_object(oopDesc*, jvalue*) (2 samples, 0.07%)</title><rect x="771.8" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="774.8" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeInstanceMethod (149 samples, 5.09%)</title><rect x="772.6" y="819.0" width="60.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.6" y="830.0">clojur..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (72 samples, 2.46%)</title><rect x="773.8" y="803.0" width="29.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.8" y="814.0">cl..</text>
</g>
<g>
<title>java/lang/Class.getMethods (64 samples, 2.19%)</title><rect x="777.1" y="787.0" width="25.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.1" y="798.0">j..</text>
</g>
<g>
<title>java/lang/Class.copyMethods (61 samples, 2.08%)</title><rect x="777.1" y="771.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.1" y="782.0">j..</text>
</g>
<g>
<title>java/lang/Class.getReflectionFactory (1 samples, 0.03%)</title><rect x="777.9" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.9" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.copy (1 samples, 0.03%)</title><rect x="778.3" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.3" y="766.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (57 samples, 1.95%)</title><rect x="778.7" y="755.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.7" y="766.0">s..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (55 samples, 1.88%)</title><rect x="778.7" y="739.0" width="22.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.7" y="750.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (55 samples, 1.88%)</title><rect x="778.7" y="723.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.7" y="734.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="783.1" y="707.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="786.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="783.1" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="786.1" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="783.5" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="786.5" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.03%)</title><rect x="783.5" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="786.5" y="686.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="783.5" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.5" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (42 samples, 1.43%)</title><rect x="783.9" y="707.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.9" y="718.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (2 samples, 0.07%)</title><rect x="800.8" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (3 samples, 0.10%)</title><rect x="801.6" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.10%)</title><rect x="801.6" y="755.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (2 samples, 0.07%)</title><rect x="802.0" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.0" y="750.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (65 samples, 2.22%)</title><rect x="802.8" y="803.0" width="26.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.8" y="814.0">c..</text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (2 samples, 0.07%)</title><rect x="803.6" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.6" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArg (1 samples, 0.03%)</title><rect x="804.1" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.03%)</title><rect x="804.1" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.1" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (3 samples, 0.10%)</title><rect x="804.5" y="787.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.5" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (1 samples, 0.03%)</title><rect x="805.7" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.7" y="798.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.03%)</title><rect x="805.7" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.7" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (56 samples, 1.91%)</title><rect x="806.1" y="787.0" width="22.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.1" y="798.0">j..</text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (56 samples, 1.91%)</title><rect x="806.1" y="771.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.1" y="782.0">s..</text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor4.invoke (56 samples, 1.91%)</title><rect x="806.1" y="755.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.1" y="766.0">s..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.prepare (56 samples, 1.91%)</title><rect x="806.1" y="739.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.1" y="750.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (56 samples, 1.91%)</title><rect x="806.1" y="723.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.1" y="734.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/AsyncAutoCloseable.isClosed (1 samples, 0.03%)</title><rect x="806.1" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (42 samples, 1.43%)</title><rect x="806.5" y="707.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (42 samples, 1.43%)</title><rect x="806.5" y="691.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.5" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.process (39 samples, 1.33%)</title><rect x="806.5" y="675.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.&lt;init&gt; (1 samples, 0.03%)</title><rect x="806.5" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$LocalManualCache.getIfPresent (38 samples, 1.30%)</title><rect x="806.9" y="659.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.9" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.getIfPresent (38 samples, 1.30%)</title><rect x="806.9" y="643.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.9" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.get (11 samples, 0.38%)</title><rect x="806.9" y="627.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getLiveEntry (7 samples, 0.24%)</title><rect x="806.9" y="611.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getEntry (5 samples, 0.17%)</title><rect x="806.9" y="595.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.9" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.equivalent (4 samples, 0.14%)</title><rect x="806.9" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doEquivalent (4 samples, 0.14%)</title><rect x="806.9" y="563.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.9" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.equals (4 samples, 0.14%)</title><rect x="806.9" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.9" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.equals (1 samples, 0.03%)</title><rect x="808.1" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.1" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getFirst (1 samples, 0.03%)</title><rect x="808.5" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.isExpired (2 samples, 0.07%)</title><rect x="808.9" y="595.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.9" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.expiresAfterAccess (1 samples, 0.03%)</title><rect x="808.9" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.expiresAfterWrite (1 samples, 0.03%)</title><rect x="809.3" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.3" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.postReadCleanup (2 samples, 0.07%)</title><rect x="809.7" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.cleanUp (1 samples, 0.03%)</title><rect x="810.1" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.1" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.runLockedCleanup (1 samples, 0.03%)</title><rect x="810.1" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (1 samples, 0.03%)</title><rect x="810.1" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.recordRead (2 samples, 0.07%)</title><rect x="810.5" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.5" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.03%)</title><rect x="810.9" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.9" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$2.offer (1 samples, 0.03%)</title><rect x="810.9" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.hash (27 samples, 0.92%)</title><rect x="811.3" y="627.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.hash (27 samples, 0.92%)</title><rect x="811.3" y="611.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doHash (27 samples, 0.92%)</title><rect x="811.3" y="595.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.3" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.hashCode (15 samples, 0.51%)</title><rect x="811.3" y="579.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.3" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.hashCode (15 samples, 0.51%)</title><rect x="811.3" y="563.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.3" y="574.0"></text>
</g>
<g>
<title>java/util/Objects.hash (8 samples, 0.27%)</title><rect x="814.1" y="547.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (8 samples, 0.27%)</title><rect x="814.1" y="531.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="814.9" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (3 samples, 0.10%)</title><rect x="815.3" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.03%)</title><rect x="815.3" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.3" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList.size (1 samples, 0.03%)</title><rect x="815.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.3" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (2 samples, 0.07%)</title><rect x="815.7" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.7" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (2 samples, 0.07%)</title><rect x="815.7" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.7" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (2 samples, 0.07%)</title><rect x="816.5" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.5" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableSet$ArrayIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="816.9" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Boolean.hashCode (2 samples, 0.07%)</title><rect x="817.3" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.17%)</title><rect x="818.2" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.2" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (3 samples, 0.10%)</title><rect x="820.2" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.2" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (1 samples, 0.03%)</title><rect x="821.4" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.4" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="821.8" y="579.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="824.8" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (3 samples, 0.10%)</title><rect x="822.2" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (2 samples, 0.07%)</title><rect x="822.6" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (1 samples, 0.03%)</title><rect x="823.0" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.0" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (13 samples, 0.44%)</title><rect x="823.4" y="707.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.canProcess (1 samples, 0.03%)</title><rect x="824.2" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.2" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.canProcess (3 samples, 0.10%)</title><rect x="824.6" y="691.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.6" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (3 samples, 0.10%)</title><rect x="825.8" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.canProcess (2 samples, 0.07%)</title><rect x="827.0" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="702.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="827.8" y="691.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="830.8" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Modifier.isPublic (1 samples, 0.03%)</title><rect x="828.6" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.6" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.07%)</title><rect x="829.0" y="803.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.07%)</title><rect x="829.0" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.07%)</title><rect x="829.0" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.07%)</title><rect x="829.0" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.07%)</title><rect x="829.0" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.03%)</title><rect x="829.4" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="829.4" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.24%)</title><rect x="829.8" y="803.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.24%)</title><rect x="829.8" y="787.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (2 samples, 0.07%)</title><rect x="829.8" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.8" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.07%)</title><rect x="829.8" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.8" y="766.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (2 samples, 0.07%)</title><rect x="829.8" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.17%)</title><rect x="830.6" y="771.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.07%)</title><rect x="831.4" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="831.4" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="831.4" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.03%)</title><rect x="831.4" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="831.9" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.03%)</title><rect x="831.9" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="831.9" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="831.9" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.9" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="831.9" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$Box.get (1 samples, 0.03%)</title><rect x="832.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.execute (530 samples, 18.09%)</title><rect x="832.7" y="819.0" width="213.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.7" y="830.0">com/datastax/oss/driver/api/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (530 samples, 18.09%)</title><rect x="832.7" y="803.0" width="213.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.7" y="814.0">com/datastax/oss/driver/inte..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (526 samples, 17.96%)</title><rect x="832.7" y="787.0" width="211.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.7" y="798.0">com/datastax/oss/driver/inte..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (526 samples, 17.96%)</title><rect x="832.7" y="771.0" width="211.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.7" y="782.0">com/datastax/oss/driver/inte..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.process (328 samples, 11.20%)</title><rect x="832.7" y="755.0" width="132.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.7" y="766.0">com/datastax/oss..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.&lt;init&gt; (328 samples, 11.20%)</title><rect x="832.7" y="739.0" width="132.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.7" y="750.0">com/datastax/oss..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/context/DriverContext.getRetryPolicy (11 samples, 0.38%)</title><rect x="835.1" y="723.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getRetryPolicies (11 samples, 0.38%)</title><rect x="835.1" y="707.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (11 samples, 0.38%)</title><rect x="835.1" y="691.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.24%)</title><rect x="835.5" y="675.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (7 samples, 0.24%)</title><rect x="835.5" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (6 samples, 0.20%)</title><rect x="835.5" y="643.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.5" y="654.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="835.5" y="627.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="838.5" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toMessage (1 samples, 0.03%)</title><rect x="835.9" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getChannel (2 samples, 0.07%)</title><rect x="836.3" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="837.1" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.1" y="638.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="837.5" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="840.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="837.9" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.9" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="837.9" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="838.3" y="675.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="838.3" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.07%)</title><rect x="838.7" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.07%)</title><rect x="838.7" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getDuration (2 samples, 0.07%)</title><rect x="839.5" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (2 samples, 0.07%)</title><rect x="839.5" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.07%)</title><rect x="839.5" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="839.9" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.9" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getNettyOptions (2 samples, 0.07%)</title><rect x="840.3" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (2 samples, 0.07%)</title><rect x="840.3" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.3" y="718.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="840.3" y="691.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="843.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getRequestTracker (3 samples, 0.10%)</title><rect x="841.1" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (3 samples, 0.10%)</title><rect x="841.1" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.resolveExecutionProfile (5 samples, 0.17%)</title><rect x="842.3" y="723.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.3" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="842.7" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="842.7" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="845.7" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="842.7" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="845.7" y="686.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="842.7" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="845.7" y="670.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="842.7" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="845.7" y="654.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="842.7" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.7" y="638.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="842.7" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.7" y="622.0"></text>
</g>
<g>
<title>put_cred_rcu (1 samples, 0.03%)</title><rect x="842.7" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.7" y="606.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="842.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.7" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/config/DriverConfig.getDefaultProfile (3 samples, 0.10%)</title><rect x="843.1" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverConfig.getProfile (3 samples, 0.10%)</title><rect x="843.1" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.07%)</title><rect x="843.5" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toMessage (18 samples, 0.61%)</title><rect x="844.3" y="723.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getInt (4 samples, 0.14%)</title><rect x="846.0" y="707.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (3 samples, 0.10%)</title><rect x="846.0" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.10%)</title><rect x="846.0" y="675.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.03%)</title><rect x="846.8" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/854487022.linkToTargetMethod (1 samples, 0.03%)</title><rect x="847.2" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (1 samples, 0.03%)</title><rect x="847.2" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile$$Lambda$57/1981708431.get$Lambda (1 samples, 0.03%)</title><rect x="847.2" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.2" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile$$Lambda$57/1981708431.&lt;init&gt; (1 samples, 0.03%)</title><rect x="847.2" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.2" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getString (4 samples, 0.14%)</title><rect x="847.6" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (2 samples, 0.07%)</title><rect x="848.4" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.07%)</title><rect x="848.4" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.4" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getConsistencyLevelRegistry (1 samples, 0.03%)</title><rect x="849.2" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (1 samples, 0.03%)</title><rect x="849.2" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="849.2" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="849.2" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="849.2" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.2" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getProtocolVersion (2 samples, 0.07%)</title><rect x="849.6" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getChannelFactory (2 samples, 0.07%)</title><rect x="849.6" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.6" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (2 samples, 0.07%)</title><rect x="849.6" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="850.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="850.0" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="850.0" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="850.0" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.0" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getProtocolVersionRegistry (3 samples, 0.10%)</title><rect x="850.4" y="707.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (3 samples, 0.10%)</title><rect x="850.4" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="851.2" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="851.2" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="851.2" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="851.2" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.2" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.scheduleTimeout (6 samples, 0.20%)</title><rect x="851.6" y="723.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.6" y="734.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (6 samples, 0.20%)</title><rect x="851.6" y="707.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.6" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="852.8" y="691.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="855.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="852.8" y="675.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="855.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (2 samples, 0.07%)</title><rect x="853.2" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.2" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (2 samples, 0.07%)</title><rect x="853.2" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.2" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (2 samples, 0.07%)</title><rect x="853.2" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.2" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (2 samples, 0.07%)</title><rect x="853.2" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.2" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getKeyspace (3 samples, 0.10%)</title><rect x="854.0" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.0" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.10%)</title><rect x="854.0" y="707.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.0" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.10%)</title><rect x="854.0" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.0" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (3 samples, 0.10%)</title><rect x="854.0" y="675.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.10%)</title><rect x="854.0" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.0" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.write (2 samples, 0.07%)</title><rect x="854.4" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.4" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/throttling/PassThroughRequestThrottler.register (259 samples, 8.84%)</title><rect x="855.2" y="723.0" width="104.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.2" y="734.0">com/datastax..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.onThrottleReady (259 samples, 8.84%)</title><rect x="855.2" y="707.0" width="104.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.2" y="718.0">com/datastax..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.sendRequest (184 samples, 6.28%)</title><rect x="855.2" y="691.0" width="74.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.2" y="702.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.write (172 samples, 5.87%)</title><rect x="855.2" y="675.0" width="69.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.2" y="686.0">com/dat..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.writeAndFlush (172 samples, 5.87%)</title><rect x="855.2" y="659.0" width="69.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.2" y="670.0">com/dat..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.enqueue (169 samples, 5.77%)</title><rect x="855.2" y="643.0" width="68.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.2" y="654.0">com/dat..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.access$100 (164 samples, 5.60%)</title><rect x="855.6" y="627.0" width="66.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.6" y="638.0">com/dat..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (164 samples, 5.60%)</title><rect x="855.6" y="611.0" width="66.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.6" y="622.0">com/dat..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (158 samples, 5.39%)</title><rect x="855.6" y="595.0" width="63.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.6" y="606.0">io/nett..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (158 samples, 5.39%)</title><rect x="855.6" y="579.0" width="63.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.6" y="590.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (155 samples, 5.29%)</title><rect x="855.6" y="563.0" width="62.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.6" y="574.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (155 samples, 5.29%)</title><rect x="855.6" y="547.0" width="62.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.6" y="558.0">io/net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (155 samples, 5.29%)</title><rect x="855.6" y="531.0" width="62.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.6" y="542.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (151 samples, 5.16%)</title><rect x="857.2" y="515.0" width="60.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.2" y="526.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (150 samples, 5.12%)</title><rect x="857.6" y="499.0" width="60.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.6" y="510.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPollArrayWrapper_interrupt (1 samples, 0.03%)</title><rect x="857.6" y="483.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="860.6" y="494.0"></text>
</g>
<g>
<title>__write (149 samples, 5.09%)</title><rect x="858.0" y="483.0" width="60.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="861.0" y="494.0">__write</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="860.1" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.1" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="860.1" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.1" y="462.0"></text>
</g>
<g>
<title>ret_from_sys_call (1 samples, 0.03%)</title><rect x="860.5" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.5" y="478.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.14%)</title><rect x="860.9" y="467.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="863.9" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.10%)</title><rect x="860.9" y="451.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.9" y="462.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="861.7" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.7" y="446.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="862.1" y="451.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.1" y="462.0"></text>
</g>
<g>
<title>system_call_fastpath (138 samples, 4.71%)</title><rect x="862.5" y="467.0" width="55.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.5" y="478.0">syste..</text>
</g>
<g>
<title>fget_light (1 samples, 0.03%)</title><rect x="862.9" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="865.9" y="462.0"></text>
</g>
<g>
<title>sys_write (136 samples, 4.64%)</title><rect x="863.3" y="451.0" width="54.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.3" y="462.0">sys_w..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="863.7" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.7" y="446.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.07%)</title><rect x="864.1" y="435.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="867.1" y="446.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="864.9" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.9" y="446.0"></text>
</g>
<g>
<title>vfs_write (131 samples, 4.47%)</title><rect x="865.3" y="435.0" width="52.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.3" y="446.0">vfs_w..</text>
</g>
<g>
<title>do_sync_write (126 samples, 4.30%)</title><rect x="866.1" y="419.0" width="50.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="869.1" y="430.0">do_sy..</text>
</g>
<g>
<title>kill_fasync (1 samples, 0.03%)</title><rect x="866.5" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="869.5" y="414.0"></text>
</g>
<g>
<title>pipe_write (124 samples, 4.23%)</title><rect x="866.9" y="403.0" width="50.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.9" y="414.0">pipe_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="867.3" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.3" y="398.0"></text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.14%)</title><rect x="867.7" y="387.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="870.7" y="398.0"></text>
</g>
<g>
<title>__percpu_counter_add (1 samples, 0.03%)</title><rect x="868.9" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="871.9" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (108 samples, 3.69%)</title><rect x="869.3" y="387.0" width="43.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.3" y="398.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (106 samples, 3.62%)</title><rect x="869.7" y="371.0" width="42.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.7" y="382.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (106 samples, 3.62%)</title><rect x="869.7" y="355.0" width="42.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="872.7" y="366.0">_raw..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="912.4" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="915.4" y="382.0"></text>
</g>
<g>
<title>current_fs_time (1 samples, 0.03%)</title><rect x="912.8" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.8" y="398.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.14%)</title><rect x="913.2" y="387.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.2" y="398.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="913.2" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.2" y="382.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="913.2" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.2" y="366.0"></text>
</g>
<g>
<title>current_fs_time (1 samples, 0.03%)</title><rect x="913.6" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.6" y="382.0"></text>
</g>
<g>
<title>current_kernel_time (1 samples, 0.03%)</title><rect x="913.6" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.6" y="366.0"></text>
</g>
<g>
<title>update_time (2 samples, 0.07%)</title><rect x="914.0" y="371.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.0" y="382.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.07%)</title><rect x="914.0" y="355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="917.0" y="366.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="914.8" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.8" y="398.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="915.2" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.2" y="398.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (3 samples, 0.10%)</title><rect x="915.6" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.6" y="398.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="915.6" y="371.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="918.6" y="382.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="916.9" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.9" y="430.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="917.7" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="920.7" y="430.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (3 samples, 0.10%)</title><rect x="918.1" y="563.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.1" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (3 samples, 0.10%)</title><rect x="918.1" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (6 samples, 0.20%)</title><rect x="919.3" y="595.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (3 samples, 0.10%)</title><rect x="920.5" y="579.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/854487022.linkToTargetMethod (1 samples, 0.03%)</title><rect x="921.7" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (1 samples, 0.03%)</title><rect x="921.7" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$$Lambda$174/636921127.get$Lambda (1 samples, 0.03%)</title><rect x="921.7" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.10%)</title><rect x="922.1" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.1" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.newPromise (3 samples, 0.10%)</title><rect x="923.3" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.3" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.newPromise (3 samples, 0.10%)</title><rect x="923.3" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.3" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.&lt;init&gt; (3 samples, 0.10%)</title><rect x="923.3" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (1 samples, 0.03%)</title><rect x="924.1" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.1" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (1 samples, 0.03%)</title><rect x="924.5" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (1 samples, 0.03%)</title><rect x="924.5" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getChannel (7 samples, 0.24%)</title><rect x="924.9" y="675.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.9" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.next (7 samples, 0.24%)</title><rect x="924.9" y="659.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.9" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.next (7 samples, 0.24%)</title><rect x="924.9" y="643.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.9" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.getAvailableIds (3 samples, 0.10%)</title><rect x="925.7" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.getAvailableIds (3 samples, 0.10%)</title><rect x="925.7" y="611.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.getAvailableIds (3 samples, 0.10%)</title><rect x="925.7" y="595.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="926.5" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.preAcquireId (2 samples, 0.07%)</title><rect x="926.9" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.preAcquireId (2 samples, 0.07%)</title><rect x="926.9" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.preAcquire (2 samples, 0.07%)</title><rect x="926.9" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.07%)</title><rect x="926.9" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.9" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (4 samples, 0.14%)</title><rect x="927.7" y="675.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (4 samples, 0.14%)</title><rect x="927.7" y="659.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.7" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (4 samples, 0.14%)</title><rect x="927.7" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.7" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener0 (1 samples, 0.03%)</title><rect x="928.9" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/LoadBalancingPolicyWrapper.newQueryPlan (75 samples, 2.56%)</title><rect x="929.3" y="691.0" width="30.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.3" y="702.0">co..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.newQueryPlan (75 samples, 2.56%)</title><rect x="929.3" y="675.0" width="30.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.3" y="686.0">co..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy.getReplicas (53 samples, 1.81%)</title><rect x="931.4" y="659.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.4" y="670.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getMetadataManager (6 samples, 0.20%)</title><rect x="934.2" y="643.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.2" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (6 samples, 0.20%)</title><rect x="934.2" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.14%)</title><rect x="935.0" y="611.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.14%)</title><rect x="935.0" y="595.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.07%)</title><rect x="935.8" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="935.8" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.03%)</title><rect x="936.2" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.2" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.getRoutingKeyspace (10 samples, 0.34%)</title><rect x="936.6" y="643.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.6" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.get (2 samples, 0.07%)</title><rect x="939.8" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/DefaultMetadata.getTokenMap (1 samples, 0.03%)</title><rect x="940.6" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.03%)</title><rect x="940.6" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.6" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="940.6" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.6" y="622.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="940.6" y="595.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="943.6" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getReplicas (24 samples, 0.82%)</title><rect x="941.0" y="643.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.0" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getKeyspaceMap (11 samples, 0.38%)</title><rect x="941.0" y="627.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="944.0" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (11 samples, 0.38%)</title><rect x="941.0" y="611.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.0" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (11 samples, 0.38%)</title><rect x="941.0" y="595.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.0" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (8 samples, 0.27%)</title><rect x="941.8" y="579.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.8" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntryIterator.next (1 samples, 0.03%)</title><rect x="943.8" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.8" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntryIterator.next (1 samples, 0.03%)</title><rect x="943.8" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.8" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.nextNode (1 samples, 0.03%)</title><rect x="943.8" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.8" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (1 samples, 0.03%)</title><rect x="944.3" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.3" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="944.3" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.3" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.03%)</title><rect x="944.7" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="944.7" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="944.7" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (1 samples, 0.03%)</title><rect x="945.1" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.1" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (13 samples, 0.44%)</title><rect x="945.5" y="627.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.5" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (13 samples, 0.44%)</title><rect x="945.5" y="611.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.5" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (6 samples, 0.20%)</title><rect x="945.5" y="595.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (6 samples, 0.20%)</title><rect x="945.5" y="579.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.equals (4 samples, 0.14%)</title><rect x="946.3" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.binarySearch (7 samples, 0.24%)</title><rect x="947.9" y="595.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.9" y="606.0"></text>
</g>
<g>
<title>java/util/Collections.indexedBinarySearch (7 samples, 0.24%)</title><rect x="947.9" y="579.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.get (3 samples, 0.10%)</title><rect x="949.5" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.5" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getKeyspace (5 samples, 0.17%)</title><rect x="950.7" y="643.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.7" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.14%)</title><rect x="951.1" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.1" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.14%)</title><rect x="951.1" y="611.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.1" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (3 samples, 0.10%)</title><rect x="951.5" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (3 samples, 0.10%)</title><rect x="952.7" y="659.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.7" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.getInFlight (1 samples, 0.03%)</title><rect x="952.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.getInFlight (1 samples, 0.03%)</title><rect x="952.7" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.07%)</title><rect x="953.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.1" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.hashCode (2 samples, 0.07%)</title><rect x="953.1" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.1" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isUnhealthy (12 samples, 0.41%)</title><rect x="953.9" y="659.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.9" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isBusy (12 samples, 0.41%)</title><rect x="953.9" y="643.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.9" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (12 samples, 0.41%)</title><rect x="953.9" y="627.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.getInFlight (10 samples, 0.34%)</title><rect x="953.9" y="611.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.getInFlight (3 samples, 0.10%)</title><rect x="956.7" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.07%)</title><rect x="957.9" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.03%)</title><rect x="958.4" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.4" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.shuffleHead (1 samples, 0.03%)</title><rect x="958.8" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.8" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy.shuffleHead (1 samples, 0.03%)</title><rect x="958.8" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.shuffleHead (1 samples, 0.03%)</title><rect x="958.8" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.shuffleHead (1 samples, 0.03%)</title><rect x="958.8" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextInt (1 samples, 0.03%)</title><rect x="958.8" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.8" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.equals (1 samples, 0.03%)</title><rect x="958.8" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.8" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (1 samples, 0.03%)</title><rect x="959.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.2" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (1 samples, 0.03%)</title><rect x="959.2" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.2" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (1 samples, 0.03%)</title><rect x="959.6" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.24%)</title><rect x="960.0" y="723.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.0" y="734.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.14%)</title><rect x="960.0" y="707.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="963.0" y="718.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="960.0" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="963.0" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="960.4" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="960.8" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="963.8" y="702.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="961.2" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="964.2" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.07%)</title><rect x="961.6" y="707.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="964.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="962.4" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="965.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.17%)</title><rect x="962.8" y="723.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.8" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.17%)</title><rect x="962.8" y="707.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.8" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="962.8" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.8" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="962.8" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.07%)</title><rect x="963.2" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.07%)</title><rect x="964.0" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.0" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (198 samples, 6.76%)</title><rect x="964.8" y="755.0" width="79.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.8" y="766.0">com/datas..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (197 samples, 6.73%)</title><rect x="965.2" y="739.0" width="79.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.2" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (197 samples, 6.73%)</title><rect x="965.2" y="723.0" width="79.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.2" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (113 samples, 3.86%)</title><rect x="985.3" y="707.0" width="45.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.3" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (111 samples, 3.79%)</title><rect x="985.3" y="691.0" width="44.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="988.3" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (4 samples, 0.14%)</title><rect x="985.3" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.3" y="686.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (2 samples, 0.07%)</title><rect x="986.1" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 3.65%)</title><rect x="987.0" y="675.0" width="43.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.0" y="686.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (107 samples, 3.65%)</title><rect x="987.0" y="659.0" width="43.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.0" y="670.0">sun/..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (1 samples, 0.03%)</title><rect x="987.4" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="990.4" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (99 samples, 3.38%)</title><rect x="987.8" y="643.0" width="39.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="990.8" y="654.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.10%)</title><rect x="989.4" y="627.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="992.4" y="638.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="990.6" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="993.6" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.31%)</title><rect x="991.0" y="627.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="994.0" y="638.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="991.4" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.4" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="991.8" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="994.8" y="622.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="991.8" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.8" y="606.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.140] (1 samples, 0.03%)</title><rect x="992.2" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.2" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="992.2" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="995.2" y="606.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="992.2" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.2" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="992.2" y="563.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="995.2" y="574.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.03%)</title><rect x="992.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="995.2" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="992.2" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="995.2" y="542.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="992.2" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="995.2" y="526.0"></text>
</g>
<g>
<title>__pthread_getspecific (4 samples, 0.14%)</title><rect x="992.6" y="611.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="995.6" y="622.0"></text>
</g>
<g>
<title>pthread_getspecific@plt (1 samples, 0.03%)</title><rect x="994.2" y="611.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="997.2" y="622.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.27%)</title><rect x="994.6" y="627.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="997.6" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="994.6" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="997.6" y="622.0"></text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="995.0" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.0" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="995.0" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.0" y="606.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="995.4" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.4" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (5 samples, 0.17%)</title><rect x="995.8" y="611.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.8" y="622.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.17%)</title><rect x="995.8" y="595.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.8" y="606.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.14%)</title><rect x="996.2" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.2" y="590.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="996.6" y="563.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.6" y="574.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="997.0" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1000.0" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (1 samples, 0.03%)</title><rect x="997.4" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.4" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_wait (64 samples, 2.19%)</title><rect x="997.8" y="627.0" width="25.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1000.8" y="638.0">_..</text>
</g>
<g>
<title>auditsys (1 samples, 0.03%)</title><rect x="1003.5" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.5" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1003.5" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1006.5" y="606.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1003.9" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.9" y="622.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.17%)</title><rect x="1004.3" y="611.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.3" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.14%)</title><rect x="1004.3" y="595.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1007.3" y="606.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.03%)</title><rect x="1005.9" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1008.9" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (43 samples, 1.47%)</title><rect x="1006.3" y="611.0" width="17.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.3" y="622.0"></text>
</g>
<g>
<title>sys_futex (43 samples, 1.47%)</title><rect x="1006.3" y="595.0" width="17.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.3" y="606.0"></text>
</g>
<g>
<title>do_futex (42 samples, 1.43%)</title><rect x="1006.3" y="579.0" width="16.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.3" y="590.0"></text>
</g>
<g>
<title>futex_wait (41 samples, 1.40%)</title><rect x="1006.3" y="563.0" width="16.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1009.3" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 1.13%)</title><rect x="1007.1" y="547.0" width="13.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.1" y="558.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="1007.5" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.5" y="542.0"></text>
</g>
<g>
<title>schedule (31 samples, 1.06%)</title><rect x="1007.9" y="531.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.9" y="542.0"></text>
</g>
<g>
<title>__schedule (31 samples, 1.06%)</title><rect x="1007.9" y="515.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1010.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (31 samples, 1.06%)</title><rect x="1007.9" y="499.0" width="12.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.9" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.17%)</title><rect x="1020.4" y="547.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1023.4" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1021.6" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.6" y="542.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="1022.0" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.0" y="542.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1022.4" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.4" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1022.8" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.8" y="574.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1023.2" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.2" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="1023.6" y="627.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1026.6" y="638.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.03%)</title><rect x="1024.8" y="627.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1027.8" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.10%)</title><rect x="1025.2" y="627.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1028.2" y="638.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.07%)</title><rect x="1026.4" y="627.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.4" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1027.2" y="627.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1030.2" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="1027.6" y="643.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1030.6" y="654.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="1028.0" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1031.0" y="654.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.03%)</title><rect x="1028.0" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1031.0" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.14%)</title><rect x="1028.4" y="643.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1031.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (2 samples, 0.07%)</title><rect x="1030.1" y="691.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.07%)</title><rect x="1030.1" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (34 samples, 1.16%)</title><rect x="1030.9" y="707.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.9" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (4 samples, 0.14%)</title><rect x="1044.6" y="787.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (4 samples, 0.14%)</title><rect x="1044.6" y="771.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/type/reflect/GenericType.equals (4 samples, 0.14%)</title><rect x="1044.6" y="755.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.6" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/reflect/TypeToken.equals (2 samples, 0.07%)</title><rect x="1045.4" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPreparedStatement.bind (9 samples, 0.31%)</title><rect x="1046.2" y="819.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.2" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/data/ValuesHelper.encodePreparedValues (9 samples, 0.31%)</title><rect x="1046.2" y="803.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.2" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (3 samples, 0.10%)</title><rect x="1047.8" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (3 samples, 0.10%)</title><rect x="1047.8" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="1047.8" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1047.8" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1047.8" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (2 samples, 0.07%)</title><rect x="1048.2" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Bits.putLong (2 samples, 0.07%)</title><rect x="1048.2" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Bits.putLongB (2 samples, 0.07%)</title><rect x="1048.2" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer._put (1 samples, 0.03%)</title><rect x="1048.6" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/registry/CachingCodecRegistry.codecFor (2 samples, 0.07%)</title><rect x="1049.0" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.0" y="798.0"></text>
</g>
<g>
<title>hammer/core$getSelectStatement.invoke (238 samples, 8.13%)</title><rect x="1049.8" y="819.0" width="95.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.8" y="830.0">hammer/core..</text>
</g>
<g>
<title>hammer/core$getSelectStatement.invokeStatic (238 samples, 8.13%)</title><rect x="1049.8" y="803.0" width="95.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.8" y="814.0">hammer/core..</text>
</g>
<g>
<title>clojure/lang/Reflector.invokeNoArgInstanceMember (180 samples, 6.15%)</title><rect x="1049.8" y="787.0" width="72.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.8" y="798.0">clojure/..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (139 samples, 4.75%)</title><rect x="1050.2" y="771.0" width="56.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.2" y="782.0">cloju..</text>
</g>
<g>
<title>java/lang/Class.getMethods (109 samples, 3.72%)</title><rect x="1060.7" y="755.0" width="43.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.7" y="766.0">java..</text>
</g>
<g>
<title>java/lang/Class.copyMethods (104 samples, 3.55%)</title><rect x="1060.7" y="739.0" width="41.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.7" y="750.0">jav..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (2 samples, 0.07%)</title><rect x="1062.7" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.7" y="734.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (97 samples, 3.31%)</title><rect x="1063.5" y="723.0" width="39.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.5" y="734.0">sun..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (94 samples, 3.21%)</title><rect x="1063.5" y="707.0" width="37.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.5" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (94 samples, 3.21%)</title><rect x="1063.5" y="691.0" width="37.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.5" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (76 samples, 2.59%)</title><rect x="1070.8" y="675.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.8" y="686.0">ja..</text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (3 samples, 0.10%)</title><rect x="1101.4" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.4" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1102.2" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1105.2" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1102.2" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1105.2" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1102.2" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1105.2" y="670.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.2" y="654.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1105.2" y="638.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1102.2" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1105.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (5 samples, 0.17%)</title><rect x="1102.6" y="739.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1105.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (5 samples, 0.17%)</title><rect x="1102.6" y="723.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (1 samples, 0.03%)</title><rect x="1104.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.2" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (2 samples, 0.07%)</title><rect x="1104.6" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.07%)</title><rect x="1105.4" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (2 samples, 0.07%)</title><rect x="1105.4" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.07%)</title><rect x="1105.4" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.07%)</title><rect x="1105.4" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.4" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="1105.8" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.8" y="702.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (40 samples, 1.37%)</title><rect x="1106.2" y="771.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.2" y="782.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (1 samples, 0.03%)</title><rect x="1106.2" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.2" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1106.2" y="739.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1109.2" y="750.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (3 samples, 0.10%)</title><rect x="1106.6" y="755.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.6" y="766.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.03%)</title><rect x="1107.0" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.0" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="1107.4" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1110.4" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (36 samples, 1.23%)</title><rect x="1107.8" y="755.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.8" y="766.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (36 samples, 1.23%)</title><rect x="1107.8" y="739.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.8" y="750.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (36 samples, 1.23%)</title><rect x="1107.8" y="723.0" width="14.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatementBuilder.build (1 samples, 0.03%)</title><rect x="1107.8" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1110.8" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.build (35 samples, 1.19%)</title><rect x="1108.2" y="707.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatementBuilder.build (2 samples, 0.07%)</title><rect x="1108.2" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.2" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1108.2" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.03%)</title><rect x="1108.6" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.6" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList.size (1 samples, 0.03%)</title><rect x="1108.6" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.6" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.builder (33 samples, 1.13%)</title><rect x="1109.0" y="691.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.0" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatement.builder (2 samples, 0.07%)</title><rect x="1109.4" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.4" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatementBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1109.4" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1112.4" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/StatementBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1109.4" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.4" y="654.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1109.8" y="627.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1112.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.asCql (30 samples, 1.02%)</title><rect x="1110.2" y="675.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.append (19 samples, 0.65%)</title><rect x="1110.6" y="659.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.6" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultRelation.appendTo (3 samples, 0.10%)</title><rect x="1111.4" y="643.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.4" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/lhs/ColumnLeftOperand.appendTo (3 samples, 0.10%)</title><rect x="1111.4" y="627.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.4" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (3 samples, 0.10%)</title><rect x="1111.4" y="611.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.4" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (3 samples, 0.10%)</title><rect x="1111.4" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.4" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (1 samples, 0.03%)</title><rect x="1112.2" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1112.2" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1112.2" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1112.2" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1112.2" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.2" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="1112.2" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.2" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="1112.2" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.2" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/ColumnSelector.appendTo (5 samples, 0.17%)</title><rect x="1112.6" y="643.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.6" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (2 samples, 0.07%)</title><rect x="1112.6" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.6" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (2 samples, 0.07%)</title><rect x="1112.6" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.6" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (1 samples, 0.03%)</title><rect x="1113.1" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.1" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (1 samples, 0.03%)</title><rect x="1113.1" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.1" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (1 samples, 0.03%)</title><rect x="1113.1" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="1113.1" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.10%)</title><rect x="1113.5" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.5" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.10%)</title><rect x="1113.5" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.5" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.10%)</title><rect x="1113.5" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableList.iterator (3 samples, 0.10%)</title><rect x="1114.7" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableList.iterator (3 samples, 0.10%)</title><rect x="1114.7" y="627.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Iterators.singletonIterator (3 samples, 0.10%)</title><rect x="1114.7" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Iterators$9.&lt;init&gt; (3 samples, 0.10%)</title><rect x="1114.7" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.20%)</title><rect x="1115.9" y="643.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.9" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.20%)</title><rect x="1115.9" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.9" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.17%)</title><rect x="1115.9" y="611.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.9" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (2 samples, 0.07%)</title><rect x="1116.3" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="1117.1" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.1" y="606.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1117.1" y="579.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1120.1" y="590.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1117.5" y="595.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.03%)</title><rect x="1117.9" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.qualify (10 samples, 0.34%)</title><rect x="1118.3" y="659.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.3" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (6 samples, 0.20%)</title><rect x="1118.3" y="643.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (6 samples, 0.20%)</title><rect x="1118.3" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (3 samples, 0.10%)</title><rect x="1118.3" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (2 samples, 0.07%)</title><rect x="1118.7" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.7" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (2 samples, 0.07%)</title><rect x="1118.7" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="1118.7" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (2 samples, 0.07%)</title><rect x="1119.5" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.5" y="622.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1120.3" y="611.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1123.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.14%)</title><rect x="1120.7" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.7" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.14%)</title><rect x="1120.7" y="627.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getChars (4 samples, 0.14%)</title><rect x="1120.7" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.7" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.selectFrom (20 samples, 0.68%)</title><rect x="1122.3" y="787.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (9 samples, 0.31%)</title><rect x="1122.3" y="771.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (6 samples, 0.20%)</title><rect x="1122.3" y="755.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (5 samples, 0.17%)</title><rect x="1122.3" y="739.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (3 samples, 0.10%)</title><rect x="1122.3" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.07%)</title><rect x="1123.5" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.07%)</title><rect x="1123.5" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1123.9" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1123.9" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.9" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="1123.9" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1124.3" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.10%)</title><rect x="1124.7" y="755.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.10%)</title><rect x="1124.7" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="1124.7" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="1124.7" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.7" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="1124.7" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.7" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="1125.1" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.1" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="1125.5" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.selectFrom (11 samples, 0.38%)</title><rect x="1125.9" y="771.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.9" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.selectFrom (11 samples, 0.38%)</title><rect x="1125.9" y="755.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.9" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.&lt;init&gt; (11 samples, 0.38%)</title><rect x="1125.9" y="739.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.&lt;init&gt; (11 samples, 0.38%)</title><rect x="1125.9" y="723.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.9" y="734.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (3 samples, 0.10%)</title><rect x="1129.2" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/relation/ArithmeticRelationBuilder.isEqualTo (2 samples, 0.07%)</title><rect x="1130.4" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.4" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultColumnRelationBuilder$Fluent.build (2 samples, 0.07%)</title><rect x="1130.4" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.4" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultColumnRelationBuilder$Fluent.build (2 samples, 0.07%)</title><rect x="1130.4" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.4" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultColumnRelationBuilder.build (2 samples, 0.07%)</title><rect x="1130.4" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultColumnRelationBuilder.build (2 samples, 0.07%)</title><rect x="1130.4" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/lhs/ColumnLeftOperand.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1130.4" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/relation/OngoingWhereClause.whereColumn (15 samples, 0.51%)</title><rect x="1131.2" y="787.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.2" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (8 samples, 0.27%)</title><rect x="1131.2" y="771.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.2" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isDoubleQuoted (2 samples, 0.07%)</title><rect x="1131.2" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isQuoted (2 samples, 0.07%)</title><rect x="1131.2" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="1131.6" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (6 samples, 0.20%)</title><rect x="1132.0" y="755.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (5 samples, 0.17%)</title><rect x="1132.0" y="739.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (4 samples, 0.14%)</title><rect x="1132.0" y="723.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1133.6" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1133.6" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.6" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="1133.6" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1134.0" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/relation/OngoingWhereClause.whereColumn (7 samples, 0.24%)</title><rect x="1134.4" y="771.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.4" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/relation/DefaultColumnRelationBuilder$Fluent.&lt;init&gt; (7 samples, 0.24%)</title><rect x="1134.4" y="755.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.4" y="766.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1136.4" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1139.4" y="750.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1136.8" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1139.8" y="750.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1136.8" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1139.8" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1136.8" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1139.8" y="718.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1136.8" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1136.8" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1139.8" y="686.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1136.8" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1139.8" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/select/OngoingSelection.column (21 samples, 0.72%)</title><rect x="1137.2" y="787.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.2" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (2 samples, 0.07%)</title><rect x="1137.2" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.2" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (2 samples, 0.07%)</title><rect x="1137.2" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (2 samples, 0.07%)</title><rect x="1137.2" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (2 samples, 0.07%)</title><rect x="1137.2" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.2" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/select/OngoingSelection.column (19 samples, 0.65%)</title><rect x="1138.0" y="771.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.0" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/select/Selector.column (6 samples, 0.20%)</title><rect x="1138.0" y="755.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/ColumnSelector.&lt;init&gt; (6 samples, 0.20%)</title><rect x="1138.0" y="739.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/ColumnSelector.&lt;init&gt; (6 samples, 0.20%)</title><rect x="1138.0" y="723.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkNotNull (6 samples, 0.20%)</title><rect x="1138.0" y="707.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.selector (13 samples, 0.44%)</title><rect x="1140.4" y="755.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.4" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/ImmutableCollections.append (4 samples, 0.14%)</title><rect x="1140.4" y="739.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$Builder.add (2 samples, 0.07%)</title><rect x="1140.9" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.9" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.builder (1 samples, 0.03%)</title><rect x="1141.7" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.7" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$Builder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.7" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.7" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$Builder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.7" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.7" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableCollection$Builder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.7" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.7" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.7" y="670.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.03%)</title><rect x="1141.7" y="643.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1144.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.withSelectors (7 samples, 0.24%)</title><rect x="1142.1" y="739.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultSelect.&lt;init&gt; (6 samples, 0.20%)</title><rect x="1142.5" y="723.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkArgument (1 samples, 0.03%)</title><rect x="1144.1" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1144.1" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.1" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.set (1 samples, 0.03%)</title><rect x="1144.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.5" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.equals (2 samples, 0.07%)</title><rect x="1144.9" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Lists.equalsImpl (2 samples, 0.07%)</title><rect x="1144.9" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.9" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPreparedStatement.bind (1 samples, 0.03%)</title><rect x="1144.9" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.9" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Preconditions.checkNotNull (1 samples, 0.03%)</title><rect x="1145.3" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.decode (1 samples, 0.03%)</title><rect x="1145.3" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.3" y="702.0"></text>
</g>
<g>
<title>java/util/UUID.fromString (27 samples, 0.92%)</title><rect x="1145.7" y="819.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.decode (13 samples, 0.44%)</title><rect x="1146.9" y="803.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (10 samples, 0.34%)</title><rect x="1146.9" y="787.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (9 samples, 0.31%)</title><rect x="1146.9" y="771.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.07%)</title><rect x="1149.3" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.07%)</title><rect x="1149.3" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.3" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.07%)</title><rect x="1149.3" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="1150.1" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.03%)</title><rect x="1150.5" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="1150.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="1151.3" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1151.7" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.7" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1151.7" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.split (11 samples, 0.38%)</title><rect x="1152.1" y="803.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.split (11 samples, 0.38%)</title><rect x="1152.1" y="787.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="1152.5" y="771.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.5" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="1153.7" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.7" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.next (1 samples, 0.03%)</title><rect x="1153.7" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.hasNext (2 samples, 0.07%)</title><rect x="1154.1" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.1" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.14%)</title><rect x="1155.0" y="771.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (4 samples, 0.14%)</title><rect x="1155.0" y="755.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (4 samples, 0.14%)</title><rect x="1155.0" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.14%)</title><rect x="1155.0" y="723.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.0" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="1156.2" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.2" y="718.0"></text>
</g>
<g>
<title>start_thread (83 samples, 2.83%)</title><rect x="1156.6" y="995.0" width="33.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1159.6" y="1006.0">st..</text>
</g>
<g>
<title>java_start(Thread*) (83 samples, 2.83%)</title><rect x="1156.6" y="979.0" width="33.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1159.6" y="990.0">ja..</text>
</g>
<g>
<title>ConcurrentG1RefineThread::run() (2 samples, 0.07%)</title><rect x="1156.6" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.6" y="974.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::run_young_rs_sampling() (2 samples, 0.07%)</title><rect x="1156.6" y="947.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.6" y="958.0"></text>
</g>
<g>
<title>YoungList::rs_length_sampling_next() (2 samples, 0.07%)</title><rect x="1156.6" y="931.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.6" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1156.6" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="926.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1156.6" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.6" y="910.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.03%)</title><rect x="1157.0" y="915.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.0" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (58 samples, 1.98%)</title><rect x="1157.4" y="963.0" width="23.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.4" y="974.0">G..</text>
</g>
<g>
<title>G1ParCleanupCTTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1157.4" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.4" y="958.0"></text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (10 samples, 0.34%)</title><rect x="1157.8" y="947.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.8" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (10 samples, 0.34%)</title><rect x="1157.8" y="931.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.8" y="942.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.17%)</title><rect x="1157.8" y="915.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.8" y="926.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.17%)</title><rect x="1159.8" y="915.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1162.8" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) [clone .part.432] (45 samples, 1.54%)</title><rect x="1161.8" y="947.0" width="18.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.8" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (36 samples, 1.23%)</title><rect x="1161.8" y="931.0" width="14.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.8" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1161.8" y="915.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.8" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.10%)</title><rect x="1162.2" y="915.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.2" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1163.0" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.0" y="910.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.03%)</title><rect x="1163.0" y="883.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1166.0" y="894.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 0.20%)</title><rect x="1163.4" y="915.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.4" y="926.0"></text>
</g>
<g>
<title>SpinPause (26 samples, 0.89%)</title><rect x="1165.8" y="915.0" width="10.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1168.8" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (7 samples, 0.24%)</title><rect x="1176.3" y="931.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.3" y="942.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="1176.3" y="915.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.3" y="926.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.03%)</title><rect x="1176.3" y="899.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.3" y="910.0"></text>
</g>
<g>
<title>G1KlassScanClosure::do_klass(Klass*) (1 samples, 0.03%)</title><rect x="1176.3" y="883.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.3" y="894.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(OopClosure*, OopClosure*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1176.7" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.7" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1176.7" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.7" y="910.0"></text>
</g>
<g>
<title>Dictionary::roots_oops_do(OopClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1176.7" y="883.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.7" y="894.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopClosure*) (2 samples, 0.07%)</title><rect x="1177.1" y="915.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.1" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (3 samples, 0.10%)</title><rect x="1177.9" y="915.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (3 samples, 0.10%)</title><rect x="1177.9" y="899.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.9" y="910.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.03%)</title><rect x="1177.9" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.9" y="894.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.03%)</title><rect x="1177.9" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.9" y="878.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.03%)</title><rect x="1177.9" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.9" y="862.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.03%)</title><rect x="1177.9" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.9" y="846.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="1178.3" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.3" y="894.0"></text>
</g>
<g>
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (1 samples, 0.03%)</title><rect x="1178.3" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.3" y="878.0"></text>
</g>
<g>
<title>BufferingOopClosure::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1178.3" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.3" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1178.7" y="883.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.7" y="894.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="1178.7" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (2 samples, 0.07%)</title><rect x="1179.1" y="931.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.1" y="942.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (2 samples, 0.07%)</title><rect x="1179.1" y="915.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (1 samples, 0.03%)</title><rect x="1179.1" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.1" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (1 samples, 0.03%)</title><rect x="1179.1" y="883.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.1" y="894.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer_helper(CardTableEntryClosure*, unsigned int, BufferNode*) (1 samples, 0.03%)</title><rect x="1179.1" y="867.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.1" y="878.0"></text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="1179.1" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.1" y="862.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) [clone .part.174] (1 samples, 0.03%)</title><rect x="1179.1" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.1" y="846.0"></text>
</g>
<g>
<title>HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*) (1 samples, 0.03%)</title><rect x="1179.1" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.1" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scanRS(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="1179.5" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.5" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::collection_set_iterate_from(HeapRegion*, HeapRegionClosure*) (1 samples, 0.03%)</title><rect x="1179.5" y="883.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.5" y="894.0"></text>
</g>
<g>
<title>HeapRegionRemSet::iter_is_complete() (1 samples, 0.03%)</title><rect x="1179.5" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.5" y="878.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.07%)</title><rect x="1179.9" y="947.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.9" y="958.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.07%)</title><rect x="1179.9" y="931.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="1179.9" y="915.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1182.9" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="1179.9" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1179.9" y="883.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.9" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1179.9" y="867.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.9" y="878.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.03%)</title><rect x="1179.9" y="851.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.9" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1179.9" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.9" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1179.9" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.9" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1179.9" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="1180.3" y="915.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1183.3" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="1180.3" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.3" y="910.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1180.3" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1183.3" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1180.3" y="867.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.3" y="878.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1180.3" y="851.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.3" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1180.3" y="835.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.3" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1180.3" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1183.3" y="830.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1180.3" y="803.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.3" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1180.3" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.3" y="798.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (19 samples, 0.65%)</title><rect x="1180.7" y="963.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.7" y="974.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 0.65%)</title><rect x="1180.7" y="947.0" width="7.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.7" y="958.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.55%)</title><rect x="1180.7" y="931.0" width="6.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.7" y="942.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (12 samples, 0.41%)</title><rect x="1180.7" y="915.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.7" y="926.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (12 samples, 0.41%)</title><rect x="1180.7" y="899.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.7" y="910.0"></text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.03%)</title><rect x="1180.7" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.7" y="894.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.03%)</title><rect x="1180.7" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.7" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1180.7" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.7" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1180.7" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.7" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1180.7" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.7" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.03%)</title><rect x="1180.7" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.7" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::JsrSet::JsrSet(Arena*, int) (1 samples, 0.03%)</title><rect x="1180.7" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.7" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (6 samples, 0.20%)</title><rect x="1181.1" y="883.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.1" y="894.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.07%)</title><rect x="1181.1" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.1" y="878.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.07%)</title><rect x="1181.1" y="851.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="862.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.03%)</title><rect x="1181.1" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.1" y="846.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.03%)</title><rect x="1181.1" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.1" y="830.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.03%)</title><rect x="1181.1" y="803.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1181.1" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.1" y="798.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1181.1" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.03%)</title><rect x="1181.5" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.5" y="846.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.03%)</title><rect x="1181.5" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.14%)</title><rect x="1181.9" y="867.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.03%)</title><rect x="1181.9" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1181.9" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.9" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.07%)</title><rect x="1182.3" y="851.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1182.7" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1182.7" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1182.7" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="1182.7" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1182.7" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.03%)</title><rect x="1182.7" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.03%)</title><rect x="1182.7" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.03%)</title><rect x="1182.7" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1183.2" y="851.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.2" y="862.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.07%)</title><rect x="1183.6" y="883.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.03%)</title><rect x="1183.6" y="867.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1183.6" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>TypeLong::make(long, long, int) (1 samples, 0.03%)</title><rect x="1183.6" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (1 samples, 0.03%)</title><rect x="1184.0" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1184.0" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.0" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="1184.0" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1184.4" y="883.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1184.4" y="867.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.4" y="878.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.03%)</title><rect x="1184.4" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;int&gt;::grow(int) (1 samples, 0.03%)</title><rect x="1184.4" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1184.8" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1184.8" y="835.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1184.8" y="819.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1184.8" y="803.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.8" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.8" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.8" y="755.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.8" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.8" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.8" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.8" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.8" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.8" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.8" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.8" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.8" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.8" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.8" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.8" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.8" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.8" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.8" y="531.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.8" y="515.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="526.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1184.8" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="510.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1184.8" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.8" y="494.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1184.8" y="467.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.8" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1184.8" y="451.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1184.8" y="435.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.8" y="446.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1184.8" y="419.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="430.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1184.8" y="403.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.8" y="414.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1184.8" y="387.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.8" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1184.8" y="371.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.8" y="382.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="1184.8" y="355.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="366.0"></text>
</g>
<g>
<title>ciField::will_link(ciInstanceKlass*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1184.8" y="339.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.8" y="350.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="1184.8" y="323.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.8" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.03%)</title><rect x="1184.8" y="307.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.8" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.03%)</title><rect x="1184.8" y="291.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.2" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.2" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.2" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.2" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.2" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.2" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.2" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.2" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.2" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.2" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.2" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.2" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.2" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1185.2" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.2" y="606.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1185.2" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="590.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1185.2" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="574.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.03%)</title><rect x="1185.2" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="558.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (4 samples, 0.14%)</title><rect x="1185.6" y="915.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="926.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (4 samples, 0.14%)</title><rect x="1185.6" y="899.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.14%)</title><rect x="1185.6" y="883.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.03%)</title><rect x="1185.6" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.03%)</title><rect x="1185.6" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.03%)</title><rect x="1185.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.6" y="846.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.03%)</title><rect x="1185.6" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="830.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.03%)</title><rect x="1185.6" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.6" y="814.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (3 samples, 0.10%)</title><rect x="1186.0" y="867.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (3 samples, 0.10%)</title><rect x="1186.0" y="851.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="862.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (2 samples, 0.07%)</title><rect x="1186.0" y="835.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="846.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (2 samples, 0.07%)</title><rect x="1186.0" y="819.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (2 samples, 0.07%)</title><rect x="1186.0" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="814.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.03%)</title><rect x="1186.8" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="846.0"></text>
</g>
<g>
<title>CompilerOracle::has_option_string(methodHandle, char const*) (1 samples, 0.03%)</title><rect x="1186.8" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>CompileQueue::get() (3 samples, 0.10%)</title><rect x="1187.2" y="931.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.2" y="942.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (3 samples, 0.10%)</title><rect x="1187.2" y="915.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.2" y="926.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (3 samples, 0.10%)</title><rect x="1187.2" y="899.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.2" y="910.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (2 samples, 0.07%)</title><rect x="1187.2" y="883.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="894.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.03%)</title><rect x="1187.2" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.2" y="878.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.03%)</title><rect x="1187.6" y="867.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="1187.6" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>nmethod::is_nmethod() const (1 samples, 0.03%)</title><rect x="1188.0" y="883.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.10%)</title><rect x="1188.4" y="963.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="974.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.10%)</title><rect x="1188.4" y="947.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.4" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (1 samples, 0.03%)</title><rect x="1188.4" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="942.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (1 samples, 0.03%)</title><rect x="1188.4" y="915.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1191.4" y="926.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.07%)</title><rect x="1188.8" y="931.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.8" y="942.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.07%)</title><rect x="1188.8" y="915.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.8" y="926.0"></text>
</g>
<g>
<title>VM_BulkRevokeBias::doit() (1 samples, 0.03%)</title><rect x="1188.8" y="899.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.8" y="910.0"></text>
</g>
<g>
<title>bulk_revoke_or_rebias_at_safepoint(oopDesc*, bool, bool, JavaThread*) (1 samples, 0.03%)</title><rect x="1188.8" y="883.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1191.8" y="894.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) [clone .part.164] (1 samples, 0.03%)</title><rect x="1188.8" y="867.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1191.8" y="878.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 0.03%)</title><rect x="1188.8" y="851.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.8" y="862.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.03%)</title><rect x="1188.8" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>VM_G1IncCollectionPause::doit() (1 samples, 0.03%)</title><rect x="1189.2" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1189.2" y="883.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(EvacuationInfo&amp;) (1 samples, 0.03%)</title><rect x="1189.2" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::process_discovered_references(unsigned int) (1 samples, 0.03%)</title><rect x="1189.2" y="851.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="1189.2" y="835.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.03%)</title><rect x="1189.2" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.03%)</title><rect x="1189.2" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1189.2" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.03%)</title><rect x="1189.2" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1189.2" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1189.2" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1189.2" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.2" y="734.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="974.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.03%)</title><rect x="1189.6" y="947.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.6" y="958.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.03%)</title><rect x="1189.6" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.6" y="942.0"></text>
</g>
</g>
</svg>
