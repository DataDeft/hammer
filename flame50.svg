<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (4,488 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.02%)</title><rect x="10.0" y="1027.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="10.0" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::write_ref_array_work(MemRegion) (1 samples, 0.02%)</title><rect x="10.0" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::invalidate(MemRegion, bool) (1 samples, 0.02%)</title><rect x="10.0" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.11%)</title><rect x="10.3" y="1027.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.3" y="1038.0"></text>
</g>
<g>
<title>BarrierSet::static_write_ref_array_post(HeapWord*, unsigned long) (2 samples, 0.04%)</title><rect x="10.3" y="1011.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="1022.0"></text>
</g>
<g>
<title>BarrierSet::write_ref_array(HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="10.8" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1022.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::invalidate(MemRegion, bool) (1 samples, 0.02%)</title><rect x="10.8" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.8" y="1006.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.02%)</title><rect x="11.1" y="1011.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.1" y="1022.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="11.3" y="1011.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="14.3" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="11.6" y="1027.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.6" y="1038.0"></text>
</g>
<g>
<title>clojure/lang/RT.count (1 samples, 0.02%)</title><rect x="11.8" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="1038.0"></text>
</g>
<g>
<title>clojure/lang/RT.countFrom (1 samples, 0.02%)</title><rect x="11.8" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="1022.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.02%)</title><rect x="11.8" y="995.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="14.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,302 samples, 95.86%)</title><rect x="12.1" y="1027.0" width="1131.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.1" y="1038.0">java/lang/Thread.run</text>
</g>
<g>
<title>clojure/lang/AFn.run (14 samples, 0.31%)</title><rect x="12.1" y="1011.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.1" y="1022.0"></text>
</g>
<g>
<title>clojure/core/async/impl/concurrent$counted_thread_factory$reify__736$fn__737.invoke (14 samples, 0.31%)</title><rect x="12.1" y="995.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.31%)</title><rect x="12.1" y="979.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.31%)</title><rect x="12.1" y="963.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.1" y="974.0"></text>
</g>
<g>
<title>clojure/lang/AFn.run (14 samples, 0.31%)</title><rect x="12.1" y="947.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.1" y="958.0"></text>
</g>
<g>
<title>clojure/core/async/impl/channels/ManyToManyChannel$fn__833$fn__834.invoke (13 samples, 0.29%)</title><rect x="12.1" y="931.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="942.0"></text>
</g>
<g>
<title>clojure/core/async$do_alts$fn__6163$fn__6166.invoke (13 samples, 0.29%)</title><rect x="12.1" y="915.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.1" y="926.0"></text>
</g>
<g>
<title>clojure/core/async$ioc_alts_BANG_$fn__6224.invoke (13 samples, 0.29%)</title><rect x="12.1" y="899.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.1" y="910.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invoke (13 samples, 0.29%)</title><rect x="12.1" y="883.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.1" y="894.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine_wrapped.invokeStatic (13 samples, 0.29%)</title><rect x="12.1" y="867.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invoke (13 samples, 0.29%)</title><rect x="12.1" y="851.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>clojure/core/async/impl/ioc_macros$run_state_machine.invokeStatic (13 samples, 0.29%)</title><rect x="12.1" y="835.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8971$state_machine__5995__auto____9012.invoke (13 samples, 0.29%)</title><rect x="12.1" y="819.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8971$state_machine__5995__auto____9012$fn__9014.invoke (13 samples, 0.29%)</title><rect x="12.1" y="803.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>clojure/core$get_in.invoke (1 samples, 0.02%)</title><rect x="12.1" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.1" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Numbers.double_array (6 samples, 0.13%)</title><rect x="12.4" y="787.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.4" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.count (4 samples, 0.09%)</title><rect x="12.9" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.9" y="782.0"></text>
</g>
<g>
<title>clojure/lang/RT.countFrom (4 samples, 0.09%)</title><rect x="12.9" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.9" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Cons.next (4 samples, 0.09%)</title><rect x="12.9" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.9" y="750.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (4 samples, 0.09%)</title><rect x="12.9" y="723.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.9" y="734.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.sval (1 samples, 0.02%)</title><rect x="13.7" y="707.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.7" y="718.0"></text>
</g>
<g>
<title>clojure/core$concat$cat__5495$fn__5496.invoke (1 samples, 0.02%)</title><rect x="13.7" y="691.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.7" y="702.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (1 samples, 0.02%)</title><rect x="13.7" y="675.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.7" y="686.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (1 samples, 0.02%)</title><rect x="13.7" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.7" y="670.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (1 samples, 0.02%)</title><rect x="13.7" y="643.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.7" y="654.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.sval (1 samples, 0.02%)</title><rect x="13.7" y="627.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.7" y="638.0"></text>
</g>
<g>
<title>clojure/core$concat$fn__5493.invoke (1 samples, 0.02%)</title><rect x="13.7" y="611.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.7" y="622.0"></text>
</g>
<g>
<title>clojure/core$concat.invokeStatic (1 samples, 0.02%)</title><rect x="13.7" y="595.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.7" y="606.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.&lt;init&gt; (1 samples, 0.02%)</title><rect x="13.7" y="579.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.7" y="590.0"></text>
</g>
<g>
<title>clojure/lang/Obj.&lt;init&gt; (1 samples, 0.02%)</title><rect x="13.7" y="563.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.7" y="574.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invoke (1 samples, 0.02%)</title><rect x="13.9" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.9" y="798.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invokeStatic (1 samples, 0.02%)</title><rect x="13.9" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.9" y="782.0"></text>
</g>
<g>
<title>clojure/tools/logging/impl$fn__8629$G__8611__8640.invoke (1 samples, 0.02%)</title><rect x="13.9" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.9" y="766.0"></text>
</g>
<g>
<title>clojure/tools/logging$eval136$fn__141.invoke (1 samples, 0.02%)</title><rect x="13.9" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.9" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.02%)</title><rect x="13.9" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.9" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.02%)</title><rect x="13.9" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.9" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.02%)</title><rect x="13.9" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.9" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.02%)</title><rect x="13.9" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.9" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="13.9" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.9" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="13.9" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.9" y="654.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8971$state_machine__5995__auto____9012$fn__9014$fn__9017.invoke (1 samples, 0.02%)</title><rect x="14.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (4 samples, 0.09%)</title><rect x="14.5" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.5" y="798.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (4 samples, 0.09%)</title><rect x="14.5" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="782.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.doSort (3 samples, 0.07%)</title><rect x="14.7" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.7" y="766.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (3 samples, 0.07%)</title><rect x="14.7" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.7" y="750.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (2 samples, 0.04%)</title><rect x="15.0" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.0" y="734.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (2 samples, 0.04%)</title><rect x="15.0" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.0" y="718.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.02%)</title><rect x="15.3" y="691.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.3" y="702.0"></text>
</g>
<g>
<title>java/util/DualPivotQuicksort.sort (1 samples, 0.02%)</title><rect x="15.3" y="675.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.3" y="686.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8971.invoke (1 samples, 0.02%)</title><rect x="15.5" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.5" y="942.0"></text>
</g>
<g>
<title>hammer/core$_main$fn__8971$G__8892__8976.&lt;init&gt; (1 samples, 0.02%)</title><rect x="15.5" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.5" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (1,966 samples, 43.81%)</title><rect x="15.8" y="1011.0" width="516.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.8" y="1022.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.run (13 samples, 0.29%)</title><rect x="15.8" y="995.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.8" y="1006.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.processCancelledTasks (9 samples, 0.20%)</title><rect x="15.8" y="979.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.8" y="990.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.poll (1 samples, 0.02%)</title><rect x="17.9" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.9" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.poll (1 samples, 0.02%)</title><rect x="17.9" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.9" y="958.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.02%)</title><rect x="17.9" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.9" y="942.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.transferTimeoutsToBuckets (1 samples, 0.02%)</title><rect x="18.2" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.2" y="990.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.access$700 (1 samples, 0.02%)</title><rect x="18.2" y="963.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.2" y="974.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$Worker.waitForNextTick (3 samples, 0.07%)</title><rect x="18.4" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.4" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (1 samples, 0.02%)</title><rect x="18.9" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.9" y="974.0"></text>
</g>
<g>
<title>JVM_Sleep (1 samples, 0.02%)</title><rect x="18.9" y="947.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="21.9" y="958.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (1 samples, 0.02%)</title><rect x="18.9" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="18.9" y="915.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="21.9" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="18.9" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="21.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="18.9" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.9" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="18.9" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="21.9" y="878.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="18.9" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.9" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="18.9" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.9" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="18.9" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.9" y="830.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="18.9" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.9" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="18.9" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.9" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1,953 samples, 43.52%)</title><rect x="19.2" y="995.0" width="513.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.2" y="1006.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1,953 samples, 43.52%)</title><rect x="19.2" y="979.0" width="513.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.2" y="990.0">io/netty/util/concurrent/SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>SharedRuntime::ldiv(long, long) (1 samples, 0.02%)</title><rect x="19.2" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.2" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (1,952 samples, 43.49%)</title><rect x="19.5" y="963.0" width="513.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.5" y="974.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="22.1" y="947.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="25.1" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="22.9" y="947.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="25.9" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="23.1" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="26.1" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (642 samples, 14.30%)</title><rect x="23.4" y="947.0" width="168.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.4" y="958.0">io/netty/channel/nio/N..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="24.2" y="931.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="27.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="24.2" y="915.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="27.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (638 samples, 14.22%)</title><rect x="24.5" y="931.0" width="167.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.5" y="942.0">io/netty/channel/nio/..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (637 samples, 14.19%)</title><rect x="24.7" y="915.0" width="167.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.7" y="926.0">io/netty/channel/nio/..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (635 samples, 14.15%)</title><rect x="25.2" y="899.0" width="167.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="910.0">io/netty/channel/nio/..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (2 samples, 0.04%)</title><rect x="25.8" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.8" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (452 samples, 10.07%)</title><rect x="26.3" y="883.0" width="118.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.3" y="894.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (452 samples, 10.07%)</title><rect x="26.3" y="867.0" width="118.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.3" y="878.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (452 samples, 10.07%)</title><rect x="26.3" y="851.0" width="118.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.3" y="862.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (452 samples, 10.07%)</title><rect x="26.3" y="835.0" width="118.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.3" y="846.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (452 samples, 10.07%)</title><rect x="26.3" y="819.0" width="118.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.3" y="830.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (3 samples, 0.07%)</title><rect x="26.3" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.02%)</title><rect x="26.3" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.3" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.02%)</title><rect x="26.3" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.3" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.channel (1 samples, 0.02%)</title><rect x="26.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.3" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.skipContext (2 samples, 0.04%)</title><rect x="26.6" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (2 samples, 0.04%)</title><rect x="26.6" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (449 samples, 10.00%)</title><rect x="27.1" y="803.0" width="118.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="814.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (3 samples, 0.07%)</title><rect x="27.1" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.1" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (3 samples, 0.07%)</title><rect x="27.1" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.1" y="782.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="27.1" y="755.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="30.1" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (442 samples, 9.85%)</title><rect x="27.9" y="787.0" width="116.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.9" y="798.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (439 samples, 9.78%)</title><rect x="28.7" y="771.0" width="115.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.7" y="782.0">io/netty/handl..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (7 samples, 0.16%)</title><rect x="29.2" y="755.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.2" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (7 samples, 0.16%)</title><rect x="29.2" y="739.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (5 samples, 0.11%)</title><rect x="29.2" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (5 samples, 0.11%)</title><rect x="29.2" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (5 samples, 0.11%)</title><rect x="29.2" y="691.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (5 samples, 0.11%)</title><rect x="29.2" y="675.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (5 samples, 0.11%)</title><rect x="29.2" y="659.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (3 samples, 0.07%)</title><rect x="29.7" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.7" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (3 samples, 0.07%)</title><rect x="29.7" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.7" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (3 samples, 0.07%)</title><rect x="29.7" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.7" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (1 samples, 0.02%)</title><rect x="29.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.7" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (2 samples, 0.04%)</title><rect x="30.0" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.0" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (2 samples, 0.04%)</title><rect x="30.0" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.0" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.04%)</title><rect x="30.5" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (2 samples, 0.04%)</title><rect x="30.5" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.5" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (2 samples, 0.04%)</title><rect x="30.5" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.5" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (2 samples, 0.04%)</title><rect x="30.5" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.5" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (2 samples, 0.04%)</title><rect x="30.5" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offer (1 samples, 0.02%)</title><rect x="30.8" y="643.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.offerLast (1 samples, 0.02%)</title><rect x="30.8" y="627.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.02%)</title><rect x="30.8" y="611.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.8" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.release (2 samples, 0.04%)</title><rect x="31.0" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.0" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.closeLeak (1 samples, 0.02%)</title><rect x="31.0" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.0" y="750.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (1 samples, 0.02%)</title><rect x="31.0" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.0" y="734.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (1 samples, 0.02%)</title><rect x="31.0" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.0" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.remove (1 samples, 0.02%)</title><rect x="31.0" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (1 samples, 0.02%)</title><rect x="31.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.02%)</title><rect x="31.0" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.release (1 samples, 0.02%)</title><rect x="31.3" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.02%)</title><rect x="31.3" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (1 samples, 0.02%)</title><rect x="31.3" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (1 samples, 0.02%)</title><rect x="31.3" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.3" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (1 samples, 0.02%)</title><rect x="31.3" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.3" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.02%)</title><rect x="31.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.3" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (1 samples, 0.02%)</title><rect x="31.3" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.3" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.nonVolatileRawCnt (1 samples, 0.02%)</title><rect x="31.3" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.3" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.alloc (7 samples, 0.16%)</title><rect x="31.6" y="755.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.config (4 samples, 0.09%)</title><rect x="32.3" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.3" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.config (4 samples, 0.09%)</title><rect x="32.3" y="723.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.3" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (108 samples, 2.41%)</title><rect x="33.4" y="755.0" width="28.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.4" y="766.0">io..</text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.isReadable (1 samples, 0.02%)</title><rect x="34.7" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.isReadable (1 samples, 0.02%)</title><rect x="34.7" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.7" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.decodeRemovalReentryProtection (102 samples, 2.27%)</title><rect x="35.0" y="739.0" width="26.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.0" y="750.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (102 samples, 2.27%)</title><rect x="35.0" y="723.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.0" y="734.0">i..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.decode (102 samples, 2.27%)</title><rect x="35.0" y="707.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.0" y="718.0">c..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.decode (89 samples, 1.98%)</title><rect x="35.0" y="691.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.0" y="702.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (68 samples, 1.52%)</title><rect x="35.5" y="675.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (68 samples, 1.52%)</title><rect x="35.5" y="659.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.5" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompressWithoutLength (68 samples, 1.52%)</title><rect x="35.5" y="643.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.5" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.decompressDirect (67 samples, 1.49%)</title><rect x="35.8" y="627.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.8" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.02%)</title><rect x="35.8" y="611.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.8" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="35.8" y="595.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.8" y="606.0"></text>
</g>
<g>
<title>InlineCacheBuffer::create_transition_stub(CompiledIC*, void*, unsigned char*) (1 samples, 0.02%)</title><rect x="35.8" y="579.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.8" y="590.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.02%)</title><rect x="35.8" y="563.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="38.8" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (12 samples, 0.27%)</title><rect x="36.0" y="611.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.0" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readableBytes (3 samples, 0.07%)</title><rect x="36.0" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.0" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readerIndex (4 samples, 0.09%)</title><rect x="36.8" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (2 samples, 0.04%)</title><rect x="37.9" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBuffer (2 samples, 0.04%)</title><rect x="37.9" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.9" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (2 samples, 0.04%)</title><rect x="37.9" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.9" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.duplicateInternalNioBuffer (1 samples, 0.02%)</title><rect x="37.9" y="547.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.9" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="37.9" y="531.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.9" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.02%)</title><rect x="37.9" y="515.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.02%)</title><rect x="37.9" y="499.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.9" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="37.9" y="483.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="37.9" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.9" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="37.9" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="37.9" y="435.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="37.9" y="419.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.9" y="430.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="37.9" y="403.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="40.9" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::flush_deferred_store_barrier(JavaThread*) (1 samples, 0.02%)</title><rect x="37.9" y="387.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.9" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.slice (1 samples, 0.02%)</title><rect x="38.1" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.1" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.nioBufferCount (1 samples, 0.02%)</title><rect x="38.4" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.4" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.readerIndex (1 samples, 0.02%)</title><rect x="38.7" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.7" y="606.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="38.9" y="595.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="41.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (20 samples, 0.45%)</title><rect x="39.2" y="611.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.2" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (20 samples, 0.45%)</title><rect x="39.2" y="595.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.2" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (20 samples, 0.45%)</title><rect x="39.2" y="579.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.2" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (7 samples, 0.16%)</title><rect x="39.2" y="563.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (7 samples, 0.16%)</title><rect x="39.2" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.2" y="558.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (7 samples, 0.16%)</title><rect x="39.2" y="531.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.2" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (7 samples, 0.16%)</title><rect x="39.2" y="515.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.2" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (6 samples, 0.13%)</title><rect x="39.2" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (6 samples, 0.13%)</title><rect x="39.2" y="483.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.13%)</title><rect x="39.2" y="467.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.13%)</title><rect x="39.2" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.2" y="462.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 0.13%)</title><rect x="39.2" y="435.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.2" y="446.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 0.13%)</title><rect x="39.2" y="419.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="42.2" y="430.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (6 samples, 0.13%)</title><rect x="39.2" y="403.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.2" y="414.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (6 samples, 0.13%)</title><rect x="39.2" y="387.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.2" y="398.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.07%)</title><rect x="39.4" y="371.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="42.4" y="382.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.02%)</title><rect x="40.2" y="371.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.2" y="382.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="40.2" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.2" y="366.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="40.2" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.2" y="350.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="40.2" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="40.2" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.2" y="318.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="40.2" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.2" y="302.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="40.2" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.2" y="286.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="40.2" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.2" y="270.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="40.2" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.2" y="254.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="40.2" y="227.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.2" y="238.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="40.2" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.2" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="40.2" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.2" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="40.2" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.2" y="190.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="40.2" y="163.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="40.2" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="40.2" y="131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.2" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="40.2" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.2" y="126.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="40.5" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.5" y="382.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="40.5" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="43.5" y="366.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.02%)</title><rect x="40.5" y="339.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="43.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="40.8" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="40.8" y="483.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.8" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (12 samples, 0.27%)</title><rect x="41.0" y="563.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.0" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (5 samples, 0.11%)</title><rect x="41.0" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.0" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (5 samples, 0.11%)</title><rect x="41.0" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.0" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (5 samples, 0.11%)</title><rect x="41.0" y="515.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.0" y="526.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (5 samples, 0.11%)</title><rect x="41.0" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.0" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (4 samples, 0.09%)</title><rect x="41.3" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.3" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (7 samples, 0.16%)</title><rect x="42.3" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.3" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (7 samples, 0.16%)</title><rect x="42.3" y="531.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.3" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (7 samples, 0.16%)</title><rect x="42.3" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.3" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (7 samples, 0.16%)</title><rect x="42.3" y="499.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.3" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (2 samples, 0.04%)</title><rect x="43.1" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.1" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (2 samples, 0.04%)</title><rect x="43.1" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.1" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (2 samples, 0.04%)</title><rect x="43.1" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (2 samples, 0.04%)</title><rect x="43.1" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (2 samples, 0.04%)</title><rect x="43.1" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (2 samples, 0.04%)</title><rect x="43.1" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.1" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (2 samples, 0.04%)</title><rect x="43.7" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.7" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (1 samples, 0.02%)</title><rect x="43.7" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.7" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.02%)</title><rect x="43.9" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="44.2" y="563.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.02%)</title><rect x="44.2" y="547.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.2" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="44.4" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.4" y="622.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNIFastDecompressor.decompress (33 samples, 0.74%)</title><rect x="44.7" y="611.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.7" y="622.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_decompress_fast (33 samples, 0.74%)</title><rect x="44.7" y="595.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.7" y="606.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1decompress_1fast (13 samples, 0.29%)</title><rect x="45.5" y="579.0" width="3.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="48.5" y="590.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (9 samples, 0.20%)</title><rect x="46.0" y="563.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="49.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.02%)</title><rect x="46.5" y="547.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="49.5" y="558.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (4 samples, 0.09%)</title><rect x="46.8" y="547.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.8" y="558.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (2 samples, 0.04%)</title><rect x="47.9" y="547.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.9" y="558.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (2 samples, 0.04%)</title><rect x="48.4" y="563.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="51.4" y="574.0"></text>
</g>
<g>
<title>LZ4_decompress_fast (2 samples, 0.04%)</title><rect x="48.9" y="579.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="51.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.29%)</title><rect x="49.4" y="579.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="52.4" y="590.0"></text>
</g>
<g>
<title>LZ4_decompress_fast (2 samples, 0.04%)</title><rect x="49.4" y="563.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="52.4" y="574.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (10 samples, 0.22%)</title><rect x="50.0" y="563.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="53.0" y="574.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="52.6" y="563.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="55.6" y="574.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (2 samples, 0.04%)</title><rect x="52.9" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="55.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (8 samples, 0.18%)</title><rect x="53.4" y="675.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.4" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readByte (8 samples, 0.18%)</title><rect x="53.4" y="659.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.4" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readByte (8 samples, 0.18%)</title><rect x="53.4" y="643.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.4" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (3 samples, 0.07%)</title><rect x="53.6" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.6" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (3 samples, 0.07%)</title><rect x="53.6" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.6" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (3 samples, 0.07%)</title><rect x="53.6" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (3 samples, 0.07%)</title><rect x="53.6" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.6" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.decompress (2 samples, 0.04%)</title><rect x="53.6" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.6" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="54.2" y="563.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.2" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf$1.unsafeOffset (1 samples, 0.02%)</title><rect x="54.2" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.2" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf._getByte (4 samples, 0.09%)</title><rect x="54.4" y="627.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.4" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._getByte (4 samples, 0.09%)</title><rect x="54.4" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.4" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getByte (3 samples, 0.07%)</title><rect x="54.7" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.7" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (1 samples, 0.02%)</title><rect x="55.0" y="579.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.0" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="55.2" y="579.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="58.2" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (5 samples, 0.11%)</title><rect x="55.5" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.readInt (5 samples, 0.11%)</title><rect x="55.5" y="659.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.5" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readInt (5 samples, 0.11%)</title><rect x="55.5" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.5" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkReadableBytes0 (5 samples, 0.11%)</title><rect x="55.5" y="627.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.5" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (5 samples, 0.11%)</title><rect x="55.5" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractDerivedByteBuf.isAccessible (5 samples, 0.11%)</title><rect x="55.5" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (5 samples, 0.11%)</title><rect x="56.8" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (5 samples, 0.11%)</title><rect x="56.8" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.8" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (5 samples, 0.11%)</title><rect x="56.8" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (5 samples, 0.11%)</title><rect x="56.8" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (4 samples, 0.09%)</title><rect x="56.8" y="611.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.8" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (4 samples, 0.09%)</title><rect x="56.8" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (4 samples, 0.09%)</title><rect x="56.8" y="579.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.09%)</title><rect x="56.8" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (4 samples, 0.09%)</title><rect x="56.8" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.02%)</title><rect x="57.1" y="531.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.02%)</title><rect x="57.1" y="515.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.1" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.02%)</title><rect x="57.1" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.1" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.02%)</title><rect x="57.1" y="483.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.1" y="494.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.02%)</title><rect x="57.1" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.1" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (2 samples, 0.04%)</title><rect x="57.3" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.3" y="542.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (2 samples, 0.04%)</title><rect x="57.3" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.3" y="526.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (1 samples, 0.02%)</title><rect x="57.6" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.6" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (1 samples, 0.02%)</title><rect x="57.6" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.02%)</title><rect x="57.9" y="611.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.9" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.02%)</title><rect x="57.9" y="595.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.9" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/response/Supported$Codec.decode (1 samples, 0.02%)</title><rect x="58.1" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.1" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/PrimitiveCodec.readStringMultimap (1 samples, 0.02%)</title><rect x="58.1" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableMap$Builder.build (1 samples, 0.02%)</title><rect x="58.1" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.1" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="58.1" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.1" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (13 samples, 0.29%)</title><rect x="58.4" y="691.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.4" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameDecoder.extractFrame (6 samples, 0.13%)</title><rect x="58.4" y="675.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.4" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.slice (1 samples, 0.02%)</title><rect x="59.7" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.slice (1 samples, 0.02%)</title><rect x="59.7" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.7" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.slice (1 samples, 0.02%)</title><rect x="59.7" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledSlicedByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.7" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractUnpooledSlicedByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.7" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.7" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.getUnadjustedFrameLength (6 samples, 0.13%)</title><rect x="60.0" y="675.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.0" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.decode (3 samples, 0.07%)</title><rect x="60.0" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf$1.unsafeOffset (1 samples, 0.02%)</title><rect x="60.7" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.access$100 (1 samples, 0.02%)</title><rect x="61.0" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.0" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.02%)</title><rect x="61.3" y="659.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.3" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.5" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.5" y="686.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="61.5" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.5" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="61.5" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.5" y="654.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="61.5" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.5" y="638.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="61.5" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.5" y="622.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="61.5" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.5" y="606.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="61.5" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="64.5" y="590.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="61.5" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="64.5" y="574.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="61.5" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.5" y="558.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="61.5" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="64.5" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="61.5" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.5" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="61.5" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="64.5" y="510.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="61.5" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.5" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="61.5" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="64.5" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="61.5" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="64.5" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="61.5" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.5" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="61.5" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="61.5" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.5" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="61.5" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.5" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="61.5" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.5" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="61.5" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.5" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="61.5" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="61.5" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.5" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="755.0" width="81.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.8" y="766.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="739.0" width="81.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.8" y="750.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="723.0" width="81.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.8" y="734.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="707.0" width="81.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="718.0">io/netty/..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelRead (310 samples, 6.91%)</title><rect x="61.8" y="691.0" width="81.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.8" y="702.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="675.0" width="81.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.8" y="686.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (310 samples, 6.91%)</title><rect x="61.8" y="659.0" width="81.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.8" y="670.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (309 samples, 6.89%)</title><rect x="61.8" y="643.0" width="81.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.8" y="654.0">io/netty/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (307 samples, 6.84%)</title><rect x="62.3" y="627.0" width="80.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.3" y="638.0">com/datas..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.02%)</title><rect x="65.0" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.0" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/AdminRequestHandler.onResponse (2 samples, 0.04%)</title><rect x="65.2" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.2" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/ThrottledAdminRequestHandler.setFinalResult (1 samples, 0.02%)</title><rect x="65.2" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.cancel (1 samples, 0.02%)</title><rect x="65.5" y="595.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.5" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.cancel (1 samples, 0.02%)</title><rect x="65.5" y="579.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.cancel (1 samples, 0.02%)</title><rect x="65.5" y="563.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.5" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (1 samples, 0.02%)</title><rect x="65.5" y="547.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (1 samples, 0.02%)</title><rect x="65.5" y="531.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.5" y="542.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (1 samples, 0.02%)</title><rect x="65.5" y="515.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.5" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/AdminRequestHandler$$Lambda$184/536279109.operationComplete (1 samples, 0.02%)</title><rect x="65.5" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.5" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/UncaughtExceptions.log (1 samples, 0.02%)</title><rect x="65.5" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.5" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.02%)</title><rect x="65.5" y="467.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.5" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="451.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="68.5" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="435.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="68.5" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="419.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.5" y="430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="403.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="68.5" y="414.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="387.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="68.5" y="398.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, Thread*) (1 samples, 0.02%)</title><rect x="65.5" y="371.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="68.5" y="382.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.release (7 samples, 0.16%)</title><rect x="65.7" y="611.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.02%)</title><rect x="65.7" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.7" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.02%)</title><rect x="65.7" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/StreamIdGenerator.release (2 samples, 0.04%)</title><rect x="66.0" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.0" y="606.0"></text>
</g>
<g>
<title>java/util/BitSet.clear (2 samples, 0.04%)</title><rect x="66.0" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.0" y="590.0"></text>
</g>
<g>
<title>java/util/BitSet.recalculateWordsInUse (2 samples, 0.04%)</title><rect x="66.0" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.0" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.remove (4 samples, 0.09%)</title><rect x="66.5" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.delete (4 samples, 0.09%)</title><rect x="66.5" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler$InitialPrepareCallback.onResponse (1 samples, 0.02%)</title><rect x="67.6" y="611.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.6" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.access$600 (1 samples, 0.02%)</title><rect x="67.6" y="595.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.6" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.setFinalResult (1 samples, 0.02%)</title><rect x="67.6" y="579.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.6" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.prepareOnOtherNodes (1 samples, 0.02%)</title><rect x="67.6" y="563.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.6" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareHandler.prepareOnOtherNode (1 samples, 0.02%)</title><rect x="67.6" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.6" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/ThrottledAdminRequestHandler.start (1 samples, 0.02%)</title><rect x="67.6" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.6" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/throttling/PassThroughRequestThrottler.register (1 samples, 0.02%)</title><rect x="67.6" y="515.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/ThrottledAdminRequestHandler.onThrottleReady (1 samples, 0.02%)</title><rect x="67.6" y="499.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.6" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/adminrequest/AdminRequestHandler.start (1 samples, 0.02%)</title><rect x="67.6" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.6" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.write (1 samples, 0.02%)</title><rect x="67.6" y="467.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.6" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.writeAndFlush (1 samples, 0.02%)</title><rect x="67.6" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.6" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.enqueue (1 samples, 0.02%)</title><rect x="67.6" y="435.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.6" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.access$100 (1 samples, 0.02%)</title><rect x="67.6" y="419.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.6" y="430.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (1 samples, 0.02%)</title><rect x="67.6" y="403.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="414.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.02%)</title><rect x="67.6" y="387.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.6" y="398.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.02%)</title><rect x="67.6" y="371.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.6" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (1 samples, 0.02%)</title><rect x="67.6" y="355.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (1 samples, 0.02%)</title><rect x="67.6" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="67.6" y="323.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.02%)</title><rect x="67.6" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (1 samples, 0.02%)</title><rect x="67.6" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="302.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="67.6" y="275.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="70.6" y="286.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="67.6" y="259.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.6" y="270.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="67.6" y="243.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.6" y="254.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="67.6" y="227.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.6" y="238.0"></text>
</g>
<g>
<title>do_sync_write (1 samples, 0.02%)</title><rect x="67.6" y="211.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.6" y="222.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="67.6" y="195.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.6" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="67.6" y="179.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.6" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="67.6" y="163.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.6" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="67.6" y="147.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.6" y="158.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.onResponse (280 samples, 6.24%)</title><rect x="67.8" y="611.0" width="73.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.8" y="622.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.access$1700 (269 samples, 5.99%)</title><rect x="68.9" y="595.0" width="70.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="606.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (269 samples, 5.99%)</title><rect x="68.9" y="579.0" width="70.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.9" y="590.0">com/data..</text>
</g>
<g>
<title>com/datastax/dse/driver/internal/core/tracker/MultiplexingRequestTracker.onNodeSuccess (12 samples, 0.27%)</title><rect x="68.9" y="563.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.9" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.onNodeSuccess (10 samples, 0.22%)</title><rect x="69.2" y="547.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.2" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.updateResponseTimes (10 samples, 0.22%)</title><rect x="69.2" y="531.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.compute (10 samples, 0.22%)</title><rect x="69.2" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.2" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy$$Lambda$248/1117856794.apply (3 samples, 0.07%)</title><rect x="70.5" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.5" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.lambda$updateResponseTimes$0 (2 samples, 0.04%)</title><rect x="70.7" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.length (1 samples, 0.02%)</title><rect x="70.7" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.7" y="478.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="70.7" y="451.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="73.7" y="462.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="70.7" y="435.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="73.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLongArray.set (1 samples, 0.02%)</title><rect x="71.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.02%)</title><rect x="71.3" y="499.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.3" y="510.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.5" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.5" y="510.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="71.5" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="74.5" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.5" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.5" y="478.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="71.5" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.5" y="462.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="71.5" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.5" y="446.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="71.5" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="74.5" y="430.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="71.5" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.5" y="414.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="71.5" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.5" y="398.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="71.5" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.5" y="382.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="71.5" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="74.5" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="71.5" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="74.5" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="71.5" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.5" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="71.5" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.5" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="71.5" y="291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.5" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="71.5" y="275.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.5" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="71.5" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.5" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="71.5" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="74.5" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="71.5" y="227.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.5" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="71.5" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.5" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="71.5" y="195.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.5" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="71.5" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.5" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="71.5" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.5" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="71.5" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (1 samples, 0.02%)</title><rect x="71.8" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (1 samples, 0.02%)</title><rect x="71.8" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.8" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toResultSet (1 samples, 0.02%)</title><rect x="72.0" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.0" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.buildExecutionInfo (3 samples, 0.07%)</title><rect x="72.3" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.3" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultExecutionInfo.&lt;init&gt; (3 samples, 0.07%)</title><rect x="72.3" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.3" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.cancelScheduledTasks (13 samples, 0.29%)</title><rect x="73.1" y="563.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.1" y="574.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.cancel (8 samples, 0.18%)</title><rect x="73.6" y="547.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.6" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (5 samples, 0.11%)</title><rect x="74.4" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.4" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (5 samples, 0.11%)</title><rect x="74.4" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.4" y="526.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (5 samples, 0.11%)</title><rect x="74.4" y="499.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (2 samples, 0.04%)</title><rect x="75.2" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (1 samples, 0.02%)</title><rect x="75.7" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.next (1 samples, 0.02%)</title><rect x="76.0" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (1 samples, 0.02%)</title><rect x="76.0" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.iterator (1 samples, 0.02%)</title><rect x="76.3" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="76.3" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="76.3" y="515.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (4 samples, 0.09%)</title><rect x="76.5" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (3 samples, 0.07%)</title><rect x="77.6" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.6" y="574.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="78.1" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="78.1" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="78.1" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.1" y="526.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="78.1" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.1" y="510.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="78.1" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.1" y="494.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="78.1" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.1" y="478.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="78.1" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.1" y="462.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="78.1" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.1" y="446.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="78.1" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.1" y="430.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="78.1" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="81.1" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="78.1" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="78.1" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="78.1" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="78.1" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="78.1" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="81.1" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="78.1" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.1" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="78.1" y="291.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.1" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="78.1" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.1" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="78.1" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.1" y="270.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="78.1" y="243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.1" y="254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="78.1" y="227.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.1" y="238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="78.1" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.1" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="78.1" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 5.17%)</title><rect x="78.4" y="563.0" width="61.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.4" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 5.17%)</title><rect x="78.4" y="547.0" width="61.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.4" y="558.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (228 samples, 5.08%)</title><rect x="79.1" y="531.0" width="60.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.1" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (226 samples, 5.04%)</title><rect x="79.1" y="515.0" width="59.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.1" y="526.0">java/u..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (226 samples, 5.04%)</title><rect x="79.1" y="499.0" width="59.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.1" y="510.0">sun/mi..</text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (1 samples, 0.02%)</title><rect x="79.9" y="483.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="82.9" y="494.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="79.9" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.9" y="478.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="80.2" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="83.2" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (217 samples, 4.84%)</title><rect x="80.5" y="483.0" width="57.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="83.5" y="494.0">Unsafe..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="80.7" y="467.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="83.7" y="478.0"></text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.07%)</title><rect x="81.5" y="467.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.201] (1 samples, 0.02%)</title><rect x="82.3" y="467.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="85.3" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (206 samples, 4.59%)</title><rect x="82.6" y="467.0" width="54.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="85.6" y="478.0">__pth..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="85.5" y="451.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.5" y="462.0"></text>
</g>
<g>
<title>sysret_audit (6 samples, 0.13%)</title><rect x="85.7" y="451.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.7" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.09%)</title><rect x="85.7" y="435.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.7" y="446.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.02%)</title><rect x="86.5" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.5" y="430.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.02%)</title><rect x="86.8" y="435.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.8" y="446.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.02%)</title><rect x="87.0" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.0" y="446.0"></text>
</g>
<g>
<title>system_call_fastpath (188 samples, 4.19%)</title><rect x="87.3" y="451.0" width="49.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.3" y="462.0">syste..</text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="87.6" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.6" y="446.0"></text>
</g>
<g>
<title>sys_futex (185 samples, 4.12%)</title><rect x="88.1" y="435.0" width="48.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.1" y="446.0">sys_..</text>
</g>
<g>
<title>do_futex (183 samples, 4.08%)</title><rect x="88.4" y="419.0" width="48.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.4" y="430.0">do_f..</text>
</g>
<g>
<title>_raw_qspin_lock (10 samples, 0.22%)</title><rect x="89.7" y="403.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="92.7" y="414.0"></text>
</g>
<g>
<title>futex_wake_op (167 samples, 3.72%)</title><rect x="92.3" y="403.0" width="43.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="95.3" y="414.0">fute..</text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.13%)</title><rect x="94.9" y="387.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.9" y="398.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="96.2" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.2" y="382.0"></text>
</g>
<g>
<title>wake_up_q (151 samples, 3.36%)</title><rect x="96.5" y="387.0" width="39.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="99.5" y="398.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (149 samples, 3.32%)</title><rect x="97.0" y="371.0" width="39.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.0" y="382.0">try..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (146 samples, 3.25%)</title><rect x="97.3" y="355.0" width="38.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="100.3" y="366.0">_ra..</text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.04%)</title><rect x="135.7" y="355.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.7" y="366.0"></text>
</g>
<g>
<title>__irqentry_text_start (2 samples, 0.04%)</title><rect x="135.7" y="339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.7" y="350.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="135.7" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.7" y="334.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.04%)</title><rect x="135.7" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.7" y="318.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.04%)</title><rect x="135.7" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.7" y="302.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.04%)</title><rect x="135.7" y="275.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.7" y="286.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.04%)</title><rect x="135.7" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.7" y="270.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.04%)</title><rect x="135.7" y="243.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.7" y="254.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.04%)</title><rect x="135.7" y="227.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.7" y="238.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.04%)</title><rect x="135.7" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.7" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="135.7" y="195.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="138.7" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="135.7" y="179.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="135.7" y="163.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.7" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="135.7" y="147.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.7" y="158.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="135.7" y="131.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.7" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="135.7" y="115.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="135.7" y="99.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="135.7" y="83.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.7" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="135.7" y="67.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.7" y="78.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="135.7" y="51.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.7" y="62.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="135.7" y="35.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.7" y="46.0"></text>
</g>
<g>
<title>classify (1 samples, 0.02%)</title><rect x="135.9" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.9" y="206.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="136.2" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.2" y="414.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.02%)</title><rect x="136.5" y="419.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.5" y="430.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.07%)</title><rect x="136.7" y="467.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="139.7" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="137.5" y="483.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="140.5" y="494.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="137.5" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.5" y="478.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="137.5" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="140.5" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="137.5" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="140.5" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="137.5" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.5" y="430.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="137.8" y="483.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="140.8" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="138.0" y="483.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="141.0" y="494.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="138.6" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.02%)</title><rect x="139.1" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.1" y="542.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="139.4" y="563.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="142.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.02%)</title><rect x="139.6" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (6 samples, 0.13%)</title><rect x="139.9" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.indexOf (3 samples, 0.07%)</title><rect x="139.9" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.9" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.setFinalResult (1 samples, 0.02%)</title><rect x="140.4" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.remove (3 samples, 0.07%)</title><rect x="140.7" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="140.9" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.02%)</title><rect x="140.9" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="140.9" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="141.2" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.2" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.get (6 samples, 0.13%)</title><rect x="141.5" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (6 samples, 0.13%)</title><rect x="141.5" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.02%)</title><rect x="143.0" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.0" y="654.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.02%)</title><rect x="143.0" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.0" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.channelRead (1 samples, 0.02%)</title><rect x="143.0" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.0" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (3 samples, 0.07%)</title><rect x="143.3" y="755.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.3" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (3 samples, 0.07%)</title><rect x="143.3" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.3" y="750.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (2 samples, 0.04%)</title><rect x="143.3" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.fastGet (1 samples, 0.02%)</title><rect x="143.6" y="707.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.6" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="143.6" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.6" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/UnpaddedInternalThreadLocalMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="143.6" y="675.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.6" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.02%)</title><rect x="143.8" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.8" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (4 samples, 0.09%)</title><rect x="144.1" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (4 samples, 0.09%)</title><rect x="144.1" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.1" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (2 samples, 0.04%)</title><rect x="144.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (12 samples, 0.27%)</title><rect x="145.1" y="883.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.1" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (12 samples, 0.27%)</title><rect x="145.1" y="867.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.1" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (12 samples, 0.27%)</title><rect x="145.1" y="851.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.1" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (12 samples, 0.27%)</title><rect x="145.1" y="835.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (10 samples, 0.22%)</title><rect x="145.1" y="819.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.1" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (10 samples, 0.22%)</title><rect x="145.1" y="803.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.1" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (9 samples, 0.20%)</title><rect x="145.1" y="787.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.1" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelHandlerContext.handler (1 samples, 0.02%)</title><rect x="145.1" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.1" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (8 samples, 0.18%)</title><rect x="145.4" y="771.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (8 samples, 0.18%)</title><rect x="145.4" y="755.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextInbound (2 samples, 0.04%)</title><rect x="145.4" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (6 samples, 0.13%)</title><rect x="145.9" y="739.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (6 samples, 0.13%)</title><rect x="145.9" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.9" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.channelReadComplete (5 samples, 0.11%)</title><rect x="146.2" y="707.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (3 samples, 0.07%)</title><rect x="146.7" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (3 samples, 0.07%)</title><rect x="146.7" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (3 samples, 0.07%)</title><rect x="146.7" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.channelReadComplete (2 samples, 0.04%)</title><rect x="146.7" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.handler (1 samples, 0.02%)</title><rect x="147.2" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.2" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.02%)</title><rect x="147.5" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.5" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (2 samples, 0.04%)</title><rect x="147.8" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.8" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (2 samples, 0.04%)</title><rect x="147.8" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (26 samples, 0.58%)</title><rect x="148.3" y="883.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.3" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (24 samples, 0.53%)</title><rect x="148.8" y="867.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.8" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (24 samples, 0.53%)</title><rect x="148.8" y="851.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.8" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (24 samples, 0.53%)</title><rect x="148.8" y="835.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.8" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (24 samples, 0.53%)</title><rect x="148.8" y="819.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.8" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (4 samples, 0.09%)</title><rect x="149.1" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.1" y="814.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (3 samples, 0.07%)</title><rect x="149.3" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.3" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (3 samples, 0.07%)</title><rect x="149.3" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.3" y="782.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (2 samples, 0.04%)</title><rect x="149.3" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.3" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (2 samples, 0.04%)</title><rect x="149.3" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.04%)</title><rect x="149.3" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="149.3" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="149.3" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.3" y="702.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.04%)</title><rect x="149.3" y="675.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="152.3" y="686.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.04%)</title><rect x="149.3" y="659.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="152.3" y="670.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.04%)</title><rect x="149.3" y="643.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="152.3" y="654.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.02%)</title><rect x="149.3" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="152.3" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.02%)</title><rect x="149.6" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="152.6" y="638.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="149.6" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="152.6" y="622.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.02%)</title><rect x="149.6" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="152.6" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.threadLocalRandom (1 samples, 0.02%)</title><rect x="149.9" y="755.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.9" y="766.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent$2.current (1 samples, 0.02%)</title><rect x="149.9" y="739.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.current (1 samples, 0.02%)</title><rect x="149.9" y="723.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.9" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (17 samples, 0.38%)</title><rect x="150.1" y="803.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (2 samples, 0.04%)</title><rect x="150.4" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.4" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.04%)</title><rect x="150.4" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (1 samples, 0.02%)</title><rect x="150.4" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.4" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setIndex0 (1 samples, 0.02%)</title><rect x="150.4" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.4" y="750.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.02%)</title><rect x="150.7" y="755.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.7" y="766.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.02%)</title><rect x="150.7" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.7" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (14 samples, 0.31%)</title><rect x="150.9" y="787.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocateNormal (13 samples, 0.29%)</title><rect x="150.9" y="771.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.allocate (13 samples, 0.29%)</title><rect x="150.9" y="755.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.9" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocate (8 samples, 0.18%)</title><rect x="152.2" y="739.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.2" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateRun (6 samples, 0.13%)</title><rect x="152.5" y="723.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.allocateNode (4 samples, 0.09%)</title><rect x="153.0" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.0" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.updateParentsAlloc (1 samples, 0.02%)</title><rect x="153.8" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollLast (1 samples, 0.02%)</title><rect x="154.1" y="723.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.1" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateNormal (1 samples, 0.02%)</title><rect x="154.3" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.3" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (1 samples, 0.02%)</title><rect x="154.3" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.3" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.log2 (1 samples, 0.02%)</title><rect x="154.3" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.3" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (2 samples, 0.04%)</title><rect x="154.6" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.6" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.02%)</title><rect x="154.9" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.9" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (1 samples, 0.02%)</title><rect x="154.9" y="771.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.9" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="154.9" y="755.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="154.9" y="739.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 0.02%)</title><rect x="154.9" y="723.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.9" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.reset (1 samples, 0.02%)</title><rect x="155.1" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.1" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.shouldBreakReadReady (20 samples, 0.45%)</title><rect x="155.4" y="883.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.4" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown0 (20 samples, 0.45%)</title><rect x="155.4" y="867.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isInputShutdown (20 samples, 0.45%)</title><rect x="155.4" y="851.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.4" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (1 samples, 0.02%)</title><rect x="155.9" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.javaChannel (2 samples, 0.04%)</title><rect x="156.2" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.javaChannel (1 samples, 0.02%)</title><rect x="156.4" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.4" y="830.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="156.4" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.4" y="814.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="156.4" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="159.4" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="156.4" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.4" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="156.4" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="159.4" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="156.4" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.4" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="156.4" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.4" y="734.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="156.4" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="159.4" y="718.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="156.4" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.4" y="702.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="156.4" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="159.4" y="686.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="156.4" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="159.4" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="156.4" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.4" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="156.4" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.4" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="156.4" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="159.4" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="156.4" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="159.4" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="156.4" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.4" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="156.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.4" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="156.4" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="159.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="156.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="159.4" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="156.4" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.4" y="526.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="156.4" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.4" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="156.4" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.4" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="156.4" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="159.4" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="156.4" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="156.4" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.4" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.02%)</title><rect x="156.7" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.7" y="846.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="157.0" y="835.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="160.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.isInputShutdown (12 samples, 0.27%)</title><rect x="157.5" y="835.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.5" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf$1.unsafeOffset (1 samples, 0.02%)</title><rect x="158.0" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.0" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="158.3" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.3" y="830.0"></text>
</g>
<g>
<title>io/netty/util/internal/MathUtil.isOutOfBounds (1 samples, 0.02%)</title><rect x="158.6" y="819.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.6" y="830.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="158.8" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isInputOpen (6 samples, 0.13%)</title><rect x="159.1" y="819.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.1" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf$1.unsafeOffset (1 samples, 0.02%)</title><rect x="159.3" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.3" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.touch (1 samples, 0.02%)</title><rect x="159.6" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.6" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="159.9" y="803.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.9" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.02%)</title><rect x="160.1" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.1" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.1" y="798.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="160.1" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.1" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.1" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.1" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="160.1" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="163.1" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="160.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.1" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="160.1" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.1" y="718.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.1" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.1" y="702.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="160.1" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.1" y="686.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="160.1" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.1" y="670.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="160.1" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.1" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="160.1" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="163.1" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="160.1" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.1" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="160.1" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="163.1" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="160.1" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.1" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="160.1" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.1" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="160.1" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="163.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="160.1" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="163.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="160.1" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="163.1" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="160.1" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="163.1" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="160.1" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="160.1" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="160.1" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="160.1" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="163.1" y="446.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="160.4" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="163.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (120 samples, 2.67%)</title><rect x="160.7" y="883.0" width="31.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.7" y="894.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (114 samples, 2.54%)</title><rect x="160.7" y="867.0" width="29.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.7" y="878.0">io..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (114 samples, 2.54%)</title><rect x="160.7" y="851.0" width="29.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.7" y="862.0">io..</text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (2 samples, 0.04%)</title><rect x="160.7" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.7" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.02%)</title><rect x="160.7" y="819.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.7" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (1 samples, 0.02%)</title><rect x="160.7" y="803.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.7" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (1 samples, 0.02%)</title><rect x="160.7" y="787.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.7" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="160.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.9" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="160.9" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.9" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.02%)</title><rect x="160.9" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (112 samples, 2.50%)</title><rect x="161.2" y="835.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.2" y="846.0">su..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.13%)</title><rect x="163.3" y="819.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="163.3" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.3" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="163.8" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (91 samples, 2.03%)</title><rect x="164.9" y="819.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.9" y="830.0">s..</text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="165.1" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.1" y="814.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="165.1" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="168.1" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="165.1" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.1" y="782.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="165.1" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.1" y="766.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="165.1" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.1" y="750.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="165.1" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.1" y="734.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="165.1" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.1" y="718.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="165.1" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.1" y="702.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="165.1" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.1" y="686.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="165.1" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="168.1" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="165.1" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.1" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="165.1" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.1" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="165.1" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="168.1" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="165.1" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.1" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="165.1" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.1" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="165.1" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="165.1" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="165.1" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.1" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="165.1" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="168.1" y="526.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="165.1" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.1" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="165.1" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="165.1" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="165.1" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (89 samples, 1.98%)</title><rect x="165.4" y="803.0" width="23.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.4" y="814.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.02%)</title><rect x="165.7" y="787.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (87 samples, 1.94%)</title><rect x="165.9" y="787.0" width="22.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.9" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (87 samples, 1.94%)</title><rect x="165.9" y="771.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.9" y="782.0">s..</text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (79 samples, 1.76%)</title><rect x="166.2" y="755.0" width="20.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="169.2" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="167.2" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="170.2" y="750.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.09%)</title><rect x="167.5" y="739.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.5" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.07%)</title><rect x="167.8" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.8" y="734.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.02%)</title><rect x="168.5" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.5" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="168.5" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.5" y="734.0"></text>
</g>
<g>
<title>sysret_signal (1 samples, 0.02%)</title><rect x="168.8" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.8" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (68 samples, 1.52%)</title><rect x="169.1" y="739.0" width="17.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="172.1" y="750.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.02%)</title><rect x="169.1" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="172.1" y="734.0"></text>
</g>
<g>
<title>sys_read (67 samples, 1.49%)</title><rect x="169.3" y="723.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.3" y="734.0"></text>
</g>
<g>
<title>do_sync_read (1 samples, 0.02%)</title><rect x="169.3" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.3" y="718.0"></text>
</g>
<g>
<title>fget_light (7 samples, 0.16%)</title><rect x="169.6" y="707.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="172.6" y="718.0"></text>
</g>
<g>
<title>vfs_read (59 samples, 1.31%)</title><rect x="171.4" y="707.0" width="15.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.4" y="718.0"></text>
</g>
<g>
<title>do_sync_read (51 samples, 1.14%)</title><rect x="171.4" y="691.0" width="13.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.4" y="702.0"></text>
</g>
<g>
<title>sock_aio_read (50 samples, 1.11%)</title><rect x="171.7" y="675.0" width="13.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.7" y="686.0"></text>
</g>
<g>
<title>alloc_sock_iocb (1 samples, 0.02%)</title><rect x="171.7" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="172.0" y="659.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.0" y="670.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (48 samples, 1.07%)</title><rect x="172.2" y="659.0" width="12.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="175.2" y="670.0"></text>
</g>
<g>
<title>cap_socket_recvmsg (1 samples, 0.02%)</title><rect x="172.5" y="643.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="175.5" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (45 samples, 1.00%)</title><rect x="172.7" y="643.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="175.7" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="172.7" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.7" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="173.3" y="627.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.3" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (4 samples, 0.09%)</title><rect x="173.5" y="627.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.5" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="174.6" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="177.6" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 0.80%)</title><rect x="175.1" y="627.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.1" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.29%)</title><rect x="175.4" y="611.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.4" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="175.4" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="178.4" y="606.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="175.4" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="178.4" y="590.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="175.9" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.9" y="574.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="175.9" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.9" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.22%)</title><rect x="176.2" y="595.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.2" y="606.0"></text>
</g>
<g>
<title>page_frag_free (1 samples, 0.02%)</title><rect x="176.2" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="179.2" y="590.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.13%)</title><rect x="176.4" y="579.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.4" y="590.0"></text>
</g>
<g>
<title>compound_head.part.57 (2 samples, 0.04%)</title><rect x="176.7" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.7" y="574.0"></text>
</g>
<g>
<title>page_frag_free (3 samples, 0.07%)</title><rect x="177.2" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.2" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="178.0" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="181.0" y="590.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="178.3" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="181.3" y="590.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="178.8" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.8" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="179.1" y="611.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.1" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="179.3" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.3" y="622.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="179.3" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="179.3" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.3" y="590.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.11%)</title><rect x="179.6" y="611.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="182.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="179.6" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.6" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="179.8" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="182.8" y="590.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="179.8" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="182.8" y="574.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="179.8" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="182.8" y="558.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="179.8" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="182.8" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="179.8" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.8" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="179.8" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.8" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.07%)</title><rect x="180.1" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.1" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (11 samples, 0.25%)</title><rect x="180.9" y="611.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.9" y="622.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="181.2" y="595.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.2" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.11%)</title><rect x="181.4" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.4" y="606.0"></text>
</g>
<g>
<title>memcpy_toiovec (4 samples, 0.09%)</title><rect x="182.7" y="595.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.7" y="606.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="182.7" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="185.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="183.0" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.0" y="574.0"></text>
</g>
<g>
<title>static_key_enabled (1 samples, 0.02%)</title><rect x="183.5" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.5" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="183.8" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.8" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="184.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.3" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="184.6" y="643.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.6" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.11%)</title><rect x="184.8" y="691.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.8" y="702.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.11%)</title><rect x="184.8" y="675.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.8" y="686.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="185.9" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.9" y="670.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="186.2" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="189.2" y="702.0"></text>
</g>
<g>
<title>sock_aio_read (1 samples, 0.02%)</title><rect x="186.7" y="691.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.7" y="702.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.02%)</title><rect x="186.9" y="755.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="189.9" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="187.2" y="755.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="190.2" y="766.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="187.5" y="755.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="190.5" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.07%)</title><rect x="187.5" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.5" y="750.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="188.3" y="755.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="191.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.13%)</title><rect x="188.8" y="819.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.8" y="830.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="188.8" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="191.8" y="814.0"></text>
</g>
<g>
<title>pthread_self (5 samples, 0.11%)</title><rect x="189.1" y="803.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="192.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.readerCleanup (1 samples, 0.02%)</title><rect x="190.4" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.4" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.writeBytes (2 samples, 0.04%)</title><rect x="190.6" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.6" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (2 samples, 0.04%)</title><rect x="190.6" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.6" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.setBytes (2 samples, 0.04%)</title><rect x="190.6" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="190.6" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.6" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="190.6" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.6" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="190.6" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.02%)</title><rect x="190.6" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.02%)</title><rect x="190.9" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="190.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.02%)</title><rect x="190.9" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.02%)</title><rect x="190.9" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.02%)</title><rect x="190.9" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.9" y="766.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.02%)</title><rect x="190.9" y="739.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="193.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (3 samples, 0.07%)</title><rect x="191.2" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.2" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.handler (1 samples, 0.02%)</title><rect x="191.9" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.9" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (360 samples, 8.02%)</title><rect x="192.2" y="947.0" width="94.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.2" y="958.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.select (359 samples, 8.00%)</title><rect x="192.2" y="931.0" width="94.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.2" y="942.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (1 samples, 0.02%)</title><rect x="192.2" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.reset (1 samples, 0.02%)</title><rect x="192.2" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.2" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.02%)</title><rect x="192.2" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (358 samples, 7.98%)</title><rect x="192.5" y="915.0" width="94.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.5" y="926.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (358 samples, 7.98%)</title><rect x="192.5" y="899.0" width="94.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.5" y="910.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (358 samples, 7.98%)</title><rect x="192.5" y="883.0" width="94.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.5" y="894.0">sun/nio/ch/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="193.0" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="196.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="193.0" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="196.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin_VaryDuration(Thread*) (1 samples, 0.02%)</title><rect x="193.0" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="196.0" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.02%)</title><rect x="193.0" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="196.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (16 samples, 0.36%)</title><rect x="193.3" y="867.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.3" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.20%)</title><rect x="194.6" y="851.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.6" y="862.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.18%)</title><rect x="194.8" y="835.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.18%)</title><rect x="194.8" y="819.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.02%)</title><rect x="196.7" y="803.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="196.9" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.9" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.09%)</title><rect x="197.5" y="867.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.5" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="197.5" y="851.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (273 samples, 6.08%)</title><rect x="198.5" y="867.0" width="71.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.5" y="878.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (272 samples, 6.06%)</title><rect x="198.5" y="851.0" width="71.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.5" y="862.0">sun/nio/..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="202.2" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="205.2" y="846.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="202.2" y="819.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="205.2" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) [clone .part.140] (1 samples, 0.02%)</title><rect x="202.2" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="202.2" y="787.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="205.2" y="798.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="202.2" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.2" y="782.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="202.2" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.2" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="202.2" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.2" y="750.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.02%)</title><rect x="202.2" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.2" y="734.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="202.2" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.2" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="202.2" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.2" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="202.2" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.2" y="686.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPollArrayWrapper_epollWait (2 samples, 0.04%)</title><rect x="202.5" y="835.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="205.5" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="202.7" y="819.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="205.7" y="830.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="203.0" y="835.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="206.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="203.5" y="835.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="206.5" y="846.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="203.5" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="206.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (251 samples, 5.59%)</title><rect x="203.8" y="835.0" width="66.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="206.8" y="846.0">epoll_w..</text>
</g>
<g>
<title>auditsys (2 samples, 0.04%)</title><rect x="208.8" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="211.8" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="208.8" y="803.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="211.8" y="814.0"></text>
</g>
<g>
<title>current_kernel_time (2 samples, 0.04%)</title><rect x="208.8" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.8" y="798.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="209.3" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.3" y="830.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="209.3" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.3" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="209.3" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.3" y="798.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="209.3" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.3" y="782.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="209.3" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.3" y="766.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="209.3" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="212.3" y="750.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="209.3" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="212.3" y="734.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="209.3" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.3" y="718.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="209.3" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.3" y="702.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="209.3" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.3" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="209.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="212.3" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="209.3" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.3" y="654.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="209.3" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="212.3" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="209.3" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="212.3" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="209.3" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.3" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="209.3" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.3" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="209.3" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.3" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="209.3" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.3" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="209.3" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.3" y="542.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="209.3" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="212.3" y="526.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="209.3" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="212.3" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="209.3" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="209.3" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.3" y="478.0"></text>
</g>
<g>
<title>ret_from_sys_call (2 samples, 0.04%)</title><rect x="209.6" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.6" y="830.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.04%)</title><rect x="210.1" y="819.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.1" y="830.0"></text>
</g>
<g>
<title>sysret_audit (8 samples, 0.18%)</title><rect x="210.6" y="819.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.6" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 0.18%)</title><rect x="210.6" y="803.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.6" y="814.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.04%)</title><rect x="210.9" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.9" y="798.0"></text>
</g>
<g>
<title>path_put (3 samples, 0.07%)</title><rect x="211.4" y="787.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="214.4" y="798.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.04%)</title><rect x="212.2" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.2" y="798.0"></text>
</g>
<g>
<title>sysret_check (1 samples, 0.02%)</title><rect x="212.7" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.7" y="830.0"></text>
</g>
<g>
<title>system_call_fastpath (216 samples, 4.81%)</title><rect x="213.0" y="819.0" width="56.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="216.0" y="830.0">system..</text>
</g>
<g>
<title>fget_light (1 samples, 0.02%)</title><rect x="213.2" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="216.2" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (214 samples, 4.77%)</title><rect x="213.5" y="803.0" width="56.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.5" y="814.0">sys_ep..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="215.6" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (190 samples, 4.23%)</title><rect x="215.9" y="787.0" width="49.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.9" y="798.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.27%)</title><rect x="216.4" y="771.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.4" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (33 samples, 0.74%)</title><rect x="219.5" y="771.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="222.5" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="219.8" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.8" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (26 samples, 0.58%)</title><rect x="220.3" y="755.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="223.3" y="766.0"></text>
</g>
<g>
<title>__list_add (1 samples, 0.02%)</title><rect x="224.8" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="227.8" y="750.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.02%)</title><rect x="225.1" y="739.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.13%)</title><rect x="225.3" y="739.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="228.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="226.1" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="226.6" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="229.6" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="226.9" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="229.9" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="227.2" y="755.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="230.2" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="227.4" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.4" y="766.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.04%)</title><rect x="227.7" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="230.7" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="228.2" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="231.2" y="782.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.04%)</title><rect x="228.5" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.5" y="782.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.04%)</title><rect x="228.5" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.5" y="766.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="228.5" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (130 samples, 2.90%)</title><rect x="229.0" y="771.0" width="34.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.0" y="782.0">sc..</text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.04%)</title><rect x="229.0" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="232.0" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="229.5" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (127 samples, 2.83%)</title><rect x="229.8" y="755.0" width="33.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.8" y="766.0">sc..</text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.16%)</title><rect x="230.6" y="739.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="233.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.16%)</title><rect x="230.6" y="723.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="233.6" y="734.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (7 samples, 0.16%)</title><rect x="232.4" y="739.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="235.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.13%)</title><rect x="232.4" y="723.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.4" y="734.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="234.0" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.0" y="734.0"></text>
</g>
<g>
<title>schedule (110 samples, 2.45%)</title><rect x="234.3" y="739.0" width="28.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.3" y="750.0">sc..</text>
</g>
<g>
<title>__schedule (108 samples, 2.41%)</title><rect x="234.5" y="723.0" width="28.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.5" y="734.0">__..</text>
</g>
<g>
<title>finish_task_switch (103 samples, 2.30%)</title><rect x="235.1" y="707.0" width="27.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.1" y="718.0">f..</text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.07%)</title><rect x="262.1" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.1" y="718.0"></text>
</g>
<g>
<title>__irqentry_text_start (3 samples, 0.07%)</title><rect x="262.1" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.1" y="702.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.07%)</title><rect x="262.1" y="675.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.1" y="686.0"></text>
</g>
<g>
<title>do_softirq (3 samples, 0.07%)</title><rect x="262.1" y="659.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="265.1" y="670.0"></text>
</g>
<g>
<title>call_softirq (3 samples, 0.07%)</title><rect x="262.1" y="643.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.1" y="654.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.07%)</title><rect x="262.1" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="265.1" y="638.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.07%)</title><rect x="262.1" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.1" y="622.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (3 samples, 0.07%)</title><rect x="262.1" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.1" y="606.0"></text>
</g>
<g>
<title>napi_gro_receive (3 samples, 0.07%)</title><rect x="262.1" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.1" y="590.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (3 samples, 0.07%)</title><rect x="262.1" y="563.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.1" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.07%)</title><rect x="262.1" y="547.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.1" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="262.1" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.1" y="542.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.07%)</title><rect x="262.1" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.1" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.07%)</title><rect x="262.1" y="499.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="265.1" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.07%)</title><rect x="262.1" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.1" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.07%)</title><rect x="262.1" y="467.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.1" y="478.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.07%)</title><rect x="262.1" y="451.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.1" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.07%)</title><rect x="262.1" y="435.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.1" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.07%)</title><rect x="262.1" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="262.1" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="265.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="262.1" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.1" y="398.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="262.1" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.1" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="262.4" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.4" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="262.4" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="265.4" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="262.4" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="262.4" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="265.4" y="366.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="262.7" y="403.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.7" y="414.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="262.7" y="387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.7" y="398.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.02%)</title><rect x="262.9" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="265.9" y="734.0"></text>
</g>
<g>
<title>select_estimate_accuracy (8 samples, 0.18%)</title><rect x="263.2" y="771.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="266.2" y="782.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.07%)</title><rect x="264.5" y="755.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="267.5" y="766.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.04%)</title><rect x="264.8" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.8" y="750.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="264.8" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="267.8" y="734.0"></text>
</g>
<g>
<title>set_normalized_timespec (1 samples, 0.02%)</title><rect x="265.3" y="771.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.3" y="782.0"></text>
</g>
<g>
<title>task_nice (1 samples, 0.02%)</title><rect x="265.6" y="771.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="268.6" y="782.0"></text>
</g>
<g>
<title>fget_light (6 samples, 0.13%)</title><rect x="265.8" y="787.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.8" y="798.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="267.4" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="270.4" y="798.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="267.9" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="268.2" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="271.2" y="798.0"></text>
</g>
<g>
<title>select_estimate_accuracy (4 samples, 0.09%)</title><rect x="268.5" y="787.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.5" y="798.0"></text>
</g>
<g>
<title>timespec_add_safe (1 samples, 0.02%)</title><rect x="269.5" y="787.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.5" y="798.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="269.8" y="835.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="272.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.updateRegistrations (1 samples, 0.02%)</title><rect x="270.0" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.updateSelectedKeys (10 samples, 0.22%)</title><rect x="270.3" y="867.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.3" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="270.3" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="270.3" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.02%)</title><rect x="270.3" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.getEventOps (3 samples, 0.07%)</title><rect x="270.6" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (6 samples, 0.13%)</title><rect x="271.3" y="851.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (6 samples, 0.13%)</title><rect x="271.3" y="835.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (52 samples, 1.16%)</title><rect x="272.9" y="867.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.9" y="878.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (48 samples, 1.07%)</title><rect x="273.2" y="851.0" width="12.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="276.2" y="862.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.04%)</title><rect x="274.2" y="835.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="277.2" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="274.2" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.2" y="830.0"></text>
</g>
<g>
<title>current_kernel_time (1 samples, 0.02%)</title><rect x="274.5" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.5" y="814.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.02%)</title><rect x="274.8" y="835.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="277.8" y="846.0"></text>
</g>
<g>
<title>system_call_fastpath (41 samples, 0.91%)</title><rect x="275.0" y="835.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="846.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.04%)</title><rect x="275.6" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.6" y="830.0"></text>
</g>
<g>
<title>sys_read (37 samples, 0.82%)</title><rect x="276.1" y="819.0" width="9.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="279.1" y="830.0"></text>
</g>
<g>
<title>vfs_read (36 samples, 0.80%)</title><rect x="276.3" y="803.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.3" y="814.0"></text>
</g>
<g>
<title>do_sync_read (28 samples, 0.62%)</title><rect x="276.3" y="787.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="279.3" y="798.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="276.6" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="279.6" y="782.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (1 samples, 0.02%)</title><rect x="277.4" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="280.4" y="782.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (1 samples, 0.02%)</title><rect x="277.7" y="771.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="280.7" y="782.0"></text>
</g>
<g>
<title>generic_pipe_buf_unmap (3 samples, 0.07%)</title><rect x="277.9" y="771.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.9" y="782.0"></text>
</g>
<g>
<title>pipe_read (17 samples, 0.38%)</title><rect x="278.7" y="771.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.7" y="782.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="280.5" y="755.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="283.5" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="281.1" y="739.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.1" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.07%)</title><rect x="281.3" y="755.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="284.3" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="281.3" y="739.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="284.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="281.3" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="284.3" y="734.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (1 samples, 0.02%)</title><rect x="282.1" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.1" y="766.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="282.4" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.4" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="282.4" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.4" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="282.4" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="285.4" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="282.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.4" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="282.4" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.4" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="282.4" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.4" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="282.4" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.4" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="282.4" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.4" y="654.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="282.4" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.4" y="638.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="282.4" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.4" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="282.4" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.4" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="282.4" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="285.4" y="590.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="282.4" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.4" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="282.4" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="285.4" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="282.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.4" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="282.4" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="285.4" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="282.4" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="282.4" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.4" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="282.4" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.4" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="282.4" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="285.4" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="282.4" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="285.4" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="282.4" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="282.4" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.4" y="414.0"></text>
</g>
<g>
<title>static_key_enabled (1 samples, 0.02%)</title><rect x="282.7" y="755.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.7" y="766.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="282.9" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.9" y="766.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="282.9" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.9" y="750.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.04%)</title><rect x="283.2" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="286.2" y="782.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.04%)</title><rect x="283.7" y="787.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="286.7" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.13%)</title><rect x="284.2" y="787.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.2" y="798.0"></text>
</g>
<g>
<title>cap_file_permission (1 samples, 0.02%)</title><rect x="284.5" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.5" y="782.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="284.8" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.8" y="782.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="285.3" y="771.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.3" y="782.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="285.3" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.3" y="766.0"></text>
</g>
<g>
<title>__libc_read (2 samples, 0.04%)</title><rect x="285.8" y="851.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="288.8" y="862.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.02%)</title><rect x="286.3" y="851.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="289.3" y="862.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="286.3" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="289.3" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.deadlineToDelayNanos (1 samples, 0.02%)</title><rect x="286.6" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.6" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.deadlineToDelayNanos (1 samples, 0.02%)</title><rect x="286.6" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="286.6" y="899.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="289.6" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.nextScheduledTaskDeadlineNanos (3 samples, 0.07%)</title><rect x="286.9" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.9" y="958.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (3 samples, 0.07%)</title><rect x="286.9" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.9" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.isShuttingDown (2 samples, 0.04%)</title><rect x="287.6" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.6" y="958.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (928 samples, 20.68%)</title><rect x="288.2" y="947.0" width="244.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.2" y="958.0">io/netty/util/concurrent/SingleT..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$179/1762228798.run (1 samples, 0.02%)</title><rect x="289.0" y="931.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.0" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (905 samples, 20.16%)</title><rect x="289.2" y="931.0" width="238.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.2" y="942.0">io/netty/util/concurrent/Abstra..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$179/1762228798.run (887 samples, 19.76%)</title><rect x="289.2" y="915.0" width="233.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.2" y="926.0">com/datastax/oss/driver/interna..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (887 samples, 19.76%)</title><rect x="289.2" y="899.0" width="233.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.2" y="910.0">com/datastax/oss/driver/interna..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (529 samples, 11.79%)</title><rect x="289.5" y="883.0" width="139.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.5" y="894.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (529 samples, 11.79%)</title><rect x="289.5" y="867.0" width="139.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.5" y="878.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (529 samples, 11.79%)</title><rect x="289.5" y="851.0" width="139.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.5" y="862.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.02%)</title><rect x="289.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.5" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (528 samples, 11.76%)</title><rect x="289.8" y="835.0" width="138.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.8" y="846.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (528 samples, 11.76%)</title><rect x="289.8" y="819.0" width="138.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.8" y="830.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (528 samples, 11.76%)</title><rect x="289.8" y="803.0" width="138.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.8" y="814.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (525 samples, 11.70%)</title><rect x="290.0" y="787.0" width="138.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.0" y="798.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addFlush (6 samples, 0.13%)</title><rect x="290.0" y="771.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (519 samples, 11.56%)</title><rect x="291.6" y="771.0" width="136.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.6" y="782.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (519 samples, 11.56%)</title><rect x="291.6" y="755.0" width="136.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.6" y="766.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (516 samples, 11.50%)</title><rect x="292.1" y="739.0" width="135.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.1" y="750.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (31 samples, 0.69%)</title><rect x="292.4" y="723.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.4" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedCompositeByteBuf.readerIndex (1 samples, 0.02%)</title><rect x="293.2" y="707.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (20 samples, 0.45%)</title><rect x="293.4" y="707.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.4" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (18 samples, 0.40%)</title><rect x="293.7" y="691.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (18 samples, 0.40%)</title><rect x="293.7" y="675.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.7" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.02%)</title><rect x="294.7" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (1 samples, 0.02%)</title><rect x="294.7" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.7" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.toComponentIndex0 (1 samples, 0.02%)</title><rect x="295.0" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBuffer (3 samples, 0.07%)</title><rect x="295.3" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.3" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.duplicateInternalNioBuffer (2 samples, 0.04%)</title><rect x="295.3" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (2 samples, 0.04%)</title><rect x="295.3" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.3" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.02%)</title><rect x="295.5" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.5" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.02%)</title><rect x="295.5" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.5" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="295.5" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.slice (1 samples, 0.02%)</title><rect x="295.8" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="295.8" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="298.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="295.8" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="298.8" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="295.8" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="298.8" y="606.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab_event(KlassHandle, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="295.8" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.8" y="590.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="295.8" y="563.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="298.8" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/RecyclableArrayList.newInstance (9 samples, 0.20%)</title><rect x="296.1" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.1" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (4 samples, 0.09%)</title><rect x="296.1" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.1" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="296.1" y="627.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.1" y="638.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (3 samples, 0.07%)</title><rect x="296.3" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.3" y="638.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.02%)</title><rect x="296.6" y="611.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.6" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="296.8" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacity (5 samples, 0.11%)</title><rect x="297.1" y="643.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (5 samples, 0.11%)</title><rect x="297.1" y="627.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.1" y="638.0"></text>
</g>
<g>
<title>BarrierSet::static_write_ref_array_post(HeapWord*, unsigned long) (2 samples, 0.04%)</title><rect x="297.1" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="300.1" y="622.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (2 samples, 0.04%)</title><rect x="297.6" y="611.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="300.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="298.2" y="611.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="298.2" y="595.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.2" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.02%)</title><rect x="298.4" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.4" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="298.7" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.7" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.02%)</title><rect x="298.7" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (6 samples, 0.13%)</title><rect x="299.0" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.0" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.nioBuffers (3 samples, 0.07%)</title><rect x="299.7" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (88 samples, 1.96%)</title><rect x="300.5" y="723.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.5" y="734.0">i..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (5 samples, 0.11%)</title><rect x="302.9" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.04%)</title><rect x="303.7" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.current (1 samples, 0.02%)</title><rect x="304.2" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (1 samples, 0.02%)</title><rect x="304.2" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (73 samples, 1.63%)</title><rect x="304.5" y="707.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.recycle (1 samples, 0.02%)</title><rect x="304.5" y="691.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.5" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.02%)</title><rect x="304.5" y="675.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.5" y="686.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (1 samples, 0.02%)</title><rect x="304.5" y="659.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.5" y="670.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (1 samples, 0.02%)</title><rect x="304.5" y="643.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.5" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (1 samples, 0.02%)</title><rect x="304.7" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeEntry (3 samples, 0.07%)</title><rect x="305.0" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.0" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareCompositeByteBuf.release (1 samples, 0.02%)</title><rect x="305.5" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (38 samples, 0.85%)</title><rect x="305.8" y="691.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.8" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (38 samples, 0.85%)</title><rect x="305.8" y="675.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.8" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (38 samples, 0.85%)</title><rect x="305.8" y="659.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.8" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (38 samples, 0.85%)</title><rect x="305.8" y="643.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.8" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (38 samples, 0.85%)</title><rect x="305.8" y="627.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.8" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.checkNotifyWaiters (2 samples, 0.04%)</title><rect x="305.8" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.8" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (36 samples, 0.80%)</title><rect x="306.3" y="611.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.3" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (2 samples, 0.04%)</title><rect x="306.3" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.3" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.inEventLoop (2 samples, 0.04%)</title><rect x="306.3" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.3" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (24 samples, 0.53%)</title><rect x="306.8" y="595.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners0 (24 samples, 0.53%)</title><rect x="306.8" y="579.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.8" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (24 samples, 0.53%)</title><rect x="306.8" y="563.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (23 samples, 0.51%)</title><rect x="307.1" y="547.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.02%)</title><rect x="307.4" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.4" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.02%)</title><rect x="307.4" y="515.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.4" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.scheduleSpeculativeExecution (11 samples, 0.25%)</title><rect x="307.6" y="531.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.6" y="542.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (9 samples, 0.20%)</title><rect x="307.9" y="515.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.9" y="526.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="308.7" y="499.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="311.7" y="510.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="308.7" y="483.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="311.7" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (3 samples, 0.07%)</title><rect x="309.5" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.5" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (3 samples, 0.07%)</title><rect x="309.5" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.5" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (3 samples, 0.07%)</title><rect x="309.5" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.5" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offerSlowPath (1 samples, 0.02%)</title><rect x="309.5" y="451.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.5" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (2 samples, 0.04%)</title><rect x="309.7" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/95696490.linkToTargetMethod (1 samples, 0.02%)</title><rect x="310.3" y="515.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1741008995.invokeStatic_LI_L (1 samples, 0.02%)</title><rect x="310.3" y="499.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.3" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback$$Lambda$294/22819859.get$Lambda (1 samples, 0.02%)</title><rect x="310.3" y="483.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.3" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="310.3" y="467.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="313.3" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="310.3" y="451.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="313.3" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="310.3" y="435.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="313.3" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="310.3" y="419.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="313.3" y="430.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/specex/ConstantSpeculativeExecutionPolicy.nextExecution (1 samples, 0.02%)</title><rect x="310.5" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (9 samples, 0.20%)</title><rect x="310.8" y="531.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.setArray (3 samples, 0.07%)</title><rect x="311.6" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="312.4" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="312.4" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.07%)</title><rect x="312.4" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.04%)</title><rect x="312.6" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.6" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (10 samples, 0.22%)</title><rect x="313.2" y="595.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (10 samples, 0.22%)</title><rect x="313.2" y="579.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="313.2" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.04%)</title><rect x="313.2" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.2" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.04%)</title><rect x="313.2" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (8 samples, 0.18%)</title><rect x="313.7" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (8 samples, 0.18%)</title><rect x="313.7" y="547.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (8 samples, 0.18%)</title><rect x="313.7" y="531.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.7" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (5 samples, 0.11%)</title><rect x="313.7" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.7" y="526.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="315.0" y="515.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="318.0" y="526.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (30 samples, 0.67%)</title><rect x="315.8" y="691.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.8" y="702.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (30 samples, 0.67%)</title><rect x="315.8" y="675.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.8" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (29 samples, 0.65%)</title><rect x="315.8" y="659.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.8" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (29 samples, 0.65%)</title><rect x="315.8" y="643.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (26 samples, 0.58%)</title><rect x="315.8" y="627.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (26 samples, 0.58%)</title><rect x="315.8" y="611.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.8" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (25 samples, 0.56%)</title><rect x="315.8" y="595.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.8" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (18 samples, 0.40%)</title><rect x="315.8" y="579.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.8" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (18 samples, 0.40%)</title><rect x="315.8" y="563.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.8" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (15 samples, 0.33%)</title><rect x="315.8" y="547.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.8" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (12 samples, 0.27%)</title><rect x="316.0" y="531.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (12 samples, 0.27%)</title><rect x="316.0" y="515.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.0" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (5 samples, 0.11%)</title><rect x="316.0" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.0" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.dropHandle (2 samples, 0.04%)</title><rect x="316.0" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.04%)</title><rect x="316.6" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.6" y="494.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.02%)</title><rect x="316.8" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.8" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="316.8" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.8" y="462.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.02%)</title><rect x="316.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.8" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (1 samples, 0.02%)</title><rect x="317.1" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.1" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (7 samples, 0.16%)</title><rect x="317.4" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerLimitField.lvProducerLimit (1 samples, 0.02%)</title><rect x="317.4" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.4" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (6 samples, 0.13%)</title><rect x="317.6" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.6" y="494.0"></text>
</g>
<g>
<title>g1_post_barrier_slow Runtime1 stub (2 samples, 0.04%)</title><rect x="318.7" y="467.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="321.7" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (2 samples, 0.04%)</title><rect x="319.2" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.2" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (3 samples, 0.07%)</title><rect x="319.7" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.7" y="558.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (3 samples, 0.07%)</title><rect x="319.7" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.7" y="542.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.push (3 samples, 0.07%)</title><rect x="319.7" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.7" y="526.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pushNow (3 samples, 0.07%)</title><rect x="319.7" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="510.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.dropHandle (1 samples, 0.02%)</title><rect x="320.2" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.2" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (7 samples, 0.16%)</title><rect x="320.5" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.tryFinalRelease0 (7 samples, 0.16%)</title><rect x="320.5" y="563.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (7 samples, 0.16%)</title><rect x="320.5" y="547.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.5" y="558.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.isDirect (2 samples, 0.04%)</title><rect x="320.8" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.8" y="542.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="321.0" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.0" y="526.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="321.0" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.0" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="321.0" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.0" y="494.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="321.0" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="324.0" y="478.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="321.0" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.0" y="462.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="321.0" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.0" y="446.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="321.0" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.0" y="430.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="321.0" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.0" y="414.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="321.0" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.0" y="398.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="321.0" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.0" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="321.0" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.0" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="321.0" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.0" y="350.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="321.0" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.0" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="321.0" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="321.0" y="291.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="324.0" y="302.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="321.0" y="275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.0" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.tinyIdx (1 samples, 0.02%)</title><rect x="321.3" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.3" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (1 samples, 0.02%)</title><rect x="321.6" y="531.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck (2 samples, 0.04%)</title><rect x="321.8" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.8" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.04%)</title><rect x="321.8" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.8" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.release (1 samples, 0.02%)</title><rect x="322.4" y="595.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.4" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareByteBuf.closeLeak (1 samples, 0.02%)</title><rect x="322.4" y="579.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (1 samples, 0.02%)</title><rect x="322.4" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (1 samples, 0.02%)</title><rect x="322.4" y="547.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (1 samples, 0.02%)</title><rect x="322.4" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.4" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.02%)</title><rect x="322.6" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.6" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.02%)</title><rect x="322.6" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.6" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.02%)</title><rect x="322.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.6" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.02%)</title><rect x="322.6" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.lvProducerIndex (2 samples, 0.04%)</title><rect x="322.9" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareCompositeByteBuf.release (1 samples, 0.02%)</title><rect x="323.4" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.4" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/SimpleLeakAwareCompositeByteBuf.closeLeak (1 samples, 0.02%)</title><rect x="323.4" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (396 samples, 8.82%)</title><rect x="323.7" y="723.0" width="104.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.7" y="734.0">sun/nio/ch/S..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.13%)</title><rect x="324.7" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.7" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.11%)</title><rect x="325.0" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (378 samples, 8.42%)</title><rect x="326.3" y="707.0" width="99.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.3" y="718.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.02%)</title><rect x="326.8" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (5 samples, 0.11%)</title><rect x="327.1" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.09%)</title><rect x="327.3" y="675.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (4 samples, 0.09%)</title><rect x="327.3" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.09%)</title><rect x="327.3" y="643.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.04%)</title><rect x="327.9" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.putBase (1 samples, 0.02%)</title><rect x="328.4" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeObject.putLong (1 samples, 0.02%)</title><rect x="328.4" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (2 samples, 0.04%)</title><rect x="328.7" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (367 samples, 8.18%)</title><rect x="329.2" y="691.0" width="96.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.2" y="702.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (367 samples, 8.18%)</title><rect x="329.2" y="675.0" width="96.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.2" y="686.0">sun/nio/ch/..</text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (3 samples, 0.07%)</title><rect x="329.5" y="659.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="332.5" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.07%)</title><rect x="329.5" y="643.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.5" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.02%)</title><rect x="330.2" y="659.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="333.2" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="330.5" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="333.5" y="670.0"></text>
</g>
<g>
<title>__libc_writev (360 samples, 8.02%)</title><rect x="330.8" y="659.0" width="94.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="333.8" y="670.0">__libc_writev</text>
</g>
<g>
<title>auditsys (1 samples, 0.02%)</title><rect x="333.1" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="336.1" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="333.1" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="336.1" y="638.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.07%)</title><rect x="333.4" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.4" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.07%)</title><rect x="333.4" y="627.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="336.4" y="638.0"></text>
</g>
<g>
<title>dput (1 samples, 0.02%)</title><rect x="333.9" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.9" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="334.2" y="643.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="337.2" y="654.0"></text>
</g>
<g>
<title>system_call_fastpath (346 samples, 7.71%)</title><rect x="334.4" y="643.0" width="91.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="337.4" y="654.0">system_cal..</text>
</g>
<g>
<title>fget_light (1 samples, 0.02%)</title><rect x="334.7" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="337.7" y="638.0"></text>
</g>
<g>
<title>sys_writev (344 samples, 7.66%)</title><rect x="335.0" y="627.0" width="90.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="338.0" y="638.0">sys_writev</text>
</g>
<g>
<title>do_readv_writev (1 samples, 0.02%)</title><rect x="335.2" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.2" y="622.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.02%)</title><rect x="335.5" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="338.5" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="335.8" y="611.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="338.8" y="622.0"></text>
</g>
<g>
<title>vfs_writev (340 samples, 7.58%)</title><rect x="336.0" y="611.0" width="89.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="339.0" y="622.0">vfs_writev</text>
</g>
<g>
<title>do_readv_writev (339 samples, 7.55%)</title><rect x="336.3" y="595.0" width="89.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.3" y="606.0">do_readv_w..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="336.8" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.8" y="590.0"></text>
</g>
<g>
<title>do_sync_readv_writev (325 samples, 7.24%)</title><rect x="337.1" y="579.0" width="85.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.1" y="590.0">do_sync_re..</text>
</g>
<g>
<title>sock_aio_write (323 samples, 7.20%)</title><rect x="337.6" y="563.0" width="84.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.6" y="574.0">sock_aio_w..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="338.1" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="341.1" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="338.1" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.1" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="338.1" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="341.1" y="526.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="338.1" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.1" y="510.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="338.1" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.1" y="494.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="338.1" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.1" y="478.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="338.1" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="338.1" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="341.1" y="446.0"></text>
</g>
<g>
<title>inet_sendmsg (317 samples, 7.06%)</title><rect x="338.4" y="547.0" width="83.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.4" y="558.0">inet_send..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="339.4" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="340.0" y="531.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="343.0" y="542.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="340.2" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="343.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="340.5" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.5" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (305 samples, 6.80%)</title><rect x="340.8" y="531.0" width="80.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="343.8" y="542.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.04%)</title><rect x="343.4" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="343.9" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="346.9" y="526.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="344.2" y="499.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="347.2" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="344.4" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.4" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="344.7" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.7" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.09%)</title><rect x="345.0" y="515.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.0" y="526.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="346.0" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.0" y="526.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="346.5" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.5" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="346.5" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.5" y="510.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="346.8" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.8" y="526.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="346.8" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.8" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="346.8" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="349.8" y="494.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="346.8" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.8" y="478.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="346.8" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="349.8" y="462.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="346.8" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.8" y="446.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="346.8" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="346.8" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="349.8" y="414.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="346.8" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.8" y="398.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="346.8" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="346.8" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="349.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="346.8" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="349.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="346.8" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="346.8" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="349.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="346.8" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="346.8" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="346.8" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.8" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="346.8" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.8" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="346.8" y="227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.8" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="346.8" y="211.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.8" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="346.8" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="346.8" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.8" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="346.8" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.8" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 0.42%)</title><rect x="347.1" y="515.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.40%)</title><rect x="347.1" y="499.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.1" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="347.3" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.3" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (8 samples, 0.18%)</title><rect x="347.6" y="483.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.6" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.16%)</title><rect x="347.6" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="350.6" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="349.4" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.4" y="478.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="349.7" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.11%)</title><rect x="350.0" y="483.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.0" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="351.3" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.3" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (1 samples, 0.02%)</title><rect x="351.8" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.8" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="352.1" y="515.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (256 samples, 5.70%)</title><rect x="352.3" y="515.0" width="67.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.3" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (256 samples, 5.70%)</title><rect x="352.3" y="499.0" width="67.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.3" y="510.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (256 samples, 5.70%)</title><rect x="352.3" y="483.0" width="67.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.3" y="494.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="352.9" y="467.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.9" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="353.1" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.1" y="478.0"></text>
</g>
<g>
<title>local_clock (1 samples, 0.02%)</title><rect x="353.4" y="467.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.4" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.29%)</title><rect x="353.6" y="467.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="356.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="353.9" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.9" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.25%)</title><rect x="354.2" y="451.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="357.2" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="354.4" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="357.4" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="355.0" y="435.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="358.0" y="446.0"></text>
</g>
<g>
<title>lock_timer_base.isra.37 (1 samples, 0.02%)</title><rect x="355.0" y="419.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="358.0" y="430.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.16%)</title><rect x="355.2" y="419.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.16%)</title><rect x="355.2" y="403.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.2" y="414.0"></text>
</g>
<g>
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="357.1" y="467.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.1" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="357.3" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.3" y="478.0"></text>
</g>
<g>
<title>usecs_to_jiffies (1 samples, 0.02%)</title><rect x="357.6" y="451.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="360.6" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (235 samples, 5.24%)</title><rect x="357.8" y="467.0" width="61.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.8" y="478.0">tcp_tr..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="358.6" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.6" y="462.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="358.9" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.9" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (225 samples, 5.01%)</title><rect x="359.2" y="451.0" width="59.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.2" y="462.0">ip_que..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.04%)</title><rect x="359.7" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.7" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="360.0" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.0" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (220 samples, 4.90%)</title><rect x="360.2" y="435.0" width="57.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="363.2" y="446.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out_sk (13 samples, 0.29%)</title><rect x="360.2" y="419.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.27%)</title><rect x="360.2" y="403.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="363.2" y="414.0"></text>
</g>
<g>
<title>nf_iterate (11 samples, 0.25%)</title><rect x="360.5" y="387.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.5" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.07%)</title><rect x="360.7" y="371.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="363.7" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.16%)</title><rect x="361.5" y="371.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.5" y="382.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.11%)</title><rect x="362.1" y="355.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.1" y="366.0"></text>
</g>
<g>
<title>nf_iterate (1 samples, 0.02%)</title><rect x="363.4" y="403.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.4" y="414.0"></text>
</g>
<g>
<title>ip_output (207 samples, 4.61%)</title><rect x="363.6" y="419.0" width="54.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.6" y="430.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (205 samples, 4.57%)</title><rect x="363.9" y="403.0" width="53.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="366.9" y="414.0">ip_fi..</text>
</g>
<g>
<title>dev_queue_xmit (194 samples, 4.32%)</title><rect x="366.3" y="387.0" width="51.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.3" y="398.0">dev_q..</text>
</g>
<g>
<title>__dev_queue_xmit (193 samples, 4.30%)</title><rect x="366.3" y="371.0" width="50.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.3" y="382.0">__dev..</text>
</g>
<g>
<title>__qdisc_run (3 samples, 0.07%)</title><rect x="367.6" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.6" y="366.0"></text>
</g>
<g>
<title>sch_direct_xmit (3 samples, 0.07%)</title><rect x="367.6" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.07%)</title><rect x="367.6" y="323.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.6" y="334.0"></text>
</g>
<g>
<title>free_old_xmit_skbs.isra.32?[virtio_net] (1 samples, 0.02%)</title><rect x="367.6" y="307.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.6" y="318.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (2 samples, 0.04%)</title><rect x="367.8" y="307.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="367.8" y="291.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.8" y="302.0"></text>
</g>
<g>
<title>sock_wfree (1 samples, 0.02%)</title><rect x="368.1" y="275.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.1" y="286.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="368.4" y="355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.4" y="366.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="368.6" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.6" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="368.6" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.6" y="350.0"></text>
</g>
<g>
<title>sch_direct_xmit (180 samples, 4.01%)</title><rect x="368.9" y="355.0" width="47.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.9" y="366.0">sch_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="368.9" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (168 samples, 3.74%)</title><rect x="369.2" y="339.0" width="44.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.2" y="350.0">dev_..</text>
</g>
<g>
<title>cleanup_module?[ghash_clmulni_intel] (1 samples, 0.02%)</title><rect x="369.7" y="323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.7" y="334.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="369.9" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="372.9" y="334.0"></text>
</g>
<g>
<title>ktime_get_real (1 samples, 0.02%)</title><rect x="370.2" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="373.2" y="334.0"></text>
</g>
<g>
<title>getnstimeofday64 (1 samples, 0.02%)</title><rect x="370.2" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.2" y="318.0"></text>
</g>
<g>
<title>__getnstimeofday64 (1 samples, 0.02%)</title><rect x="370.2" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.2" y="302.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="370.2" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.2" y="286.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="370.2" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.2" y="270.0"></text>
</g>
<g>
<title>packet_rcv (9 samples, 0.20%)</title><rect x="370.5" y="323.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.5" y="334.0"></text>
</g>
<g>
<title>consume_skb (6 samples, 0.13%)</title><rect x="370.7" y="307.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.7" y="318.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="371.3" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="374.3" y="302.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="371.3" y="275.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.3" y="286.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="372.0" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.0" y="302.0"></text>
</g>
<g>
<title>sk_load_byte_positive_offset (2 samples, 0.04%)</title><rect x="372.3" y="307.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="375.3" y="318.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.11%)</title><rect x="372.8" y="323.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.8" y="334.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="373.1" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.1" y="318.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.07%)</title><rect x="373.4" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="376.4" y="318.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (149 samples, 3.32%)</title><rect x="374.1" y="323.0" width="39.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="377.1" y="334.0">sta..</text>
</g>
<g>
<title>__dev_kfree_skb_any (1 samples, 0.02%)</title><rect x="374.7" y="307.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="377.7" y="318.0"></text>
</g>
<g>
<title>__memset (1 samples, 0.02%)</title><rect x="374.9" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.9" y="318.0"></text>
</g>
<g>
<title>free_old_xmit_skbs.isra.32?[virtio_net] (15 samples, 0.33%)</title><rect x="375.2" y="307.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.2" y="318.0"></text>
</g>
<g>
<title>__dev_kfree_skb_any (3 samples, 0.07%)</title><rect x="376.5" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.5" y="302.0"></text>
</g>
<g>
<title>consume_skb (3 samples, 0.07%)</title><rect x="376.5" y="275.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.5" y="286.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="376.5" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="379.5" y="270.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="376.5" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.5" y="254.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="376.5" y="227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.5" y="238.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.51 (1 samples, 0.02%)</title><rect x="376.5" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.5" y="222.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="376.8" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.8" y="270.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="376.8" y="243.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="379.8" y="254.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="377.0" y="227.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="380.0" y="238.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (7 samples, 0.16%)</title><rect x="377.3" y="291.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.3" y="302.0"></text>
</g>
<g>
<title>detach_buf?[virtio_ring] (5 samples, 0.11%)</title><rect x="377.8" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="380.8" y="286.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.09%)</title><rect x="378.1" y="259.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.1" y="270.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="378.9" y="243.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.9" y="254.0"></text>
</g>
<g>
<title>sock_wfree (1 samples, 0.02%)</title><rect x="379.1" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.1" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="379.4" y="307.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.4" y="318.0"></text>
</g>
<g>
<title>virtqueue_add_outbuf?[virtio_ring] (2 samples, 0.04%)</title><rect x="379.7" y="307.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="382.7" y="318.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="379.9" y="291.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="382.9" y="302.0"></text>
</g>
<g>
<title>virtqueue_kick?[virtio_ring] (124 samples, 2.76%)</title><rect x="380.2" y="307.0" width="32.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="383.2" y="318.0">vi..</text>
</g>
<g>
<title>iowrite16 (123 samples, 2.74%)</title><rect x="380.2" y="291.0" width="32.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.2" y="302.0">io..</text>
</g>
<g>
<title>vp_notify?[virtio_pci] (1 samples, 0.02%)</title><rect x="412.5" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.5" y="302.0"></text>
</g>
<g>
<title>vp_notify?[virtio_pci] (1 samples, 0.02%)</title><rect x="412.8" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.8" y="318.0"></text>
</g>
<g>
<title>vring_map_single.constprop.24?[virtio_ring] (1 samples, 0.02%)</title><rect x="413.1" y="307.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.1" y="318.0"></text>
</g>
<g>
<title>packet_rcv (2 samples, 0.04%)</title><rect x="413.3" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.3" y="350.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (1 samples, 0.02%)</title><rect x="413.9" y="339.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (8 samples, 0.18%)</title><rect x="414.1" y="339.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.1" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (8 samples, 0.18%)</title><rect x="414.1" y="323.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="417.1" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.07%)</title><rect x="414.6" y="307.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.6" y="318.0"></text>
</g>
<g>
<title>passthru_features_check (1 samples, 0.02%)</title><rect x="415.4" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.4" y="318.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.04%)</title><rect x="415.7" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.7" y="318.0"></text>
</g>
<g>
<title>virtnet_select_queue?[virtio_net] (3 samples, 0.07%)</title><rect x="416.2" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.2" y="366.0"></text>
</g>
<g>
<title>_raw_qspin_lock (1 samples, 0.02%)</title><rect x="417.0" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.0" y="382.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="417.3" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="417.3" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.3" y="382.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.04%)</title><rect x="417.3" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="420.3" y="366.0"></text>
</g>
<g>
<title>call_softirq (2 samples, 0.04%)</title><rect x="417.3" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.3" y="350.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.04%)</title><rect x="417.3" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.3" y="334.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.04%)</title><rect x="417.3" y="307.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.3" y="318.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (2 samples, 0.04%)</title><rect x="417.3" y="291.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.3" y="302.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="417.3" y="275.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="420.3" y="286.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="417.3" y="259.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.3" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="417.3" y="243.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.3" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="417.3" y="227.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="417.3" y="211.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="417.3" y="195.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="417.3" y="179.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.3" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="417.3" y="163.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="420.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="417.3" y="147.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="417.3" y="131.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="417.3" y="115.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.3" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="417.3" y="99.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.3" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="417.3" y="83.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="417.3" y="67.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="417.3" y="51.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.3" y="62.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (1 samples, 0.02%)</title><rect x="417.5" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.5" y="286.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="417.8" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="420.8" y="414.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="418.1" y="435.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="421.1" y="446.0"></text>
</g>
<g>
<title>local_clock (1 samples, 0.02%)</title><rect x="418.3" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.3" y="462.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="418.3" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="421.3" y="446.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="418.3" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="421.3" y="430.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="418.3" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="421.3" y="414.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="418.6" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.6" y="462.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="418.6" y="435.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="421.6" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="418.8" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.8" y="430.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="419.1" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.1" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="419.4" y="451.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="422.4" y="462.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="419.4" y="435.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="422.4" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.11%)</title><rect x="419.6" y="515.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.6" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="419.6" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.6" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.09%)</title><rect x="419.9" y="499.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="422.9" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="419.9" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="422.9" y="494.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="420.2" y="467.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.2" y="478.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.04%)</title><rect x="420.4" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.4" y="494.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.07%)</title><rect x="420.9" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="421.7" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.04%)</title><rect x="422.0" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.0" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="422.5" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="425.5" y="590.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (6 samples, 0.13%)</title><rect x="422.8" y="579.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="425.8" y="590.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.11%)</title><rect x="422.8" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.8" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="423.3" y="547.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="426.3" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="424.1" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.1" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.09%)</title><rect x="424.4" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.4" y="590.0"></text>
</g>
<g>
<title>cap_file_permission (1 samples, 0.02%)</title><rect x="424.9" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.9" y="574.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="425.2" y="563.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.2" y="574.0"></text>
</g>
<g>
<title>convertLongReturnVal (1 samples, 0.02%)</title><rect x="425.4" y="659.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="428.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.11%)</title><rect x="425.7" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.7" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.02%)</title><rect x="426.5" y="691.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="429.5" y="702.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.02%)</title><rect x="426.7" y="691.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="429.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureWriteOpen (3 samples, 0.07%)</title><rect x="427.0" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.02%)</title><rect x="427.5" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.isActive (1 samples, 0.02%)</title><rect x="427.8" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.8" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (2 samples, 0.04%)</title><rect x="428.0" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (330 samples, 7.35%)</title><rect x="428.6" y="883.0" width="86.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.6" y="894.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (330 samples, 7.35%)</title><rect x="428.6" y="867.0" width="86.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.6" y="878.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (330 samples, 7.35%)</title><rect x="428.6" y="851.0" width="86.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.6" y="862.0">io/netty/c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (5 samples, 0.11%)</title><rect x="428.6" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (324 samples, 7.22%)</title><rect x="429.9" y="835.0" width="85.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.9" y="846.0">io/netty/c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.02%)</title><rect x="429.9" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.9" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.02%)</title><rect x="429.9" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.9" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="429.9" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.9" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="429.9" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (317 samples, 7.06%)</title><rect x="430.2" y="819.0" width="83.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.2" y="830.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (317 samples, 7.06%)</title><rect x="430.2" y="803.0" width="83.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.2" y="814.0">io/netty/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (314 samples, 7.00%)</title><rect x="430.9" y="787.0" width="82.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.9" y="798.0">com/datas..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.cancel (1 samples, 0.02%)</title><rect x="430.9" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.setSuccess (1 samples, 0.02%)</title><rect x="430.9" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.setSuccess (1 samples, 0.02%)</title><rect x="430.9" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.9" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess (1 samples, 0.02%)</title><rect x="430.9" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.02%)</title><rect x="430.9" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.02%)</title><rect x="430.9" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.9" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.checkNotifyWaiters (1 samples, 0.02%)</title><rect x="430.9" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.9" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (313 samples, 6.97%)</title><rect x="431.2" y="771.0" width="82.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.2" y="782.0">com/datas..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (1 samples, 0.02%)</title><rect x="431.7" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.7" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.02%)</title><rect x="431.7" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.containsKey (3 samples, 0.07%)</title><rect x="432.0" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByKey (2 samples, 0.04%)</title><rect x="432.0" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.insert (1 samples, 0.02%)</title><rect x="432.3" y="723.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (1 samples, 0.02%)</title><rect x="432.5" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smear (1 samples, 0.02%)</title><rect x="432.5" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (20 samples, 0.45%)</title><rect x="432.8" y="755.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.8" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.put (20 samples, 0.45%)</title><rect x="432.8" y="739.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.8" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.insert (3 samples, 0.07%)</title><rect x="432.8" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/HashBiMap.seekByValue (1 samples, 0.02%)</title><rect x="433.6" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.smearedHash (16 samples, 0.36%)</title><rect x="433.8" y="723.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.8" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="434.1" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="437.1" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="434.1" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.1" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="434.1" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.1" y="686.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="434.1" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.1" y="670.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="434.1" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.1" y="654.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="434.1" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (14 samples, 0.31%)</title><rect x="434.4" y="707.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.4" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (12 samples, 0.27%)</title><rect x="434.6" y="691.0" width="3.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="437.6" y="702.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.04%)</title><rect x="434.6" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="437.6" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (7 samples, 0.16%)</title><rect x="435.1" y="675.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="438.1" y="686.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (3 samples, 0.07%)</title><rect x="436.2" y="659.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="439.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="437.0" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="440.0" y="686.0"></text>
</g>
<g>
<title>__pthread_getspecific (2 samples, 0.04%)</title><rect x="437.3" y="675.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="440.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="437.8" y="691.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="440.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/Frame.forRequest (1 samples, 0.02%)</title><rect x="438.0" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/Frame.&lt;init&gt; (1 samples, 0.02%)</title><rect x="438.0" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="438.0" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.0" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (271 samples, 6.04%)</title><rect x="438.3" y="755.0" width="71.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.3" y="766.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (268 samples, 5.97%)</title><rect x="438.3" y="739.0" width="70.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.3" y="750.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.02%)</title><rect x="438.3" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.3" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.02%)</title><rect x="438.3" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.3" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="438.3" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.3" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="438.3" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (267 samples, 5.95%)</title><rect x="438.6" y="723.0" width="70.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.6" y="734.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (267 samples, 5.95%)</title><rect x="438.6" y="707.0" width="70.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.6" y="718.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (267 samples, 5.95%)</title><rect x="438.6" y="691.0" width="70.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.6" y="702.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (267 samples, 5.95%)</title><rect x="438.6" y="675.0" width="70.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.6" y="686.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (261 samples, 5.82%)</title><rect x="438.6" y="659.0" width="68.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.6" y="670.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.02%)</title><rect x="438.6" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.6" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.findContextOutbound (1 samples, 0.02%)</title><rect x="438.8" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.8" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.02%)</title><rect x="438.8" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.8" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="438.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.8" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.02%)</title><rect x="438.8" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.8" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (259 samples, 5.77%)</title><rect x="439.1" y="643.0" width="68.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.1" y="654.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (259 samples, 5.77%)</title><rect x="439.1" y="627.0" width="68.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.1" y="638.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (255 samples, 5.68%)</title><rect x="440.1" y="611.0" width="67.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.1" y="622.0">io/nett..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (232 samples, 5.17%)</title><rect x="440.1" y="595.0" width="61.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.1" y="606.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (229 samples, 5.10%)</title><rect x="440.1" y="579.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.1" y="590.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (229 samples, 5.10%)</title><rect x="440.1" y="563.0" width="60.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.1" y="574.0">com/da..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (103 samples, 2.30%)</title><rect x="440.9" y="547.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.9" y="558.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (103 samples, 2.30%)</title><rect x="440.9" y="531.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.9" y="542.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.compressDirect (103 samples, 2.30%)</title><rect x="440.9" y="515.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.9" y="526.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (6 samples, 0.13%)</title><rect x="441.5" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readableBytes (1 samples, 0.02%)</title><rect x="441.5" y="483.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readerIndex (1 samples, 0.02%)</title><rect x="441.7" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.7" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="442.0" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf._internalNioBuffer (1 samples, 0.02%)</title><rect x="442.0" y="467.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="442.0" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.clear (1 samples, 0.02%)</title><rect x="442.0" y="435.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.nioBufferCount (2 samples, 0.04%)</title><rect x="442.2" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.2" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="442.8" y="483.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.8" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.outputNioBuffer (1 samples, 0.02%)</title><rect x="443.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="443.0" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (15 samples, 0.33%)</title><rect x="443.3" y="499.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.3" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (15 samples, 0.33%)</title><rect x="443.3" y="483.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.3" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (15 samples, 0.33%)</title><rect x="443.3" y="467.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (6 samples, 0.13%)</title><rect x="443.6" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.6" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (6 samples, 0.13%)</title><rect x="443.6" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.6" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (6 samples, 0.13%)</title><rect x="443.6" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.6" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (6 samples, 0.13%)</title><rect x="443.6" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.6" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (6 samples, 0.13%)</title><rect x="443.6" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (6 samples, 0.13%)</title><rect x="443.6" y="371.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.13%)</title><rect x="443.6" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.13%)</title><rect x="443.6" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.6" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 0.13%)</title><rect x="443.6" y="323.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="446.6" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 0.13%)</title><rect x="443.6" y="307.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="446.6" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (5 samples, 0.11%)</title><rect x="443.8" y="291.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="446.8" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (5 samples, 0.11%)</title><rect x="443.8" y="275.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="446.8" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="444.3" y="259.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="447.3" y="270.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.04%)</title><rect x="444.6" y="259.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="447.6" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (8 samples, 0.18%)</title><rect x="445.1" y="451.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (8 samples, 0.18%)</title><rect x="445.1" y="435.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (8 samples, 0.18%)</title><rect x="445.1" y="419.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (8 samples, 0.18%)</title><rect x="445.1" y="403.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.1" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (8 samples, 0.18%)</title><rect x="445.1" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.1" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (6 samples, 0.13%)</title><rect x="445.1" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.1" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (6 samples, 0.13%)</title><rect x="445.1" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.1" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (6 samples, 0.13%)</title><rect x="445.1" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.1" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (2 samples, 0.04%)</title><rect x="445.1" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.1" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (2 samples, 0.04%)</title><rect x="445.1" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.1" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (4 samples, 0.09%)</title><rect x="445.7" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.7" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (4 samples, 0.09%)</title><rect x="445.7" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.7" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (4 samples, 0.09%)</title><rect x="445.7" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.7" y="302.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (2 samples, 0.04%)</title><rect x="446.7" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.7" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (1 samples, 0.02%)</title><rect x="446.7" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.7" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (1 samples, 0.02%)</title><rect x="447.0" y="355.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.0" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.02%)</title><rect x="447.2" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.2" y="510.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNICompressor.compress (78 samples, 1.74%)</title><rect x="447.5" y="499.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.5" y="510.0"></text>
</g>
<g>
<title>net/jpountz/lz4/LZ4JNI.LZ4_compress_limitedOutput (78 samples, 1.74%)</title><rect x="447.5" y="483.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.5" y="494.0"></text>
</g>
<g>
<title>Java_net_jpountz_lz4_LZ4JNI_LZ4_1compress_1limitedOutput (7 samples, 0.16%)</title><rect x="448.3" y="467.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="451.3" y="478.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (5 samples, 0.11%)</title><rect x="448.8" y="451.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="451.8" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.239] (1 samples, 0.02%)</title><rect x="449.1" y="435.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="452.1" y="446.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.02%)</title><rect x="449.3" y="435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="452.3" y="446.0"></text>
</g>
<g>
<title>jni_IsInstanceOf (2 samples, 0.04%)</title><rect x="449.6" y="435.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="452.6" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.239] (1 samples, 0.02%)</title><rect x="449.6" y="419.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="452.6" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.237] (1 samples, 0.02%)</title><rect x="449.9" y="419.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="452.9" y="430.0"></text>
</g>
<g>
<title>LZ4_compressBound (2 samples, 0.04%)</title><rect x="450.1" y="467.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="453.1" y="478.0"></text>
</g>
<g>
<title>LZ4_compress_default (4 samples, 0.09%)</title><rect x="450.7" y="467.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="453.7" y="478.0"></text>
</g>
<g>
<title>LZ4_compress_fast@plt (1 samples, 0.02%)</title><rect x="451.7" y="467.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="454.7" y="478.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState (17 samples, 0.38%)</title><rect x="452.0" y="467.0" width="4.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="455.0" y="478.0"></text>
</g>
<g>
<title>LZ4_initStream (4 samples, 0.09%)</title><rect x="456.4" y="467.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="459.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="457.5" y="467.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="460.5" y="478.0"></text>
</g>
<g>
<title>LZ4_compress_fast_extState (1 samples, 0.02%)</title><rect x="457.5" y="451.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="460.5" y="462.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (4 samples, 0.09%)</title><rect x="457.8" y="467.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="460.8" y="478.0"></text>
</g>
<g>
<title>__memset_sse2 (34 samples, 0.76%)</title><rect x="458.8" y="467.0" width="8.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="461.8" y="478.0"></text>
</g>
<g>
<title>jni_GetDirectBufferAddress (1 samples, 0.02%)</title><rect x="467.7" y="467.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="470.7" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (33 samples, 0.74%)</title><rect x="468.0" y="547.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.0" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (33 samples, 0.74%)</title><rect x="468.0" y="531.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.0" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (33 samples, 0.74%)</title><rect x="468.0" y="515.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.0" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (33 samples, 0.74%)</title><rect x="468.0" y="499.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.0" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (33 samples, 0.74%)</title><rect x="468.0" y="483.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (11 samples, 0.25%)</title><rect x="468.3" y="467.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.3" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (8 samples, 0.18%)</title><rect x="469.1" y="451.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.1" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (8 samples, 0.18%)</title><rect x="469.1" y="435.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.1" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (7 samples, 0.16%)</title><rect x="469.1" y="419.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (7 samples, 0.16%)</title><rect x="469.1" y="403.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (7 samples, 0.16%)</title><rect x="469.1" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7 samples, 0.16%)</title><rect x="469.1" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7 samples, 0.16%)</title><rect x="469.1" y="355.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.1" y="366.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (7 samples, 0.16%)</title><rect x="469.1" y="339.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="472.1" y="350.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (7 samples, 0.16%)</title><rect x="469.1" y="323.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="472.1" y="334.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="469.1" y="307.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="472.1" y="318.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="469.3" y="307.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="472.3" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (5 samples, 0.11%)</title><rect x="469.6" y="307.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="472.6" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (5 samples, 0.11%)</title><rect x="469.6" y="291.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="472.6" y="302.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.02%)</title><rect x="470.1" y="275.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="473.1" y="286.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="470.4" y="275.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.4" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="470.4" y="259.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="473.4" y="270.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.02%)</title><rect x="470.4" y="243.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="473.4" y="254.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="470.6" y="275.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="473.6" y="286.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.reportLeak (1 samples, 0.02%)</title><rect x="470.9" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.9" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.needReport (1 samples, 0.02%)</title><rect x="470.9" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.9" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/LocationAwareSlf4JLogger.isErrorEnabled (1 samples, 0.02%)</title><rect x="470.9" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isErrorEnabled (1 samples, 0.02%)</title><rect x="470.9" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.9" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (18 samples, 0.40%)</title><rect x="471.2" y="467.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.2" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (3 samples, 0.07%)</title><rect x="472.0" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (3 samples, 0.07%)</title><rect x="472.0" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.reuse (1 samples, 0.02%)</title><rect x="472.0" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.0" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setIndex0 (1 samples, 0.02%)</title><rect x="472.0" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.0" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (2 samples, 0.04%)</title><rect x="472.2" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.2" y="430.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.04%)</title><rect x="472.2" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.2" y="414.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (2 samples, 0.04%)</title><rect x="472.2" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.2" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (12 samples, 0.27%)</title><rect x="472.7" y="451.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (12 samples, 0.27%)</title><rect x="472.7" y="435.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (12 samples, 0.27%)</title><rect x="472.7" y="419.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.7" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (12 samples, 0.27%)</title><rect x="472.7" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 0.02%)</title><rect x="473.3" y="387.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.3" y="398.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.02%)</title><rect x="473.3" y="371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.3" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (4 samples, 0.09%)</title><rect x="473.5" y="387.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.5" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (4 samples, 0.09%)</title><rect x="473.5" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.5" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (4 samples, 0.09%)</title><rect x="473.5" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.5" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.memoryMapIdx (1 samples, 0.02%)</title><rect x="473.5" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.5" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (1 samples, 0.02%)</title><rect x="473.8" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.8" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (1 samples, 0.02%)</title><rect x="473.8" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.8" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (2 samples, 0.04%)</title><rect x="474.1" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.1" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (2 samples, 0.04%)</title><rect x="474.1" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.1" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init0 (2 samples, 0.04%)</title><rect x="474.1" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.1" y="318.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (5 samples, 0.11%)</title><rect x="474.6" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.6" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.soConsumerIndex (4 samples, 0.09%)</title><rect x="474.6" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.6" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (1 samples, 0.02%)</title><rect x="475.6" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.6" y="382.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (3 samples, 0.07%)</title><rect x="475.9" y="467.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (2 samples, 0.04%)</title><rect x="476.2" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.2" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (16 samples, 0.36%)</title><rect x="476.7" y="547.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.concat (16 samples, 0.36%)</title><rect x="476.7" y="531.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.7" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeBuffer (7 samples, 0.16%)</title><rect x="476.7" y="515.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.7" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.compositeDirectBuffer (7 samples, 0.16%)</title><rect x="476.7" y="499.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.7" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (6 samples, 0.13%)</title><rect x="476.7" y="483.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.7" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (6 samples, 0.13%)</title><rect x="476.7" y="467.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.7" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (6 samples, 0.13%)</title><rect x="476.7" y="451.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.7" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (5 samples, 0.11%)</title><rect x="476.7" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.7" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (5 samples, 0.11%)</title><rect x="476.7" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.11%)</title><rect x="476.7" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.11%)</title><rect x="476.7" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.11%)</title><rect x="476.7" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.7" y="382.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (5 samples, 0.11%)</title><rect x="476.7" y="355.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="479.7" y="366.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (5 samples, 0.11%)</title><rect x="476.7" y="339.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="479.7" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (5 samples, 0.11%)</title><rect x="476.7" y="323.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.7" y="334.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (4 samples, 0.09%)</title><rect x="476.7" y="307.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="479.7" y="318.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.02%)</title><rect x="477.0" y="291.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="480.0" y="302.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="477.2" y="291.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.2" y="302.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="477.2" y="275.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="480.2" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="477.5" y="275.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.5" y="286.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.02%)</title><rect x="477.5" y="259.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="480.5" y="270.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc_internal(unsigned char*, bool) (1 samples, 0.02%)</title><rect x="477.7" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="480.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextInt (1 samples, 0.02%)</title><rect x="478.0" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="478.3" y="483.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="478.3" y="467.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="478.3" y="451.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.&lt;init&gt; (1 samples, 0.02%)</title><rect x="478.3" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (9 samples, 0.20%)</title><rect x="478.5" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.5" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents (9 samples, 0.20%)</title><rect x="478.5" y="499.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents0 (9 samples, 0.20%)</title><rect x="478.5" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.newComponent (8 samples, 0.18%)</title><rect x="478.8" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.&lt;init&gt; (1 samples, 0.02%)</title><rect x="480.6" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.6" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (9 samples, 0.20%)</title><rect x="480.9" y="547.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.9" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.release (9 samples, 0.20%)</title><rect x="480.9" y="531.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.9" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (9 samples, 0.20%)</title><rect x="480.9" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.9" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (9 samples, 0.20%)</title><rect x="480.9" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.9" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (6 samples, 0.13%)</title><rect x="480.9" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.9" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf$Component.free (6 samples, 0.13%)</title><rect x="480.9" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.9" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (6 samples, 0.13%)</title><rect x="480.9" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.9" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.09%)</title><rect x="480.9" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.9" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (4 samples, 0.09%)</title><rect x="480.9" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.9" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (3 samples, 0.07%)</title><rect x="481.2" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.2" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (3 samples, 0.07%)</title><rect x="481.2" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.2" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (2 samples, 0.04%)</title><rect x="481.2" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.2" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (1 samples, 0.02%)</title><rect x="481.2" y="355.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.2" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (1 samples, 0.02%)</title><rect x="481.4" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.4" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.02%)</title><rect x="481.7" y="371.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.7" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.02%)</title><rect x="481.7" y="355.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.7" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.release (2 samples, 0.04%)</title><rect x="481.9" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.9" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (3 samples, 0.07%)</title><rect x="482.5" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (3 samples, 0.07%)</title><rect x="482.5" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.5" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.02%)</title><rect x="483.0" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (1 samples, 0.02%)</title><rect x="483.0" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (1 samples, 0.02%)</title><rect x="483.0" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.0" y="430.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (1 samples, 0.02%)</title><rect x="483.0" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.0" y="414.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.02%)</title><rect x="483.0" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.0" y="398.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="483.0" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.0" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.02%)</title><rect x="483.0" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.0" y="366.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeBodyInto (39 samples, 0.87%)</title><rect x="483.3" y="547.0" width="10.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.3" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encode (39 samples, 0.87%)</title><rect x="483.3" y="531.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.3" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (17 samples, 0.38%)</title><rect x="483.3" y="515.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.3" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeShortBytes (16 samples, 0.36%)</title><rect x="483.5" y="499.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.5" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (1 samples, 0.02%)</title><rect x="484.1" y="483.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.1" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeShort (1 samples, 0.02%)</title><rect x="484.1" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.1" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.02%)</title><rect x="484.1" y="451.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.02%)</title><rect x="484.1" y="435.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.02%)</title><rect x="484.1" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.1" y="430.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="484.1" y="403.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.1" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getInt (1 samples, 0.02%)</title><rect x="484.1" y="387.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.1" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (13 samples, 0.29%)</title><rect x="484.3" y="483.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.3" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (13 samples, 0.29%)</title><rect x="484.3" y="467.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (2 samples, 0.04%)</title><rect x="484.3" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (2 samples, 0.04%)</title><rect x="484.3" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (2 samples, 0.04%)</title><rect x="484.3" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.3" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (2 samples, 0.04%)</title><rect x="484.3" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.3" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (2 samples, 0.04%)</title><rect x="484.3" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.3" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (2 samples, 0.04%)</title><rect x="484.3" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.3" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (11 samples, 0.25%)</title><rect x="484.8" y="451.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.8" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (11 samples, 0.25%)</title><rect x="484.8" y="435.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.8" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (2 samples, 0.04%)</title><rect x="484.8" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.8" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (1 samples, 0.02%)</title><rect x="484.8" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.8" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkRangeBounds (1 samples, 0.02%)</title><rect x="484.8" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.8" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/MathUtil.isOutOfBounds (1 samples, 0.02%)</title><rect x="484.8" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.8" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.02%)</title><rect x="485.1" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="485.1" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.1" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (9 samples, 0.20%)</title><rect x="485.4" y="419.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.4" y="430.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (9 samples, 0.20%)</title><rect x="485.4" y="403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.4" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (9 samples, 0.20%)</title><rect x="485.4" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Math.min (3 samples, 0.07%)</title><rect x="485.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.6" y="382.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.02%)</title><rect x="486.4" y="371.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="489.4" y="382.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="486.7" y="371.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="489.7" y="382.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.04%)</title><rect x="487.2" y="371.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="490.2" y="382.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encode (22 samples, 0.49%)</title><rect x="487.7" y="515.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (5 samples, 0.11%)</title><rect x="487.7" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (5 samples, 0.11%)</title><rect x="487.7" y="483.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.7" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeByte (5 samples, 0.11%)</title><rect x="487.7" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.7" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (4 samples, 0.09%)</title><rect x="488.0" y="451.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writeValue (2 samples, 0.04%)</title><rect x="488.5" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.5" y="446.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (1 samples, 0.02%)</title><rect x="489.0" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.0" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeUnsignedShort (1 samples, 0.02%)</title><rect x="489.0" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.0" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeShort (1 samples, 0.02%)</title><rect x="489.0" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.02%)</title><rect x="489.0" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.02%)</title><rect x="489.0" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.02%)</title><rect x="489.0" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.0" y="430.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writePositionalValues (16 samples, 0.36%)</title><rect x="489.3" y="499.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.3" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.writeValue (15 samples, 0.33%)</title><rect x="489.3" y="483.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.3" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (14 samples, 0.31%)</title><rect x="489.6" y="467.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.6" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeBytes (13 samples, 0.29%)</title><rect x="489.8" y="451.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.8" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeInt (1 samples, 0.02%)</title><rect x="490.1" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.writeBytes (1 samples, 0.02%)</title><rect x="490.1" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.1" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (7 samples, 0.16%)</title><rect x="490.4" y="435.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.02%)</title><rect x="490.4" y="419.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writerIndex (1 samples, 0.02%)</title><rect x="490.4" y="403.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (6 samples, 0.13%)</title><rect x="490.6" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (6 samples, 0.13%)</title><rect x="490.6" y="403.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.02%)</title><rect x="490.9" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.9" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureAccessible (1 samples, 0.02%)</title><rect x="490.9" y="371.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.9" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.isAccessible (1 samples, 0.02%)</title><rect x="490.9" y="355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.9" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="490.9" y="339.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.9" y="350.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.02%)</title><rect x="490.9" y="323.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.9" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.getInt (1 samples, 0.02%)</title><rect x="490.9" y="307.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.9" y="318.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (4 samples, 0.09%)</title><rect x="491.1" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.1" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (4 samples, 0.09%)</title><rect x="491.1" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.1" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemoryWithSafePointPolling (4 samples, 0.09%)</title><rect x="491.1" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.1" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="491.1" y="339.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="494.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.09%)</title><rect x="492.2" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.2" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="492.7" y="419.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="495.7" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="492.7" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="495.7" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="492.7" y="387.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="495.7" y="398.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="492.7" y="371.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="495.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="493.0" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="493.0" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.0" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="493.0" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="493.0" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.size (1 samples, 0.02%)</title><rect x="493.3" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodeHeaderInto (2 samples, 0.04%)</title><rect x="493.5" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.5" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.02%)</title><rect x="493.8" y="531.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.8" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.writeByte (1 samples, 0.02%)</title><rect x="493.8" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.8" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeByte (1 samples, 0.02%)</title><rect x="493.8" y="499.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.8" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf._setByte (1 samples, 0.02%)</title><rect x="493.8" y="483.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.8" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.addr (1 samples, 0.02%)</title><rect x="493.8" y="467.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.8" y="478.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encodedBodySize (8 samples, 0.18%)</title><rect x="494.0" y="547.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.0" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/Execute$Codec.encodedSize (4 samples, 0.09%)</title><rect x="494.8" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.8" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/QueryOptions$Codec.encodedSize (4 samples, 0.09%)</title><rect x="494.8" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.8" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/request/query/Values.sizeOfPositionalValues (4 samples, 0.09%)</title><rect x="494.8" y="499.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.8" y="510.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.initialValue (3 samples, 0.07%)</title><rect x="495.1" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.1" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.02%)</title><rect x="495.9" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.size (1 samples, 0.02%)</title><rect x="495.9" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.9" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.getMessageEncoder (6 samples, 0.13%)</title><rect x="496.1" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.1" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (2 samples, 0.04%)</title><rect x="496.7" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.7" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.putByte (1 samples, 0.02%)</title><rect x="497.2" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="497.5" y="531.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="497.5" y="515.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.5" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.addComponents0 (3 samples, 0.07%)</title><rect x="497.7" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.7" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.putInt (1 samples, 0.02%)</title><rect x="498.5" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.5" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/ReferenceCountUpdater.isLiveNonVolatile (1 samples, 0.02%)</title><rect x="498.8" y="547.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.11%)</title><rect x="499.0" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.0" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.threadLocalRandom (1 samples, 0.02%)</title><rect x="499.0" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="499.3" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.04%)</title><rect x="499.3" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.get (2 samples, 0.04%)</title><rect x="499.8" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.8" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.putShort (3 samples, 0.07%)</title><rect x="500.4" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.4" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (19 samples, 0.42%)</title><rect x="501.1" y="595.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.1" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (17 samples, 0.38%)</title><rect x="501.1" y="579.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.1" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (11 samples, 0.25%)</title><rect x="501.1" y="563.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.1" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (11 samples, 0.25%)</title><rect x="501.1" y="547.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.1" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (9 samples, 0.20%)</title><rect x="501.7" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.7" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.write (8 samples, 0.18%)</title><rect x="501.9" y="515.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addMessage (6 samples, 0.13%)</title><rect x="501.9" y="499.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.9" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.newInstance (3 samples, 0.07%)</title><rect x="501.9" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.9" y="494.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (3 samples, 0.07%)</title><rect x="501.9" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (3 samples, 0.07%)</title><rect x="501.9" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.9" y="462.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.02%)</title><rect x="502.2" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.2" y="446.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.02%)</title><rect x="502.5" y="435.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.5" y="446.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.02%)</title><rect x="502.5" y="419.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.5" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes (2 samples, 0.04%)</title><rect x="502.7" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.7" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.total (1 samples, 0.02%)</title><rect x="503.2" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.2" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel.filterOutboundMessage (1 samples, 0.02%)</title><rect x="503.5" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedCompositeByteBuf.isDirect (1 samples, 0.02%)</title><rect x="503.5" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.5" y="494.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="503.8" y="499.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.8" y="510.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="503.8" y="483.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.8" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="503.8" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.8" y="478.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="503.8" y="451.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.8" y="462.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="503.8" y="435.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.8" y="446.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="503.8" y="419.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="506.8" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (6 samples, 0.13%)</title><rect x="504.0" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.0" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.touch (2 samples, 0.04%)</title><rect x="504.0" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.0" y="558.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="504.6" y="547.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="507.6" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (1 samples, 0.02%)</title><rect x="505.6" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.6" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="505.9" y="579.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="508.9" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (4 samples, 0.09%)</title><rect x="506.1" y="595.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.1" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (5 samples, 0.11%)</title><rect x="507.2" y="659.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="508.5" y="659.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="511.5" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (3 samples, 0.07%)</title><rect x="508.8" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.8" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (10 samples, 0.22%)</title><rect x="509.6" y="755.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (10 samples, 0.22%)</title><rect x="509.6" y="739.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.6" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (10 samples, 0.22%)</title><rect x="509.6" y="723.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.6" y="734.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener0 (8 samples, 0.18%)</title><rect x="510.1" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultFutureListeners.&lt;init&gt; (3 samples, 0.07%)</title><rect x="511.4" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.07%)</title><rect x="512.2" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="513.0" y="755.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2092175662.linkToTargetMethod (1 samples, 0.02%)</title><rect x="513.2" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2119077822.invokeStatic_LLIL_L (1 samples, 0.02%)</title><rect x="513.2" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler$$Lambda$170/972872492.get$Lambda (1 samples, 0.02%)</title><rect x="513.2" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.2" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.isNotValidPromise (4 samples, 0.09%)</title><rect x="513.5" y="819.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.5" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (2 samples, 0.04%)</title><rect x="514.0" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (2 samples, 0.04%)</title><rect x="514.5" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.5" y="830.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (2 samples, 0.04%)</title><rect x="514.5" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.5" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="515.1" y="835.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="518.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.04%)</title><rect x="515.3" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.3" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (2 samples, 0.04%)</title><rect x="515.9" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.04%)</title><rect x="516.4" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.04%)</title><rect x="516.4" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.hashCode (2 samples, 0.04%)</title><rect x="516.4" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.31%)</title><rect x="516.9" y="883.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.29%)</title><rect x="517.2" y="867.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="517.2" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.2" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.hashCode (1 samples, 0.02%)</title><rect x="517.2" y="835.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.27%)</title><rect x="517.4" y="851.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (4 samples, 0.09%)</title><rect x="518.0" y="835.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.09%)</title><rect x="519.0" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.0" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="519.5" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="522.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="519.5" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="522.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="519.5" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="522.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="519.5" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="522.5" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="519.5" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="522.5" y="766.0"></text>
</g>
<g>
<title>G1AllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="519.5" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="522.5" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="519.5" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="522.5" y="734.0"></text>
</g>
<g>
<title>G1CollectorPolicy::add_region_to_incremental_cset_lhs(HeapRegion*) (1 samples, 0.02%)</title><rect x="519.5" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="522.5" y="718.0"></text>
</g>
<g>
<title>G1CollectorPolicy::predict_region_elapsed_time_ms(HeapRegion*, bool) (1 samples, 0.02%)</title><rect x="519.5" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="522.5" y="702.0"></text>
</g>
<g>
<title>G1CollectorPolicy::predict_bytes_to_copy(HeapRegion*) (1 samples, 0.02%)</title><rect x="519.5" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="522.5" y="686.0"></text>
</g>
<g>
<title>AbsSeq::dsd() const (1 samples, 0.02%)</title><rect x="519.5" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="519.8" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.8" y="830.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="520.1" y="835.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="523.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="520.6" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="520.6" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.6" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.keySet (1 samples, 0.02%)</title><rect x="520.9" y="867.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.9" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="520.9" y="851.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (5 samples, 0.11%)</title><rect x="521.1" y="883.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (3 samples, 0.07%)</title><rect x="521.6" y="867.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.lazySetNext (1 samples, 0.02%)</title><rect x="521.6" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.casHead (2 samples, 0.04%)</title><rect x="521.9" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="522.2" y="835.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.run (18 samples, 0.40%)</title><rect x="522.4" y="915.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.4" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.runTask (16 samples, 0.36%)</title><rect x="522.4" y="899.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.4" y="910.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher$$Lambda$296/1272738435.run (16 samples, 0.36%)</title><rect x="522.4" y="883.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.4" y="894.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.runOnEventLoop (16 samples, 0.36%)</title><rect x="522.4" y="867.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.flush (11 samples, 0.25%)</title><rect x="522.4" y="851.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.4" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.flush (11 samples, 0.25%)</title><rect x="522.4" y="835.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.4" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (11 samples, 0.25%)</title><rect x="522.4" y="819.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (11 samples, 0.25%)</title><rect x="522.4" y="803.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (11 samples, 0.25%)</title><rect x="522.4" y="787.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (11 samples, 0.25%)</title><rect x="522.4" y="771.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (11 samples, 0.25%)</title><rect x="522.4" y="755.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (11 samples, 0.25%)</title><rect x="522.4" y="739.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (11 samples, 0.25%)</title><rect x="522.4" y="723.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (11 samples, 0.25%)</title><rect x="522.4" y="707.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (1 samples, 0.02%)</title><rect x="522.4" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (1 samples, 0.02%)</title><rect x="522.4" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (1 samples, 0.02%)</title><rect x="522.4" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.4" y="670.0"></text>
</g>
<g>
<title>io/netty/util/internal/PromiseNotificationUtil.trySuccess (1 samples, 0.02%)</title><rect x="522.4" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.4" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (1 samples, 0.02%)</title><rect x="522.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.02%)</title><rect x="522.4" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.02%)</title><rect x="522.4" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.4" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (1 samples, 0.02%)</title><rect x="522.4" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListenersNow (1 samples, 0.02%)</title><rect x="522.4" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.4" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners0 (1 samples, 0.02%)</title><rect x="522.4" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.4" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListener0 (1 samples, 0.02%)</title><rect x="522.4" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.4" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.operationComplete (1 samples, 0.02%)</title><rect x="522.4" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.4" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.scheduleSpeculativeExecution (1 samples, 0.02%)</title><rect x="522.4" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.4" y="510.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (1 samples, 0.02%)</title><rect x="522.4" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.4" y="494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="522.4" y="467.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="525.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (10 samples, 0.22%)</title><rect x="522.7" y="691.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (10 samples, 0.22%)</title><rect x="522.7" y="675.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (10 samples, 0.22%)</title><rect x="522.7" y="659.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (10 samples, 0.22%)</title><rect x="522.7" y="643.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.7" y="654.0"></text>
</g>
<g>
<title>__libc_writev (10 samples, 0.22%)</title><rect x="522.7" y="627.0" width="2.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="525.7" y="638.0"></text>
</g>
<g>
<title>sysret_audit (1 samples, 0.02%)</title><rect x="522.7" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.7" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="522.7" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.7" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (9 samples, 0.20%)</title><rect x="523.0" y="611.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="526.0" y="622.0"></text>
</g>
<g>
<title>sys_writev (9 samples, 0.20%)</title><rect x="523.0" y="595.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.0" y="606.0"></text>
</g>
<g>
<title>fget_light (1 samples, 0.02%)</title><rect x="523.0" y="579.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.0" y="590.0"></text>
</g>
<g>
<title>vfs_writev (8 samples, 0.18%)</title><rect x="523.2" y="579.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.2" y="590.0"></text>
</g>
<g>
<title>do_readv_writev (8 samples, 0.18%)</title><rect x="523.2" y="563.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="526.2" y="574.0"></text>
</g>
<g>
<title>do_sync_readv_writev (8 samples, 0.18%)</title><rect x="523.2" y="547.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.2" y="558.0"></text>
</g>
<g>
<title>sock_aio_write (8 samples, 0.18%)</title><rect x="523.2" y="531.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.2" y="542.0"></text>
</g>
<g>
<title>cap_socket_sendmsg (1 samples, 0.02%)</title><rect x="523.2" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="526.2" y="526.0"></text>
</g>
<g>
<title>inet_sendmsg (7 samples, 0.16%)</title><rect x="523.5" y="515.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.5" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 0.16%)</title><rect x="523.5" y="499.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.5" y="510.0"></text>
</g>
<g>
<title>tcp_push (7 samples, 0.16%)</title><rect x="523.5" y="483.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.5" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (7 samples, 0.16%)</title><rect x="523.5" y="467.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.5" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.16%)</title><rect x="523.5" y="451.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.5" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="523.5" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.5" y="446.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="523.5" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="526.5" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="523.5" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.5" y="414.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="523.5" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="523.5" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.5" y="382.0"></text>
</g>
<g>
<title>tcp_transmit_skb (6 samples, 0.13%)</title><rect x="523.8" y="435.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.8" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.13%)</title><rect x="523.8" y="419.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.8" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (6 samples, 0.13%)</title><rect x="523.8" y="403.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.8" y="414.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.13%)</title><rect x="523.8" y="387.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.8" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.13%)</title><rect x="523.8" y="371.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.8" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.11%)</title><rect x="523.8" y="355.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.8" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.11%)</title><rect x="523.8" y="339.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.8" y="350.0"></text>
</g>
<g>
<title>sch_direct_xmit (5 samples, 0.11%)</title><rect x="523.8" y="323.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.8" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="523.8" y="307.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.8" y="318.0"></text>
</g>
<g>
<title>start_xmit?[virtio_net] (5 samples, 0.11%)</title><rect x="523.8" y="291.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.8" y="302.0"></text>
</g>
<g>
<title>free_old_xmit_skbs.isra.32?[virtio_net] (2 samples, 0.04%)</title><rect x="523.8" y="275.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.8" y="286.0"></text>
</g>
<g>
<title>virtqueue_get_buf?[virtio_ring] (2 samples, 0.04%)</title><rect x="523.8" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.8" y="270.0"></text>
</g>
<g>
<title>detach_buf?[virtio_ring] (1 samples, 0.02%)</title><rect x="524.0" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.0" y="254.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="524.0" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.0" y="238.0"></text>
</g>
<g>
<title>virtqueue_kick?[virtio_ring] (3 samples, 0.07%)</title><rect x="524.3" y="275.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.3" y="286.0"></text>
</g>
<g>
<title>iowrite16 (3 samples, 0.07%)</title><rect x="524.3" y="259.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.3" y="270.0"></text>
</g>
<g>
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="525.1" y="355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.1" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="525.1" y="339.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.1" y="350.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="525.1" y="323.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.1" y="334.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="525.1" y="307.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.1" y="318.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="525.1" y="291.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.1" y="302.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="525.1" y="275.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.1" y="286.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="525.1" y="259.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.1" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="525.1" y="243.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.1" y="254.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (5 samples, 0.11%)</title><rect x="525.3" y="851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (5 samples, 0.11%)</title><rect x="525.3" y="835.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="819.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="803.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (5 samples, 0.11%)</title><rect x="525.3" y="787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.3" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (5 samples, 0.11%)</title><rect x="525.3" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (5 samples, 0.11%)</title><rect x="525.3" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/InFlightHandler.write (5 samples, 0.11%)</title><rect x="525.3" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.3" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="723.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.3" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.3" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (5 samples, 0.11%)</title><rect x="525.3" y="691.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.3" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (5 samples, 0.11%)</title><rect x="525.3" y="675.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/timeout/IdleStateHandler.write (5 samples, 0.11%)</title><rect x="525.3" y="659.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.3" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.3" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (5 samples, 0.11%)</title><rect x="525.3" y="627.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.3" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (5 samples, 0.11%)</title><rect x="525.3" y="611.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.3" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (5 samples, 0.11%)</title><rect x="525.3" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.3" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (5 samples, 0.11%)</title><rect x="525.3" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.3" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (2 samples, 0.04%)</title><rect x="525.3" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.3" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/FrameEncoder.encode (2 samples, 0.04%)</title><rect x="525.3" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/FrameCodec.encode (2 samples, 0.04%)</title><rect x="525.3" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.3" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (1 samples, 0.02%)</title><rect x="525.3" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.3" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.compress (1 samples, 0.02%)</title><rect x="525.3" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.3" y="510.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/Lz4Compressor.compressDirect (1 samples, 0.02%)</title><rect x="525.3" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.3" y="494.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufCompressor.inputNioBuffer (1 samples, 0.02%)</title><rect x="525.3" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readerIndex (1 samples, 0.02%)</title><rect x="525.3" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.3" y="462.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (1 samples, 0.02%)</title><rect x="525.6" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.6" y="526.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/protocol/ByteBufPrimitiveCodec.allocate (1 samples, 0.02%)</title><rect x="525.6" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.6" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1 samples, 0.02%)</title><rect x="525.6" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.02%)</title><rect x="525.6" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.6" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.02%)</title><rect x="525.6" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.02%)</title><rect x="525.6" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.02%)</title><rect x="525.6" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (1 samples, 0.02%)</title><rect x="525.6" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (1 samples, 0.02%)</title><rect x="525.6" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.6" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (1 samples, 0.02%)</title><rect x="525.6" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.6" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$SubPageMemoryRegionCache.initBuf (1 samples, 0.02%)</title><rect x="525.6" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.6" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.02%)</title><rect x="525.6" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.6" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.02%)</title><rect x="525.6" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.6" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runOffset (1 samples, 0.02%)</title><rect x="525.6" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.6" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (1 samples, 0.02%)</title><rect x="525.6" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.6" y="302.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (3 samples, 0.07%)</title><rect x="525.9" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.9" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (3 samples, 0.07%)</title><rect x="525.9" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.9" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (2 samples, 0.04%)</title><rect x="525.9" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.9" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (2 samples, 0.04%)</title><rect x="525.9" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.9" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (2 samples, 0.04%)</title><rect x="525.9" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.9" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.write (1 samples, 0.02%)</title><rect x="526.1" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.1" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.addMessage (1 samples, 0.02%)</title><rect x="526.1" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.1" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.newInstance (1 samples, 0.02%)</title><rect x="526.1" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.1" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.02%)</title><rect x="526.4" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.4" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.touch (1 samples, 0.02%)</title><rect x="526.4" y="515.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.4" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/PromiseTask.setSuccessInternal (1 samples, 0.02%)</title><rect x="526.6" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.6" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess (1 samples, 0.02%)</title><rect x="526.6" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.6" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setSuccess0 (1 samples, 0.02%)</title><rect x="526.6" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.setValue0 (1 samples, 0.02%)</title><rect x="526.6" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet (1 samples, 0.02%)</title><rect x="526.6" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.accessCheck (1 samples, 0.02%)</title><rect x="526.6" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.6" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.delayNanos (1 samples, 0.02%)</title><rect x="526.9" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.9" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ScheduledFutureTask.deadlineToDelayNanos (1 samples, 0.02%)</title><rect x="526.9" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.9" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.fetchFromScheduledTaskQueue (11 samples, 0.25%)</title><rect x="527.2" y="931.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.2" y="942.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.18%)</title><rect x="527.4" y="915.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="530.4" y="926.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.13%)</title><rect x="528.0" y="899.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="531.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.pollScheduledTask (2 samples, 0.04%)</title><rect x="529.5" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.5" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractScheduledEventExecutor.peekScheduledTask (1 samples, 0.02%)</title><rect x="529.5" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.5" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.peek (1 samples, 0.02%)</title><rect x="529.5" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.5" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.02%)</title><rect x="529.8" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.8" y="910.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.poll (1 samples, 0.02%)</title><rect x="529.8" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.8" y="894.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.poll (1 samples, 0.02%)</title><rect x="529.8" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.8" y="878.0"></text>
</g>
<g>
<title>io/netty/util/internal/DefaultPriorityQueue.bubbleDown (1 samples, 0.02%)</title><rect x="529.8" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.8" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTask (7 samples, 0.16%)</title><rect x="530.1" y="931.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.1" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (7 samples, 0.16%)</title><rect x="530.1" y="915.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.1" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="531.9" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="534.9" y="942.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="532.2" y="947.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="535.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="532.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,321 samples, 51.72%)</title><rect x="532.7" y="1011.0" width="610.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.7" y="1022.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,321 samples, 51.72%)</title><rect x="532.7" y="995.0" width="610.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.7" y="1006.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>clojure/lang/AFn.run (2,314 samples, 51.56%)</title><rect x="532.7" y="979.0" width="608.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.7" y="990.0">clojure/lang/AFn.run</text>
</g>
<g>
<title>clojure/core/async$thread_call$fn__6246.invoke (2,314 samples, 51.56%)</title><rect x="532.7" y="963.0" width="608.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.7" y="974.0">clojure/core/async$thread_call$fn__6246.invoke</text>
</g>
<g>
<title>hammer/core$_main$fn__8888.invoke (2,314 samples, 51.56%)</title><rect x="532.7" y="947.0" width="608.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.7" y="958.0">hammer/core$_main$fn__8888.invoke</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession.invoke (2,314 samples, 51.56%)</title><rect x="532.7" y="931.0" width="608.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="942.0">hammer/core$insertTaskOneSession.invoke</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession.invokeStatic (2,314 samples, 51.56%)</title><rect x="532.7" y="915.0" width="608.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.7" y="926.0">hammer/core$insertTaskOneSession.invokeStatic</text>
</g>
<g>
<title>hammer/core$insertTaskOneSession$fn__8879.invoke (2,314 samples, 51.56%)</title><rect x="532.7" y="899.0" width="608.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.7" y="910.0">hammer/core$insertTaskOneSession$fn__8879.invoke</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.04%)</title><rect x="536.6" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.6" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (6 samples, 0.13%)</title><rect x="537.2" y="883.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="540.2" y="894.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (3 samples, 0.07%)</title><rect x="537.2" y="867.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="540.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.07%)</title><rect x="538.0" y="867.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="541.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.02%)</title><rect x="538.0" y="851.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="541.0" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(instanceKlassHandle, bool, int, Thread*) (1 samples, 0.02%)</title><rect x="538.0" y="835.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="541.0" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(instanceKlassHandle, bool, int, Thread*) (1 samples, 0.02%)</title><rect x="538.2" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.2" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="538.5" y="851.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="541.5" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="538.7" y="883.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="541.7" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="538.7" y="867.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="541.7" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Numbers.num (10 samples, 0.22%)</title><rect x="539.0" y="883.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (9 samples, 0.20%)</title><rect x="539.3" y="867.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (5 samples, 0.11%)</title><rect x="540.3" y="851.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (5 samples, 0.11%)</title><rect x="540.3" y="835.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.11%)</title><rect x="540.3" y="819.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.3" y="830.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="540.6" y="803.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="543.6" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="540.6" y="787.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="543.6" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (2 samples, 0.04%)</title><rect x="541.1" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.1" y="814.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (173 samples, 3.85%)</title><rect x="541.6" y="883.0" width="45.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.6" y="894.0">cloj..</text>
</g>
<g>
<title>clojure/lang/RT.baseLoader (3 samples, 0.07%)</title><rect x="541.6" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.6" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Var.deref (1 samples, 0.02%)</title><rect x="541.6" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.6" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Var.isBound (2 samples, 0.04%)</title><rect x="541.9" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.02%)</title><rect x="542.2" y="835.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.2" y="846.0"></text>
</g>
<g>
<title>clojure/lang/RT.classForName (170 samples, 3.79%)</title><rect x="542.4" y="867.0" width="44.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.4" y="878.0">cloj..</text>
</g>
<g>
<title>java/lang/Class.forName (169 samples, 3.77%)</title><rect x="542.7" y="851.0" width="44.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.7" y="862.0">java..</text>
</g>
<g>
<title>java/lang/Class.forName0 (168 samples, 3.74%)</title><rect x="542.7" y="835.0" width="44.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.7" y="846.0">java..</text>
</g>
<g>
<title>JVM_FindClassFromCaller (3 samples, 0.07%)</title><rect x="542.9" y="819.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="545.9" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (155 samples, 3.45%)</title><rect x="543.7" y="819.0" width="40.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="546.7" y="830.0">Jav..</text>
</g>
<g>
<title>JVM_FindClassFromCaller (97 samples, 2.16%)</title><rect x="544.3" y="803.0" width="25.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="547.3" y="814.0">J..</text>
</g>
<g>
<title>Atomic::inc(short volatile*) (2 samples, 0.04%)</title><rect x="544.5" y="787.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="547.5" y="798.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="545.0" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="548.0" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="545.6" y="787.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="548.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (6 samples, 0.13%)</title><rect x="545.8" y="787.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.8" y="798.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="547.4" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="550.4" y="798.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (2 samples, 0.04%)</title><rect x="547.9" y="787.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="550.9" y="798.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (20 samples, 0.45%)</title><rect x="548.5" y="787.0" width="5.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="551.5" y="798.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (3 samples, 0.07%)</title><rect x="552.9" y="771.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="555.9" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="553.7" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="556.7" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="554.0" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="557.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="554.3" y="787.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="557.3" y="798.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (58 samples, 1.29%)</title><rect x="554.5" y="787.0" width="15.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="557.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (2 samples, 0.04%)</title><rect x="554.5" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="557.5" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::should_be_initialized() const (2 samples, 0.04%)</title><rect x="555.0" y="771.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="558.0" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.04%)</title><rect x="555.6" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="558.6" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (51 samples, 1.14%)</title><rect x="556.1" y="771.0" width="13.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="559.1" y="782.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (1 samples, 0.02%)</title><rect x="556.6" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="559.6" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (45 samples, 1.00%)</title><rect x="556.9" y="755.0" width="11.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="559.9" y="766.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (32 samples, 0.71%)</title><rect x="558.7" y="739.0" width="8.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="561.7" y="750.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (6 samples, 0.13%)</title><rect x="567.1" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="570.1" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.04%)</title><rect x="568.7" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="571.7" y="766.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.02%)</title><rect x="569.2" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="572.2" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.02%)</title><rect x="569.5" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="572.5" y="782.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (4 samples, 0.09%)</title><rect x="569.8" y="803.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="572.8" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.6" y="787.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.6" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.6" y="771.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.6" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="570.6" y="755.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="573.6" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="570.6" y="739.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.6" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="570.6" y="723.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="573.6" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="570.6" y="707.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.6" y="718.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="570.6" y="691.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="570.8" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="573.8" y="814.0"></text>
</g>
<g>
<title>UNICODE::utf8_length(unsigned short*, int) (1 samples, 0.02%)</title><rect x="571.3" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.3" y="814.0"></text>
</g>
<g>
<title>VerifyClassname (3 samples, 0.07%)</title><rect x="571.6" y="803.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="574.6" y="814.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (3 samples, 0.07%)</title><rect x="571.6" y="787.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="574.6" y="798.0"></text>
</g>
<g>
<title>isJvmIdentifier (1 samples, 0.02%)</title><rect x="572.1" y="771.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="575.1" y="782.0"></text>
</g>
<g>
<title>VerifyFixClassname (1 samples, 0.02%)</title><rect x="572.4" y="803.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="575.4" y="814.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (4 samples, 0.09%)</title><rect x="572.7" y="803.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="575.7" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="573.4" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="573.4" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.4" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="573.4" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.4" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="573.4" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="576.4" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="573.4" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="573.4" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="573.4" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.4" y="702.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="573.4" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.4" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="573.4" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.4" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="573.4" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.4" y="654.0"></text>
</g>
<g>
<title>__strlen_sse2_pminub (10 samples, 0.22%)</title><rect x="573.7" y="803.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="576.7" y="814.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.02%)</title><rect x="576.3" y="803.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="579.3" y="814.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (4 samples, 0.09%)</title><rect x="576.6" y="803.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="579.6" y="814.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (5 samples, 0.11%)</title><rect x="577.7" y="803.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="580.7" y="814.0"></text>
</g>
<g>
<title>UNICODE::utf8_length(unsigned short*, int) (1 samples, 0.02%)</title><rect x="577.7" y="787.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="580.7" y="798.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (1 samples, 0.02%)</title><rect x="577.9" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="580.9" y="798.0"></text>
</g>
<g>
<title>oopDesc::obj_field(int) const (3 samples, 0.07%)</title><rect x="578.2" y="787.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="581.2" y="798.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (20 samples, 0.45%)</title><rect x="579.0" y="803.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="582.0" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="581.1" y="787.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="584.1" y="798.0"></text>
</g>
<g>
<title>UNICODE::as_utf8(unsigned short*, int) (7 samples, 0.16%)</title><rect x="581.3" y="787.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="584.3" y="798.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.02%)</title><rect x="582.6" y="771.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="585.6" y="782.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="582.9" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="585.9" y="782.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*, int, int) (1 samples, 0.02%)</title><rect x="583.2" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="586.2" y="798.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.07%)</title><rect x="583.4" y="787.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="586.4" y="798.0"></text>
</g>
<g>
<title>strlen@plt (1 samples, 0.02%)</title><rect x="584.2" y="803.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="587.2" y="814.0"></text>
</g>
<g>
<title>VerifyFixClassname (4 samples, 0.09%)</title><rect x="584.5" y="819.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="587.5" y="830.0"></text>
</g>
<g>
<title>jni_GetStringLength (2 samples, 0.04%)</title><rect x="585.5" y="819.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="588.5" y="830.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (2 samples, 0.04%)</title><rect x="586.1" y="819.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="589.1" y="830.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (1 samples, 0.02%)</title><rect x="586.6" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="589.6" y="830.0"></text>
</g>
<g>
<title>java/lang/System.getSecurityManager (1 samples, 0.02%)</title><rect x="586.9" y="835.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.9" y="846.0"></text>
</g>
<g>
<title>clojure/lang/RT.intCast (1 samples, 0.02%)</title><rect x="587.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.1" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (1 samples, 0.02%)</title><rect x="587.4" y="883.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.4" y="894.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeStaticMethod (546 samples, 12.17%)</title><rect x="587.6" y="883.0" width="143.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.6" y="894.0">clojure/lang/Refle..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (510 samples, 11.36%)</title><rect x="587.6" y="867.0" width="134.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.6" y="878.0">clojure/lang/Refl..</text>
</g>
<g>
<title>java/lang/Class.getMethods (400 samples, 8.91%)</title><rect x="613.1" y="851.0" width="105.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.1" y="862.0">java/lang/Cla..</text>
</g>
<g>
<title>java/lang/Class.checkMemberAccess (1 samples, 0.02%)</title><rect x="613.1" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (391 samples, 8.71%)</title><rect x="613.4" y="835.0" width="102.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.4" y="846.0">java/lang/Cl..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (13 samples, 0.29%)</title><rect x="617.1" y="819.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.1" y="830.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (364 samples, 8.11%)</title><rect x="620.5" y="819.0" width="95.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.5" y="830.0">sun/reflect..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (351 samples, 7.82%)</title><rect x="620.5" y="803.0" width="92.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.5" y="814.0">java/lang/r..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (350 samples, 7.80%)</title><rect x="620.8" y="787.0" width="92.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.8" y="798.0">java/lang/r..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.09%)</title><rect x="652.1" y="771.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="655.1" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.09%)</title><rect x="652.1" y="755.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="655.1" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (4 samples, 0.09%)</title><rect x="652.1" y="739.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="655.1" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="652.3" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.3" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="652.3" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="655.3" y="718.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="652.3" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="655.3" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="652.3" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="655.3" y="686.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.02%)</title><rect x="652.3" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="655.3" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="652.6" y="723.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="655.6" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="652.8" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="655.8" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="653.1" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.1" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="653.1" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="656.1" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="653.1" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.1" y="750.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="653.1" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="656.1" y="734.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="653.1" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="656.1" y="718.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="653.1" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.1" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (226 samples, 5.04%)</title><rect x="653.4" y="771.0" width="59.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.4" y="782.0">java/l..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="712.0" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="715.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::new_store_pre_barrier(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="712.0" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="715.0" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::can_elide_initializing_store_barrier(oopDesc*) (1 samples, 0.02%)</title><rect x="712.0" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="715.0" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="712.3" y="755.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.3" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="712.3" y="739.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="715.3" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="712.3" y="723.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.3" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="712.3" y="707.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.3" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="712.3" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.3" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="712.3" y="675.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.3" y="686.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="712.5" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.5" y="766.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="712.5" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.5" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="712.5" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.5" y="734.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="712.5" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.5" y="718.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="712.5" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.5" y="702.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="712.5" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.5" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="712.5" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.5" y="670.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="712.5" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.5" y="654.0"></text>
</g>
<g>
<title>page_to_skb?[virtio_net] (1 samples, 0.02%)</title><rect x="712.5" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.5" y="638.0"></text>
</g>
<g>
<title>__netdev_alloc_skb (1 samples, 0.02%)</title><rect x="712.5" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.5" y="622.0"></text>
</g>
<g>
<title>__build_skb (1 samples, 0.02%)</title><rect x="712.5" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.5" y="606.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (13 samples, 0.29%)</title><rect x="712.8" y="803.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (8 samples, 0.18%)</title><rect x="716.2" y="835.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (7 samples, 0.16%)</title><rect x="716.5" y="819.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (3 samples, 0.07%)</title><rect x="717.5" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="718.3" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.3" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getModifiers (1 samples, 0.02%)</title><rect x="718.6" y="851.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.6" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.02%)</title><rect x="718.8" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.8" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.isBridge (1 samples, 0.02%)</title><rect x="719.1" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="719.4" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.copyMethods (1 samples, 0.02%)</title><rect x="719.6" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.6" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="719.9" y="851.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.9" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="719.9" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.9" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.calculateCapacity (1 samples, 0.02%)</title><rect x="719.9" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.9" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (2 samples, 0.04%)</title><rect x="720.2" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.2" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="720.4" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.4" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="720.4" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.4" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="720.7" y="851.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="723.7" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (36 samples, 0.80%)</title><rect x="721.7" y="867.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.7" y="878.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (1 samples, 0.02%)</title><rect x="721.7" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.7" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.boxArg (1 samples, 0.02%)</title><rect x="721.7" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.intValue (1 samples, 0.02%)</title><rect x="721.7" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.7" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (21 samples, 0.47%)</title><rect x="722.0" y="851.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.0" y="862.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.paramArgTypeMatch (4 samples, 0.09%)</title><rect x="726.5" y="835.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.5" y="846.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (4 samples, 0.09%)</title><rect x="727.5" y="851.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="862.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.04%)</title><rect x="727.5" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.5" y="846.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="728.0" y="835.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="731.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.02%)</title><rect x="728.6" y="851.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.13%)</title><rect x="728.8" y="851.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.8" y="862.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.13%)</title><rect x="728.8" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.8" y="846.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor3.invoke (6 samples, 0.13%)</title><rect x="728.8" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="830.0"></text>
</g>
<g>
<title>clojure/lang/RT.aset (1 samples, 0.02%)</title><rect x="730.1" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.1" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="730.4" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.access$000 (1 samples, 0.02%)</title><rect x="730.4" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.04%)</title><rect x="730.7" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="730.7" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.7" y="846.0"></text>
</g>
<g>
<title>clojure/lang/RestFn.invoke (1 samples, 0.02%)</title><rect x="731.2" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.2" y="894.0"></text>
</g>
<g>
<title>clojure/core$print_str.doInvoke (1 samples, 0.02%)</title><rect x="731.2" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.2" y="878.0"></text>
</g>
<g>
<title>clojure/core$print_str.invokeStatic (1 samples, 0.02%)</title><rect x="731.2" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.2" y="862.0"></text>
</g>
<g>
<title>clojure/core$hash_map.invokeStatic (1 samples, 0.02%)</title><rect x="731.2" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.2" y="846.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invoke (1 samples, 0.02%)</title><rect x="731.5" y="883.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.5" y="894.0"></text>
</g>
<g>
<title>clojure/tools/logging$log_STAR_.invokeStatic (1 samples, 0.02%)</title><rect x="731.5" y="867.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.5" y="878.0"></text>
</g>
<g>
<title>clojure/tools/logging/impl$fn__8629$G__8611__8640.invoke (1 samples, 0.02%)</title><rect x="731.5" y="851.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.5" y="862.0"></text>
</g>
<g>
<title>clojure/tools/logging$eval136$fn__141.invoke (1 samples, 0.02%)</title><rect x="731.5" y="835.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.5" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.02%)</title><rect x="731.5" y="819.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.5" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.02%)</title><rect x="731.5" y="803.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.5" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.02%)</title><rect x="731.5" y="787.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.5" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.02%)</title><rect x="731.5" y="771.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.5" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="731.5" y="755.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.5" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.02%)</title><rect x="731.5" y="739.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.02%)</title><rect x="731.5" y="723.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.02%)</title><rect x="731.5" y="707.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.5" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.02%)</title><rect x="731.5" y="691.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.02%)</title><rect x="731.5" y="675.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.02%)</title><rect x="731.5" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.02%)</title><rect x="731.5" y="643.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.5" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.02%)</title><rect x="731.5" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.5" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.02%)</title><rect x="731.5" y="611.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="731.5" y="595.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.5" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="731.5" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="731.5" y="563.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.5" y="574.0"></text>
</g>
<g>
<title>clojure/tools/logging/impl$fn__8616$G__8609__8623.invoke (1 samples, 0.02%)</title><rect x="731.7" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.7" y="894.0"></text>
</g>
<g>
<title>clojure/tools/logging$eval136$fn__137.invoke (1 samples, 0.02%)</title><rect x="731.7" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.7" y="878.0"></text>
</g>
<g>
<title>hammer/core$insertIntoTable0.invoke (1,428 samples, 31.82%)</title><rect x="732.0" y="883.0" width="375.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.0" y="894.0">hammer/core$insertIntoTable0.invoke</text>
</g>
<g>
<title>hammer/core$insertIntoTable0.invokeStatic (1,428 samples, 31.82%)</title><rect x="732.0" y="867.0" width="375.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.0" y="878.0">hammer/core$insertIntoTable0.invokeStatic</text>
</g>
<g>
<title>clojure/core$into_array.invoke (34 samples, 0.76%)</title><rect x="732.3" y="851.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.3" y="862.0"></text>
</g>
<g>
<title>clojure/core$into_array.invokeStatic (34 samples, 0.76%)</title><rect x="732.3" y="835.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.3" y="846.0"></text>
</g>
<g>
<title>clojure/core$seq__5402.invokeStatic (11 samples, 0.25%)</title><rect x="732.3" y="819.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.3" y="830.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (11 samples, 0.25%)</title><rect x="732.3" y="803.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.3" y="814.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (10 samples, 0.22%)</title><rect x="732.3" y="787.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.3" y="798.0"></text>
</g>
<g>
<title>clojure/lang/RT.seq (10 samples, 0.22%)</title><rect x="732.3" y="771.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.3" y="782.0"></text>
</g>
<g>
<title>clojure/lang/LazySeq.seq (10 samples, 0.22%)</title><rect x="732.3" y="755.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.3" y="766.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.seq (6 samples, 0.13%)</title><rect x="732.5" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.5" y="750.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="734.1" y="739.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="737.1" y="750.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqFrom (1 samples, 0.02%)</title><rect x="734.9" y="787.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.9" y="798.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.seq (1 samples, 0.02%)</title><rect x="734.9" y="771.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.9" y="782.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector.chunkedSeq (1 samples, 0.02%)</title><rect x="734.9" y="755.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.9" y="766.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.&lt;init&gt; (1 samples, 0.02%)</title><rect x="734.9" y="739.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.9" y="750.0"></text>
</g>
<g>
<title>clojure/lang/ASeq.&lt;init&gt; (1 samples, 0.02%)</title><rect x="734.9" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.9" y="734.0"></text>
</g>
<g>
<title>clojure/lang/RT.seqToTypedArray (23 samples, 0.51%)</title><rect x="735.1" y="819.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.1" y="830.0"></text>
</g>
<g>
<title>clojure/lang/RT.length (1 samples, 0.02%)</title><rect x="735.1" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.1" y="814.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.next (1 samples, 0.02%)</title><rect x="735.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.1" y="798.0"></text>
</g>
<g>
<title>clojure/lang/PersistentVector$ChunkedSeq.&lt;init&gt; (1 samples, 0.02%)</title><rect x="735.1" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.1" y="782.0"></text>
</g>
<g>
<title>clojure/lang/ASeq.&lt;init&gt; (1 samples, 0.02%)</title><rect x="735.1" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.1" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.set (22 samples, 0.49%)</title><rect x="735.4" y="803.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.4" y="814.0"></text>
</g>
<g>
<title>G1SATBCardTableLoggingModRefBS::write_ref_field_work(void*, oopDesc*, bool) (1 samples, 0.02%)</title><rect x="735.7" y="787.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="738.7" y="798.0"></text>
</g>
<g>
<title>JVM_SetArrayElement (16 samples, 0.36%)</title><rect x="735.9" y="787.0" width="4.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="738.9" y="798.0"></text>
</g>
<g>
<title>G1SATBCardTableModRefBS::write_ref_field_pre_work(unsigned int*, oopDesc*) (2 samples, 0.04%)</title><rect x="737.8" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="740.8" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="738.3" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="741.3" y="782.0"></text>
</g>
<g>
<title>Reflection::array_set(jvalue*, arrayOopDesc*, int, BasicType, Thread*) (3 samples, 0.07%)</title><rect x="738.6" y="771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="741.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) [clone .constprop.319] (3 samples, 0.07%)</title><rect x="739.3" y="771.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.3" y="782.0"></text>
</g>
<g>
<title>Java_java_lang_reflect_Array_set (1 samples, 0.02%)</title><rect x="740.1" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="743.1" y="798.0"></text>
</g>
<g>
<title>Reflection::array_set(jvalue*, arrayOopDesc*, int, BasicType, Thread*) (1 samples, 0.02%)</title><rect x="740.4" y="787.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="743.4" y="798.0"></text>
</g>
<g>
<title>Reflection::unbox_for_regular_object(oopDesc*, jvalue*) (1 samples, 0.02%)</title><rect x="740.7" y="787.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="743.7" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="740.9" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="743.9" y="798.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeInstanceMethod (300 samples, 6.68%)</title><rect x="741.2" y="851.0" width="78.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="862.0">clojure/l..</text>
</g>
<g>
<title>clojure/lang/Reflector.getMethods (124 samples, 2.76%)</title><rect x="741.2" y="835.0" width="32.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.2" y="846.0">cl..</text>
</g>
<g>
<title>java/lang/Class.getMethods (108 samples, 2.41%)</title><rect x="743.3" y="819.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="830.0">ja..</text>
</g>
<g>
<title>java/lang/Class.copyMethods (102 samples, 2.27%)</title><rect x="743.3" y="803.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.3" y="814.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (3 samples, 0.07%)</title><rect x="744.3" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.3" y="798.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.copyMethod (95 samples, 2.12%)</title><rect x="745.1" y="787.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.1" y="798.0">s..</text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyMethod (93 samples, 2.07%)</title><rect x="745.1" y="771.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.1" y="782.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.copy (93 samples, 2.07%)</title><rect x="745.1" y="755.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.1" y="766.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="753.3" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="756.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.07%)</title><rect x="753.3" y="723.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="756.3" y="734.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab_event(KlassHandle, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="753.3" y="707.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="756.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (2 samples, 0.04%)</title><rect x="753.5" y="707.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="756.5" y="718.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.04%)</title><rect x="753.5" y="691.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="756.5" y="702.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="753.5" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="756.5" y="686.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.02%)</title><rect x="753.8" y="675.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="756.8" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.&lt;init&gt; (59 samples, 1.31%)</title><rect x="754.1" y="739.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.1" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="769.3" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.3" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="769.3" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.3" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="769.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.3" y="702.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="769.3" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.3" y="686.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="769.3" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.3" y="670.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="769.3" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.3" y="654.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="769.3" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="772.3" y="638.0"></text>
</g>
<g>
<title>check_for_new_grace_period.isra.26 (1 samples, 0.02%)</title><rect x="769.3" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="772.3" y="622.0"></text>
</g>
<g>
<title>sun/reflect/ReflectionFactory.langReflectAccess (2 samples, 0.04%)</title><rect x="769.6" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (6 samples, 0.13%)</title><rect x="770.1" y="803.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (6 samples, 0.13%)</title><rect x="770.1" y="787.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.1" y="798.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (4 samples, 0.09%)</title><rect x="770.6" y="771.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.6" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getModifiers (1 samples, 0.02%)</title><rect x="771.7" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.7" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.02%)</title><rect x="772.0" y="819.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="772.2" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.2" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.11%)</title><rect x="772.5" y="819.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.5" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (5 samples, 0.11%)</title><rect x="772.5" y="803.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.5" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (5 samples, 0.11%)</title><rect x="772.5" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="773.0" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.0" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="773.3" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.3" y="766.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (145 samples, 3.23%)</title><rect x="773.8" y="835.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.8" y="846.0">clo..</text>
</g>
<g>
<title>clojure/lang/Reflector.boxArgs (2 samples, 0.04%)</title><rect x="774.3" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.3" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.isCongruent (5 samples, 0.11%)</title><rect x="774.8" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.8" y="830.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.paramArgTypeMatch (2 samples, 0.04%)</title><rect x="775.6" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.6" y="814.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.prepRet (9 samples, 0.20%)</title><rect x="776.2" y="819.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.2" y="830.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor2.invoke (6 samples, 0.13%)</title><rect x="776.4" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.4" y="814.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="778.0" y="803.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="781.0" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (125 samples, 2.79%)</title><rect x="778.5" y="819.0" width="32.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.5" y="830.0">ja..</text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (125 samples, 2.79%)</title><rect x="778.5" y="803.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.5" y="814.0">su..</text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor2.invoke (125 samples, 2.79%)</title><rect x="778.5" y="787.0" width="32.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.5" y="798.0">su..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.prepare (125 samples, 2.79%)</title><rect x="778.5" y="771.0" width="32.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="782.0">co..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="779.1" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (121 samples, 2.70%)</title><rect x="779.6" y="755.0" width="31.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.6" y="766.0">co..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (89 samples, 1.98%)</title><rect x="779.6" y="739.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.6" y="750.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.process (89 samples, 1.98%)</title><rect x="779.6" y="723.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.6" y="734.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.process (86 samples, 1.92%)</title><rect x="779.6" y="707.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.6" y="718.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$LocalManualCache.getIfPresent (85 samples, 1.89%)</title><rect x="779.6" y="691.0" width="22.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.6" y="702.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.getIfPresent (84 samples, 1.87%)</title><rect x="779.8" y="675.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.8" y="686.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.get (24 samples, 0.53%)</title><rect x="779.8" y="659.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.8" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getLiveEntry (19 samples, 0.42%)</title><rect x="779.8" y="643.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getEntry (15 samples, 0.33%)</title><rect x="779.8" y="627.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.equivalent (8 samples, 0.18%)</title><rect x="780.1" y="611.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.1" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doEquivalent (8 samples, 0.18%)</title><rect x="780.1" y="595.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.1" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.equals (8 samples, 0.18%)</title><rect x="780.1" y="579.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.1" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.equals (6 samples, 0.13%)</title><rect x="780.6" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.6" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (3 samples, 0.07%)</title><rect x="781.2" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (1 samples, 0.02%)</title><rect x="781.7" y="531.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="781.7" y="515.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.7" y="526.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="781.9" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.9" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.getFirst (6 samples, 0.13%)</title><rect x="782.2" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.length (1 samples, 0.02%)</title><rect x="783.5" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.5" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.isExpired (4 samples, 0.09%)</title><rect x="783.8" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.8" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.expiresAfterAccess (2 samples, 0.04%)</title><rect x="783.8" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.8" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.expiresAfterWrite (2 samples, 0.04%)</title><rect x="784.3" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.postReadCleanup (4 samples, 0.09%)</title><rect x="784.8" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.8" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.cleanUp (1 samples, 0.02%)</title><rect x="785.6" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.6" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.runLockedCleanup (1 samples, 0.02%)</title><rect x="785.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="785.6" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.6" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$Segment.recordRead (1 samples, 0.02%)</title><rect x="785.9" y="643.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.9" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.02%)</title><rect x="785.9" y="627.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.9" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache$2.offer (1 samples, 0.02%)</title><rect x="785.9" y="611.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.9" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.hash (58 samples, 1.29%)</title><rect x="786.1" y="659.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence.hash (58 samples, 1.29%)</title><rect x="786.1" y="643.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.1" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/base/Equivalence$Equals.doHash (57 samples, 1.27%)</title><rect x="786.4" y="627.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.4" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPrepareRequest.hashCode (42 samples, 0.94%)</title><rect x="786.4" y="611.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.4" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.hashCode (42 samples, 0.94%)</title><rect x="786.4" y="595.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.04%)</title><rect x="788.0" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.0" y="590.0"></text>
</g>
<g>
<title>java/util/Objects.hash (34 samples, 0.76%)</title><rect x="788.5" y="579.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (34 samples, 0.76%)</title><rect x="788.5" y="563.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.11%)</title><rect x="790.9" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (12 samples, 0.27%)</title><rect x="792.2" y="547.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.2" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (5 samples, 0.11%)</title><rect x="792.7" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.7" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableList.size (4 samples, 0.09%)</title><rect x="793.0" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.0" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (5 samples, 0.11%)</title><rect x="794.0" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.0" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="795.1" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (8 samples, 0.18%)</title><rect x="795.4" y="547.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.4" y="558.0"></text>
</g>
<g>
<title>com/datastax/oss/protocol/internal/util/collection/NullAllowingImmutableSet.iterator (1 samples, 0.02%)</title><rect x="796.7" y="531.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (2 samples, 0.04%)</title><rect x="796.9" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.9" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="796.9" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Boolean.hashCode (3 samples, 0.07%)</title><rect x="797.5" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Enum.hashCode (2 samples, 0.04%)</title><rect x="798.2" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.hashCode (2 samples, 0.04%)</title><rect x="798.8" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="799.3" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.3" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (2 samples, 0.04%)</title><rect x="799.8" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.8" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (3 samples, 0.07%)</title><rect x="800.3" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.3" y="622.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="801.1" y="611.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.1" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/cache/LocalCache.segmentFor (2 samples, 0.04%)</title><rect x="801.4" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/219245058.linkToTargetMethod (1 samples, 0.02%)</title><rect x="801.9" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (1 samples, 0.02%)</title><rect x="801.9" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.9" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor$$Lambda$284/1747507733.get$Lambda (1 samples, 0.02%)</title><rect x="801.9" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.9" y="670.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="801.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="804.9" y="654.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="801.9" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.9" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="801.9" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="804.9" y="622.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="801.9" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.9" y="606.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="801.9" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="804.9" y="590.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="801.9" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.9" y="574.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (3 samples, 0.07%)</title><rect x="802.2" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (2 samples, 0.04%)</title><rect x="802.5" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (2 samples, 0.04%)</title><rect x="802.5" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (32 samples, 0.71%)</title><rect x="803.0" y="739.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareAsyncProcessor.canProcess (5 samples, 0.11%)</title><rect x="803.8" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/type/reflect/GenericType.equals (2 samples, 0.04%)</title><rect x="804.6" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/reflect/TypeToken.equals (1 samples, 0.02%)</title><rect x="804.8" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlPrepareSyncProcessor.canProcess (7 samples, 0.16%)</title><rect x="805.1" y="723.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (10 samples, 0.22%)</title><rect x="806.9" y="723.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.9" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.canProcess (2 samples, 0.04%)</title><rect x="809.5" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.5" y="734.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.11%)</title><rect x="810.1" y="723.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="813.1" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Modifier.isPublic (2 samples, 0.04%)</title><rect x="811.4" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.4" y="830.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.29%)</title><rect x="811.9" y="835.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.9" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (7 samples, 0.16%)</title><rect x="811.9" y="819.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.9" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.&lt;init&gt; (5 samples, 0.11%)</title><rect x="812.4" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (3 samples, 0.07%)</title><rect x="813.0" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.13%)</title><rect x="813.8" y="819.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.11%)</title><rect x="814.0" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.11%)</title><rect x="814.0" y="787.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.11%)</title><rect x="814.0" y="771.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (11 samples, 0.25%)</title><rect x="815.3" y="835.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.25%)</title><rect x="815.3" y="819.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.02%)</title><rect x="815.3" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (10 samples, 0.22%)</title><rect x="815.6" y="803.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.18%)</title><rect x="815.6" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.07%)</title><rect x="815.9" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="815.9" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.04%)</title><rect x="816.1" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.04%)</title><rect x="816.1" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.02%)</title><rect x="816.4" y="707.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/2146338580.accept (1 samples, 0.02%)</title><rect x="816.4" y="691.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="816.4" y="675.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="816.4" y="659.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.02%)</title><rect x="816.4" y="643.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.09%)</title><rect x="816.6" y="771.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (4 samples, 0.09%)</title><rect x="816.6" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (4 samples, 0.09%)</title><rect x="816.6" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.6" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="816.9" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2 samples, 0.04%)</title><rect x="817.7" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (2 samples, 0.04%)</title><rect x="817.7" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.02%)</title><rect x="818.2" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.02%)</title><rect x="818.2" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.02%)</title><rect x="818.2" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="818.2" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="818.2" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (6 samples, 0.13%)</title><rect x="818.5" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (6 samples, 0.13%)</title><rect x="818.5" y="819.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (3 samples, 0.07%)</title><rect x="819.3" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.07%)</title><rect x="819.3" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.07%)</title><rect x="819.3" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (2 samples, 0.04%)</title><rect x="819.5" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="819.5" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.5" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.set (2 samples, 0.04%)</title><rect x="819.5" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.5" y="734.0"></text>
</g>
<g>
<title>clojure/lang/Reflector.invokeMatchingMethod (1 samples, 0.02%)</title><rect x="820.1" y="851.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.1" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SyncCqlSession.execute (837 samples, 18.65%)</title><rect x="820.3" y="851.0" width="220.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.3" y="862.0">com/datastax/oss/driver/api/c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.execute (836 samples, 18.63%)</title><rect x="820.6" y="835.0" width="219.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.6" y="846.0">com/datastax/oss/driver/inter..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (831 samples, 18.52%)</title><rect x="820.6" y="819.0" width="218.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.6" y="830.0">com/datastax/oss/driver/inter..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestSyncProcessor.process (831 samples, 18.52%)</title><rect x="820.6" y="803.0" width="218.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.6" y="814.0">com/datastax/oss/driver/inter..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.process (518 samples, 11.54%)</title><rect x="820.9" y="787.0" width="136.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.9" y="798.0">com/datastax/oss/..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.&lt;init&gt; (518 samples, 11.54%)</title><rect x="820.9" y="771.0" width="136.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.9" y="782.0">com/datastax/oss/..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="826.6" y="755.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="829.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="826.9" y="739.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="829.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/context/DriverContext.getRetryPolicy (4 samples, 0.09%)</title><rect x="827.2" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getDuration (10 samples, 0.22%)</title><rect x="828.2" y="755.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (3 samples, 0.07%)</title><rect x="828.2" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.07%)</title><rect x="828.2" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/219245058.linkToTargetMethod (7 samples, 0.16%)</title><rect x="829.0" y="739.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (6 samples, 0.13%)</title><rect x="829.3" y="723.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile$$Lambda$63/1492358500.get$Lambda (6 samples, 0.13%)</title><rect x="829.3" y="707.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile$$Lambda$63/1492358500.&lt;init&gt; (6 samples, 0.13%)</title><rect x="829.3" y="691.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.3" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="830.1" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.1" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getNettyOptions (7 samples, 0.16%)</title><rect x="830.8" y="755.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.8" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (7 samples, 0.16%)</title><rect x="830.8" y="739.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.09%)</title><rect x="831.6" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 0.09%)</title><rect x="831.6" y="707.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.6" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getRequestTracker (1 samples, 0.02%)</title><rect x="832.7" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.7" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (1 samples, 0.02%)</title><rect x="832.7" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.resolveExecutionProfile (4 samples, 0.09%)</title><rect x="833.0" y="755.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/config/DriverConfig.getDefaultProfile (1 samples, 0.02%)</title><rect x="833.0" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverConfig.getProfile (1 samples, 0.02%)</title><rect x="833.0" y="723.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableBiMap.get (1 samples, 0.02%)</title><rect x="833.0" y="707.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.0" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="833.2" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/Conversions.toMessage (40 samples, 0.89%)</title><rect x="834.0" y="755.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/DefaultConsistencyLevelRegistry.nameToCode (3 samples, 0.07%)</title><rect x="834.5" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (2 samples, 0.04%)</title><rect x="834.8" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (2 samples, 0.04%)</title><rect x="834.8" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="834.8" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.8" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getInt (7 samples, 0.16%)</title><rect x="835.3" y="739.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (6 samples, 0.13%)</title><rect x="835.3" y="723.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (6 samples, 0.13%)</title><rect x="835.3" y="707.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/219245058.linkToTargetMethod (1 samples, 0.02%)</title><rect x="836.9" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1896277646.invokeStatic_L_L (1 samples, 0.02%)</title><rect x="836.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.9" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getString (7 samples, 0.16%)</title><rect x="837.2" y="739.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/config/typesafe/TypesafeDriverExecutionProfile.getCached (4 samples, 0.09%)</title><rect x="837.9" y="723.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (4 samples, 0.09%)</title><rect x="837.9" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.9" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getConsistencyLevelRegistry (9 samples, 0.20%)</title><rect x="839.0" y="739.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (9 samples, 0.20%)</title><rect x="839.0" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.0" y="734.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="839.5" y="707.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="842.5" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="839.5" y="691.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="842.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="840.3" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="841.1" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="841.1" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="841.1" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="841.1" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getProtocolVersionRegistry (5 samples, 0.11%)</title><rect x="841.4" y="739.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (5 samples, 0.11%)</title><rect x="841.4" y="723.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="842.2" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="842.2" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="842.2" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.04%)</title><rect x="842.2" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.2" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.getPageSize (5 samples, 0.11%)</title><rect x="842.7" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/time/AtomicTimestampGenerator.next (2 samples, 0.04%)</title><rect x="844.0" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/time/MonotonicTimestampGenerator.computeNext (2 samples, 0.04%)</title><rect x="844.0" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/time/MonotonicTimestampGenerator.maybeLog (1 samples, 0.02%)</title><rect x="844.0" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/time/NativeClock.currentTimeMicros (1 samples, 0.02%)</title><rect x="844.3" y="707.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/time/NativeClock.fetchTimeMicros (1 samples, 0.02%)</title><rect x="844.3" y="691.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/os/Native.currentTimeMicros (1 samples, 0.02%)</title><rect x="844.3" y="675.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.3" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/os/JnrLibc.gettimeofday (1 samples, 0.02%)</title><rect x="844.3" y="659.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.3" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.flatMap (1 samples, 0.02%)</title><rect x="844.3" y="643.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.3" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/os/JnrLibc$$Lambda$150/1355350396.apply (1 samples, 0.02%)</title><rect x="844.3" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.3" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/os/JnrLibc.gettimeofdayImpl (1 samples, 0.02%)</title><rect x="844.3" y="611.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.3" y="622.0"></text>
</g>
<g>
<title>jnr/posix/LazyPOSIX.allocateTimeval (1 samples, 0.02%)</title><rect x="844.3" y="595.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.3" y="606.0"></text>
</g>
<g>
<title>jnr/posix/CheckedPOSIX.allocateTimeval (1 samples, 0.02%)</title><rect x="844.3" y="579.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.3" y="590.0"></text>
</g>
<g>
<title>jnr/posix/BaseNativePOSIX.allocateTimeval (1 samples, 0.02%)</title><rect x="844.3" y="563.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.3" y="574.0"></text>
</g>
<g>
<title>jnr/posix/DefaultNativeTimeval.&lt;init&gt; (1 samples, 0.02%)</title><rect x="844.3" y="547.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.3" y="558.0"></text>
</g>
<g>
<title>jnr/posix/Timeval.&lt;init&gt; (1 samples, 0.02%)</title><rect x="844.3" y="531.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.3" y="542.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.scheduleTimeout (15 samples, 0.33%)</title><rect x="844.5" y="755.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.5" y="766.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (11 samples, 0.25%)</title><rect x="844.5" y="739.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.5" y="750.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="845.6" y="723.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="848.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="845.6" y="707.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="848.6" y="718.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer$HashedWheelTimeout.&lt;init&gt; (5 samples, 0.11%)</title><rect x="845.8" y="723.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (1 samples, 0.02%)</title><rect x="847.1" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.1" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.02%)</title><rect x="847.1" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.02%)</title><rect x="847.1" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.1" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (1 samples, 0.02%)</title><rect x="847.1" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1566311673.linkToTargetMethod (2 samples, 0.04%)</title><rect x="847.4" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1996181658.invokeStatic_LL_L (2 samples, 0.04%)</title><rect x="847.4" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$$Lambda$247/1980959273.get$Lambda (1 samples, 0.02%)</title><rect x="847.7" y="707.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.7" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$$Lambda$247/1980959273.&lt;init&gt; (1 samples, 0.02%)</title><rect x="847.7" y="691.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.7" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.newQueryPlan (1 samples, 0.02%)</title><rect x="847.7" y="675.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.7" y="686.0"></text>
</g>
<g>
<title>java/time/Duration.toNanos (2 samples, 0.04%)</title><rect x="847.9" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.getTimeout (2 samples, 0.04%)</title><rect x="848.5" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/throttling/PassThroughRequestThrottler.register (384 samples, 8.56%)</title><rect x="849.0" y="755.0" width="101.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.0" y="766.0">com/datastax..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.onThrottleReady (384 samples, 8.56%)</title><rect x="849.0" y="739.0" width="101.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.0" y="750.0">com/datastax..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getLoadBalancingPolicyWrapper (8 samples, 0.18%)</title><rect x="849.0" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (7 samples, 0.16%)</title><rect x="849.3" y="707.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="850.3" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (3 samples, 0.07%)</title><rect x="850.3" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="850.3" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.07%)</title><rect x="850.3" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.3" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.sendRequest (287 samples, 6.39%)</title><rect x="851.1" y="723.0" width="75.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.1" y="734.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DriverChannel.write (275 samples, 6.13%)</title><rect x="851.1" y="707.0" width="72.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.1" y="718.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.writeAndFlush (275 samples, 6.13%)</title><rect x="851.1" y="691.0" width="72.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.1" y="702.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer.enqueue (275 samples, 6.13%)</title><rect x="851.1" y="675.0" width="72.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.1" y="686.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.access$100 (275 samples, 6.13%)</title><rect x="851.1" y="659.0" width="72.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.1" y="670.0">com/data..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Flusher.enqueue (275 samples, 6.13%)</title><rect x="851.1" y="643.0" width="72.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.1" y="654.0">com/data..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (274 samples, 6.11%)</title><rect x="851.1" y="627.0" width="72.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.1" y="638.0">io/netty..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (272 samples, 6.06%)</title><rect x="851.6" y="611.0" width="71.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.6" y="622.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (264 samples, 5.88%)</title><rect x="851.9" y="595.0" width="69.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.9" y="606.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.wakeup (264 samples, 5.88%)</title><rect x="851.9" y="579.0" width="69.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.9" y="590.0">io/nett..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (263 samples, 5.86%)</title><rect x="852.1" y="563.0" width="69.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.1" y="574.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (260 samples, 5.79%)</title><rect x="852.9" y="547.0" width="68.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.9" y="558.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.interrupt (260 samples, 5.79%)</title><rect x="852.9" y="531.0" width="68.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.9" y="542.0">sun/nio..</text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (1 samples, 0.02%)</title><rect x="854.0" y="515.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="857.0" y="526.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="854.0" y="499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.0" y="510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="854.2" y="515.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="857.2" y="526.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="854.2" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.2" y="510.0"></text>
</g>
<g>
<title>__write (254 samples, 5.66%)</title><rect x="854.5" y="515.0" width="66.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="857.5" y="526.0">__write</text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="858.7" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.7" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="859.0" y="499.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.0" y="510.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.04%)</title><rect x="859.2" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="862.2" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="859.5" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.5" y="494.0"></text>
</g>
<g>
<title>ret_from_sys_call (1 samples, 0.02%)</title><rect x="859.8" y="499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.8" y="510.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.04%)</title><rect x="860.0" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.0" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.04%)</title><rect x="860.0" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="863.0" y="494.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.02%)</title><rect x="860.3" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="863.3" y="478.0"></text>
</g>
<g>
<title>system_call_fastpath (231 samples, 5.15%)</title><rect x="860.6" y="499.0" width="60.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.6" y="510.0">system..</text>
</g>
<g>
<title>sys_write (231 samples, 5.15%)</title><rect x="860.6" y="483.0" width="60.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.6" y="494.0">sys_wr..</text>
</g>
<g>
<title>do_sync_write (1 samples, 0.02%)</title><rect x="861.3" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="864.3" y="478.0"></text>
</g>
<g>
<title>fget_light (7 samples, 0.16%)</title><rect x="861.6" y="467.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="864.6" y="478.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="863.4" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="866.4" y="478.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="863.7" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="866.7" y="478.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="863.7" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.7" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="863.7" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.7" y="446.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="863.7" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.7" y="430.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="863.7" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.7" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="863.7" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.7" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="863.7" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.7" y="382.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="863.7" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.7" y="366.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="863.7" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.7" y="350.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="863.7" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="863.7" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="863.7" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="866.7" y="302.0"></text>
</g>
<g>
<title>vfs_write (218 samples, 4.86%)</title><rect x="864.0" y="467.0" width="57.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="867.0" y="478.0">vfs_wr..</text>
</g>
<g>
<title>do_sync_write (210 samples, 4.68%)</title><rect x="864.5" y="451.0" width="55.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.5" y="462.0">do_sy..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="864.5" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.5" y="446.0"></text>
</g>
<g>
<title>kill_fasync (2 samples, 0.04%)</title><rect x="864.8" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.8" y="446.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="865.3" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.3" y="446.0"></text>
</g>
<g>
<title>pipe_write (206 samples, 4.59%)</title><rect x="865.6" y="435.0" width="54.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.6" y="446.0">pipe_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="866.6" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.6" y="430.0"></text>
</g>
<g>
<title>__percpu_counter_add (1 samples, 0.02%)</title><rect x="866.9" y="419.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.9" y="430.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.04%)</title><rect x="867.1" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.1" y="430.0"></text>
</g>
<g>
<title>__sb_start_write (11 samples, 0.25%)</title><rect x="867.7" y="419.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="870.7" y="430.0"></text>
</g>
<g>
<title>__percpu_counter_add (7 samples, 0.16%)</title><rect x="868.7" y="403.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.7" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (174 samples, 3.88%)</title><rect x="870.5" y="419.0" width="45.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.5" y="430.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (174 samples, 3.88%)</title><rect x="870.5" y="403.0" width="45.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.5" y="414.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (172 samples, 3.83%)</title><rect x="870.5" y="387.0" width="45.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.5" y="398.0">_raw..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="915.8" y="387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.8" y="398.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="915.8" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="915.8" y="355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="918.8" y="366.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="915.8" y="339.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="918.8" y="350.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="915.8" y="323.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="918.8" y="334.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="915.8" y="307.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.8" y="318.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="916.0" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.0" y="398.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="916.0" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.0" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="916.0" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.0" y="366.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="916.0" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.0" y="350.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="916.0" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.0" y="334.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="916.0" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.0" y="318.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="916.3" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.3" y="430.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.07%)</title><rect x="916.6" y="419.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="919.6" y="430.0"></text>
</g>
<g>
<title>__mnt_want_write_file (3 samples, 0.07%)</title><rect x="916.6" y="403.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.6" y="414.0"></text>
</g>
<g>
<title>__mnt_want_write (3 samples, 0.07%)</title><rect x="916.6" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.6" y="398.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="917.3" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.3" y="430.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="917.6" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="920.6" y="430.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (7 samples, 0.16%)</title><rect x="917.9" y="419.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.9" y="430.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.09%)</title><rect x="918.1" y="403.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="921.1" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.09%)</title><rect x="918.1" y="387.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.1" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="919.2" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.2" y="414.0"></text>
</g>
<g>
<title>static_key_enabled (1 samples, 0.02%)</title><rect x="919.5" y="403.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="922.5" y="414.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.09%)</title><rect x="919.7" y="451.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.7" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="920.8" y="451.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="923.8" y="462.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="921.0" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="924.0" y="462.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (6 samples, 0.13%)</title><rect x="921.3" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.3" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.inEventLoop (1 samples, 0.02%)</title><rect x="922.6" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.02%)</title><rect x="922.9" y="595.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.9" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.02%)</title><rect x="922.9" y="579.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.9" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscUnboundedArrayQueue.offer (1 samples, 0.02%)</title><rect x="922.9" y="563.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueue.offer (1 samples, 0.02%)</title><rect x="922.9" y="547.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.9" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/BaseMpscLinkedArrayQueueProducerFields.casProducerIndex (1 samples, 0.02%)</title><rect x="922.9" y="531.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.02%)</title><rect x="923.1" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="923.1" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="923.1" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.1" y="606.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="923.1" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="926.1" y="590.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (6 samples, 0.13%)</title><rect x="923.4" y="707.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler$NodeResponseCallback.&lt;init&gt; (6 samples, 0.13%)</title><rect x="923.4" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.4" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="924.4" y="675.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="927.4" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="924.4" y="659.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="927.4" y="670.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="924.7" y="675.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (6 samples, 0.13%)</title><rect x="925.0" y="707.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.0" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.addListener (6 samples, 0.13%)</title><rect x="925.0" y="691.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.0" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener (6 samples, 0.13%)</title><rect x="925.0" y="675.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.0" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.addListener0 (1 samples, 0.02%)</title><rect x="926.3" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.3" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/LoadBalancingPolicyWrapper.newQueryPlan (89 samples, 1.98%)</title><rect x="926.6" y="723.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.6" y="734.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.newQueryPlan (89 samples, 1.98%)</title><rect x="926.6" y="707.0" width="23.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.6" y="718.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy.getReplicas (82 samples, 1.83%)</title><rect x="926.6" y="691.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="929.6" y="702.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/context/DefaultDriverContext.getMetadataManager (3 samples, 0.07%)</title><rect x="929.2" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/LazyReference.get (3 samples, 0.07%)</title><rect x="929.2" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="929.4" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="929.4" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="929.4" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="929.7" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.7" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.getRoutingKeyspace (16 samples, 0.36%)</title><rect x="930.0" y="675.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.0" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.get (2 samples, 0.04%)</title><rect x="933.4" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.4" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.size (1 samples, 0.02%)</title><rect x="933.9" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.9" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/DefaultMetadata.getTokenMap (2 samples, 0.04%)</title><rect x="934.2" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.2" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.04%)</title><rect x="934.2" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.2" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.04%)</title><rect x="934.2" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.2" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.04%)</title><rect x="934.2" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.2" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="934.2" y="611.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.2" y="622.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="934.4" y="611.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="937.4" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getReplicas (26 samples, 0.58%)</title><rect x="934.7" y="675.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.7" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/DefaultTokenMap.getKeyspaceMap (11 samples, 0.25%)</title><rect x="934.7" y="659.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.7" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (11 samples, 0.25%)</title><rect x="934.7" y="643.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (11 samples, 0.25%)</title><rect x="934.7" y="627.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.7" y="638.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="934.7" y="611.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="937.7" y="622.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="934.7" y="595.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="937.7" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.equals (1 samples, 0.02%)</title><rect x="935.5" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.5" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.hashCode (1 samples, 0.02%)</title><rect x="935.8" y="611.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="938.8" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (1 samples, 0.02%)</title><rect x="935.8" y="595.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.8" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap.equals (2 samples, 0.04%)</title><rect x="936.0" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.0" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (1 samples, 0.02%)</title><rect x="936.3" y="595.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.3" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="936.3" y="579.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="936.3" y="563.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.3" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap.hashCode (3 samples, 0.07%)</title><rect x="936.5" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.5" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.iterator (1 samples, 0.02%)</title><rect x="936.8" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.8" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (1 samples, 0.02%)</title><rect x="937.1" y="595.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.1" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="937.1" y="579.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.1" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="937.3" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.3" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (15 samples, 0.33%)</title><rect x="937.6" y="659.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.6" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/KeyspaceTokenMap.getReplicas (12 samples, 0.27%)</title><rect x="937.6" y="643.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.6" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (6 samples, 0.13%)</title><rect x="937.6" y="627.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.6" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.get (6 samples, 0.13%)</title><rect x="937.6" y="611.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.6" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.equals (4 samples, 0.09%)</title><rect x="938.1" y="595.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.1" y="606.0"></text>
</g>
<g>
<title>java/util/Collections.binarySearch (6 samples, 0.13%)</title><rect x="939.2" y="627.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.2" y="638.0"></text>
</g>
<g>
<title>java/util/Collections.indexedBinarySearch (6 samples, 0.13%)</title><rect x="939.2" y="611.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.2" y="622.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.get (3 samples, 0.07%)</title><rect x="940.0" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.0" y="606.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3TokenFactory.hash (3 samples, 0.07%)</title><rect x="940.7" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.7" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3TokenFactory.murmur (3 samples, 0.07%)</title><rect x="940.7" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.7" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/DefaultSession.getKeyspace (24 samples, 0.53%)</title><rect x="941.5" y="675.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.5" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (16 samples, 0.36%)</title><rect x="943.6" y="659.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (16 samples, 0.36%)</title><rect x="943.6" y="643.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (15 samples, 0.33%)</title><rect x="943.9" y="627.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.9" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.get (1 samples, 0.02%)</title><rect x="947.8" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.8" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (3 samples, 0.07%)</title><rect x="948.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelPool.getInFlight (3 samples, 0.07%)</title><rect x="948.1" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.1" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/pool/ChannelSet.getInFlight (3 samples, 0.07%)</title><rect x="948.1" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/metadata/token/Murmur3Token.hashCode (3 samples, 0.07%)</title><rect x="948.1" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.1" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isUnhealthy (1 samples, 0.02%)</title><rect x="948.9" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.isBusy (1 samples, 0.02%)</title><rect x="948.9" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.9" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.getInFlight (1 samples, 0.02%)</title><rect x="948.9" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="948.9" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.9" y="654.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/DefaultLoadBalancingPolicy.shuffleHead (1 samples, 0.02%)</title><rect x="949.2" y="691.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.2" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/loadbalancing/BasicLoadBalancingPolicy.shuffleHead (1 samples, 0.02%)</title><rect x="949.2" y="675.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.shuffleHead (1 samples, 0.02%)</title><rect x="949.2" y="659.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.2" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/ArrayUtils.swap (2 samples, 0.04%)</title><rect x="949.4" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.4" y="702.0"></text>
</g>
<g>
<title>io/netty/util/HashedWheelTimer.newTimeout (1 samples, 0.02%)</title><rect x="950.0" y="755.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.0" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="950.2" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (15 samples, 0.33%)</title><rect x="950.5" y="755.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.5" y="766.0"></text>
</g>
<g>
<title>JVM_IHashCode (11 samples, 0.25%)</title><rect x="950.7" y="739.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="953.7" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (8 samples, 0.18%)</title><rect x="951.3" y="723.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.3" y="734.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 0.09%)</title><rect x="952.3" y="707.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="955.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="953.4" y="723.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.07%)</title><rect x="953.6" y="739.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="956.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="954.4" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="955.2" y="755.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.2" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="955.2" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.02%)</title><rect x="955.2" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="955.5" y="723.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.5" y="734.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="955.7" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="958.7" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.orElse (1 samples, 0.02%)</title><rect x="956.0" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.0" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/channel/DefaultWriteCoalescer$Write.&lt;init&gt; (1 samples, 0.02%)</title><rect x="956.0" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3 samples, 0.07%)</title><rect x="956.3" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (3 samples, 0.07%)</title><rect x="956.3" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (2 samples, 0.04%)</title><rect x="956.5" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.04%)</title><rect x="956.5" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.5" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestHandler.&lt;init&gt; (2 samples, 0.04%)</title><rect x="957.0" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/ResultSets.newInstance (1 samples, 0.02%)</title><rect x="957.6" y="787.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/concurrent/CompletableFutures.getUninterruptibly (309 samples, 6.89%)</title><rect x="957.8" y="787.0" width="81.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.8" y="798.0">com/datas..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (309 samples, 6.89%)</title><rect x="957.8" y="771.0" width="81.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.8" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.reportGet (1 samples, 0.02%)</title><rect x="957.8" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (308 samples, 6.86%)</title><rect x="958.1" y="755.0" width="81.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.1" y="766.0">java/util..</text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.02%)</title><rect x="978.9" y="739.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="981.9" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="723.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.9" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="707.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="981.9" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="691.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.9" y="702.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="675.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.9" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle, int, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="659.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="981.9" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_pool(KlassHandle&amp;, Symbol*&amp;, Symbol*&amp;, KlassHandle&amp;, constantPoolHandle, int, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="643.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="981.9" y="654.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.02%)</title><rect x="978.9" y="627.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (155 samples, 3.45%)</title><rect x="979.1" y="739.0" width="40.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (155 samples, 3.45%)</title><rect x="979.1" y="723.0" width="40.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.1" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (6 samples, 0.13%)</title><rect x="979.7" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.7" y="718.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="981.0" y="691.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (147 samples, 3.28%)</title><rect x="981.2" y="707.0" width="38.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.2" y="718.0">jav..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (147 samples, 3.28%)</title><rect x="981.2" y="691.0" width="38.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="984.2" y="702.0">sun..</text>
</g>
<g>
<title>Unsafe_Park (135 samples, 3.01%)</title><rect x="983.1" y="675.0" width="35.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="986.1" y="686.0">Uns..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="985.2" y="659.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="988.2" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.18%)</title><rect x="986.0" y="659.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.0" y="670.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="987.0" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.0" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="987.3" y="643.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="990.3" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="987.5" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="990.5" y="638.0"></text>
</g>
<g>
<title>pthread_getspecific@plt (1 samples, 0.02%)</title><rect x="987.8" y="643.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="990.8" y="654.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="988.1" y="659.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="991.1" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.31%)</title><rect x="988.3" y="659.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="991.3" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="989.7" y="643.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.7" y="654.0"></text>
</g>
<g>
<title>system_call_fastpath (8 samples, 0.18%)</title><rect x="989.9" y="643.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="992.9" y="654.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.18%)</title><rect x="989.9" y="627.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="992.9" y="638.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.13%)</title><rect x="990.2" y="611.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.2" y="622.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.11%)</title><rect x="990.4" y="595.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="993.4" y="606.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="991.2" y="579.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="994.2" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (2 samples, 0.04%)</title><rect x="991.2" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="994.2" y="574.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="991.8" y="611.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="994.8" y="622.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="991.8" y="595.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.8" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="991.8" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.8" y="590.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="991.8" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.8" y="574.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="991.8" y="547.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.8" y="558.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="991.8" y="531.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.8" y="542.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="991.8" y="515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.8" y="526.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="991.8" y="499.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.8" y="510.0"></text>
</g>
<g>
<title>__memcpy (1 samples, 0.02%)</title><rect x="991.8" y="483.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.8" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_wait (85 samples, 1.89%)</title><rect x="992.0" y="659.0" width="22.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="995.0" y="670.0">_..</text>
</g>
<g>
<title>auditsys (1 samples, 0.02%)</title><rect x="995.4" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="998.4" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="995.4" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="998.4" y="638.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="995.7" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.7" y="654.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="995.7" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.7" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="995.7" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="998.7" y="622.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="995.7" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.7" y="606.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="995.7" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.7" y="590.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="995.7" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.7" y="574.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="996.0" y="643.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.0" y="654.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.11%)</title><rect x="996.2" y="643.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.2" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.11%)</title><rect x="996.2" y="627.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="999.2" y="638.0"></text>
</g>
<g>
<title>dput (1 samples, 0.02%)</title><rect x="996.8" y="611.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.8" y="622.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.04%)</title><rect x="997.0" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.0" y="622.0"></text>
</g>
<g>
<title>sysret_signal (1 samples, 0.02%)</title><rect x="997.5" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.5" y="654.0"></text>
</g>
<g>
<title>system_call_fastpath (63 samples, 1.40%)</title><rect x="997.8" y="643.0" width="16.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1000.8" y="654.0"></text>
</g>
<g>
<title>sys_futex (63 samples, 1.40%)</title><rect x="997.8" y="627.0" width="16.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.8" y="638.0"></text>
</g>
<g>
<title>do_futex (62 samples, 1.38%)</title><rect x="997.8" y="611.0" width="16.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.8" y="622.0"></text>
</g>
<g>
<title>futex_wait (58 samples, 1.29%)</title><rect x="998.9" y="595.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1001.9" y="606.0"></text>
</g>
<g>
<title>futex_wait_queue_me (49 samples, 1.09%)</title><rect x="999.1" y="579.0" width="12.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1002.1" y="590.0"></text>
</g>
<g>
<title>schedule (47 samples, 1.05%)</title><rect x="999.6" y="563.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1002.6" y="574.0"></text>
</g>
<g>
<title>__schedule (46 samples, 1.02%)</title><rect x="999.9" y="547.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.9" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (44 samples, 0.98%)</title><rect x="1000.2" y="531.0" width="11.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.2" y="542.0"></text>
</g>
<g>
<title>__mmdrop (1 samples, 0.02%)</title><rect x="1011.5" y="515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1014.5" y="526.0"></text>
</g>
<g>
<title>pgd_free (1 samples, 0.02%)</title><rect x="1011.5" y="499.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.5" y="510.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1011.7" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1014.7" y="542.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.02%)</title><rect x="1011.7" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.7" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1011.7" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.7" y="510.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="1011.7" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1014.7" y="494.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="1011.7" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.7" y="478.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1011.7" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.7" y="462.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1011.7" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.7" y="446.0"></text>
</g>
<g>
<title>virtnet_poll?[virtio_net] (1 samples, 0.02%)</title><rect x="1011.7" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.7" y="430.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1011.7" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.7" y="414.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1011.7" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.7" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1011.7" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.7" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1011.7" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1014.7" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1011.7" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1014.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1011.7" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.7" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1011.7" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1014.7" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1011.7" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1014.7" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1011.7" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.7" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1011.7" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.7" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1011.7" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.7" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1011.7" y="227.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.7" y="238.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1011.7" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1014.7" y="222.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1011.7" y="195.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1014.7" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1011.7" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.7" y="190.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.13%)</title><rect x="1012.0" y="579.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.0" y="590.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="1012.8" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1015.8" y="574.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="1013.3" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.3" y="574.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1013.6" y="579.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.6" y="590.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="1013.8" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.8" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1014.1" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1017.1" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="1014.4" y="659.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1017.4" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.07%)</title><rect x="1014.9" y="659.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1017.9" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.07%)</title><rect x="1015.7" y="659.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1018.7" y="670.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.07%)</title><rect x="1016.5" y="659.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.5" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.11%)</title><rect x="1017.3" y="659.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1020.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="1018.6" y="675.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1021.6" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="1018.6" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1021.6" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="1019.1" y="675.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1022.1" y="686.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="1019.4" y="675.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1022.4" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.02%)</title><rect x="1019.4" y="659.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1022.4" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="1019.6" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1022.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (73 samples, 1.63%)</title><rect x="1019.9" y="739.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.9" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/session/RequestProcessorRegistry.processorFor (5 samples, 0.11%)</title><rect x="1039.1" y="819.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.1" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/CqlRequestAsyncProcessor.canProcess (1 samples, 0.02%)</title><rect x="1039.6" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/type/reflect/GenericType.equals (1 samples, 0.02%)</title><rect x="1039.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.6" y="798.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="1039.9" y="803.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1042.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultPreparedStatement.bind (69 samples, 1.54%)</title><rect x="1040.4" y="851.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.4" y="862.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultBoundStatement.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1040.4" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/data/ValuesHelper.encodePreparedValues (65 samples, 1.45%)</title><rect x="1041.4" y="835.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.4" y="846.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultColumnDefinitions.get (2 samples, 0.04%)</title><rect x="1044.1" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.1" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.encode (19 samples, 0.42%)</title><rect x="1044.6" y="819.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.encode (19 samples, 0.42%)</title><rect x="1044.6" y="803.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.6" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (3 samples, 0.07%)</title><rect x="1045.1" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (2 samples, 0.04%)</title><rect x="1045.1" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (1 samples, 0.02%)</title><rect x="1045.4" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1045.4" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.02%)</title><rect x="1045.4" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="1045.4" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.4" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (1 samples, 0.02%)</title><rect x="1045.7" y="771.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.7" y="782.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.02%)</title><rect x="1045.9" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.9" y="798.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.02%)</title><rect x="1045.9" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.9" y="782.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (13 samples, 0.29%)</title><rect x="1046.2" y="787.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="1046.2" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1046.2" y="755.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.2" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1046.2" y="739.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1049.2" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1046.2" y="723.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="1046.2" y="707.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.2" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="1046.2" y="691.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.2" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="1046.2" y="675.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.2" y="686.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1046.2" y="659.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1049.2" y="670.0"></text>
</g>
<g>
<title>SurvRateGroup::next_age_index() (1 samples, 0.02%)</title><rect x="1046.2" y="643.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1049.2" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (12 samples, 0.27%)</title><rect x="1046.4" y="771.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeBufferLoop (2 samples, 0.04%)</title><rect x="1046.4" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (10 samples, 0.22%)</title><rect x="1047.0" y="755.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeBufferLoop (10 samples, 0.22%)</title><rect x="1047.0" y="739.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.02%)</title><rect x="1048.0" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.07%)</title><rect x="1048.3" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (3 samples, 0.07%)</title><rect x="1048.3" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.3" y="718.0"></text>
</g>
<g>
<title>java/nio/StringCharBuffer.get (2 samples, 0.04%)</title><rect x="1049.1" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1049.1" y="707.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.02%)</title><rect x="1049.3" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1052.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (2 samples, 0.04%)</title><rect x="1049.6" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.6" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (2 samples, 0.04%)</title><rect x="1049.6" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (2 samples, 0.04%)</title><rect x="1049.6" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Bits.putLong (2 samples, 0.04%)</title><rect x="1049.6" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Bits.putLongB (2 samples, 0.04%)</title><rect x="1049.6" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer._put (2 samples, 0.04%)</title><rect x="1049.6" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.6" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/registry/CachingCodecRegistry.codecFor (32 samples, 0.71%)</title><rect x="1050.1" y="819.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.1" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.trace (2 samples, 0.04%)</title><rect x="1053.0" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.0" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.02%)</title><rect x="1053.0" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.0" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (1 samples, 0.02%)</title><rect x="1053.0" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.0" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.02%)</title><rect x="1053.3" y="787.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.3" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_2 (1 samples, 0.02%)</title><rect x="1053.3" y="771.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/BlobCodec.accepts (5 samples, 0.11%)</title><rect x="1053.5" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.5" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1054.6" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1057.6" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1054.6" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1057.6" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1054.6" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1057.6" y="766.0"></text>
</g>
<g>
<title>do_softirq (1 samples, 0.02%)</title><rect x="1054.6" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1057.6" y="750.0"></text>
</g>
<g>
<title>call_softirq (1 samples, 0.02%)</title><rect x="1054.6" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1057.6" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1054.6" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1057.6" y="718.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1054.6" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1057.6" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/BlobCodec.encode (2 samples, 0.04%)</title><rect x="1054.9" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/StringCodec.accepts (3 samples, 0.07%)</title><rect x="1055.4" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.4" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.accepts (3 samples, 0.07%)</title><rect x="1056.2" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.2" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/type/codec/UuidCodec.encode (3 samples, 0.07%)</title><rect x="1057.0" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.0" y="814.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="1057.7" y="803.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1060.7" y="814.0"></text>
</g>
<g>
<title>hammer/core$getInsertStatementBind.invoke (179 samples, 3.99%)</title><rect x="1058.5" y="851.0" width="47.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.5" y="862.0">hamm..</text>
</g>
<g>
<title>hammer/core$getInsertStatementBind.invokeStatic (179 samples, 3.99%)</title><rect x="1058.5" y="835.0" width="47.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.5" y="846.0">hamm..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.bindMarker (4 samples, 0.09%)</title><rect x="1058.8" y="819.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.8" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.bindMarker (4 samples, 0.09%)</title><rect x="1058.8" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultBindMarker.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1058.8" y="787.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.appendIds (4 samples, 0.09%)</title><rect x="1058.8" y="771.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.8" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (22 samples, 0.49%)</title><rect x="1059.9" y="819.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.9" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (15 samples, 0.33%)</title><rect x="1059.9" y="803.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromInternal (1 samples, 0.02%)</title><rect x="1059.9" y="787.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.9" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isDoubleQuoted (1 samples, 0.02%)</title><rect x="1060.1" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isQuoted (1 samples, 0.02%)</title><rect x="1060.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1060.1" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (5 samples, 0.11%)</title><rect x="1060.4" y="787.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.4" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (2 samples, 0.04%)</title><rect x="1060.6" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (2 samples, 0.04%)</title><rect x="1060.6" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1061.2" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.18%)</title><rect x="1061.7" y="787.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.18%)</title><rect x="1061.7" y="771.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.16%)</title><rect x="1061.7" y="755.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.16%)</title><rect x="1061.7" y="739.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.7" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.04%)</title><rect x="1062.0" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.0" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.09%)</title><rect x="1062.5" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.5" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="1063.3" y="707.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.3" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1063.5" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (7 samples, 0.16%)</title><rect x="1063.8" y="803.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.8" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/QueryBuilder.insertInto (7 samples, 0.16%)</title><rect x="1063.8" y="787.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.&lt;init&gt; (7 samples, 0.16%)</title><rect x="1063.8" y="771.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.8" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.&lt;init&gt; (7 samples, 0.16%)</title><rect x="1063.8" y="755.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.8" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1064.1" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.append (3 samples, 0.07%)</title><rect x="1064.3" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.value (1 samples, 0.02%)</title><rect x="1065.1" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.rotateLeft (1 samples, 0.02%)</title><rect x="1065.4" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/querybuilder/insert/OngoingValues.value (100 samples, 2.23%)</title><rect x="1065.6" y="819.0" width="26.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1068.6" y="830.0">c..</text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (32 samples, 0.71%)</title><rect x="1065.6" y="803.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.6" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromInternal (1 samples, 0.02%)</title><rect x="1065.9" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.9" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isDoubleQuoted (7 samples, 0.16%)</title><rect x="1066.2" y="787.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.2" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isQuoted (7 samples, 0.16%)</title><rect x="1066.2" y="771.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="1067.5" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (20 samples, 0.45%)</title><rect x="1068.0" y="787.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (18 samples, 0.40%)</title><rect x="1068.5" y="771.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.5" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (15 samples, 0.33%)</title><rect x="1068.5" y="755.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="1072.5" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="1072.5" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.07%)</title><rect x="1072.5" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.07%)</title><rect x="1072.5" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.5" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.04%)</title><rect x="1072.7" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="1073.3" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="1073.3" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1073.5" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1073.5" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.5" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.04%)</title><rect x="1073.5" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.value (68 samples, 1.52%)</title><rect x="1074.1" y="803.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.1" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/ImmutableCollections.append (68 samples, 1.52%)</title><rect x="1074.1" y="787.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1077.1" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.build (31 samples, 0.69%)</title><rect x="1074.6" y="771.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.6" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.of (1 samples, 0.02%)</title><rect x="1075.4" y="755.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.4" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableBiMap.of (1 samples, 0.02%)</title><rect x="1075.4" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableBiMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1075.4" y="723.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1078.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.fromEntryArray (27 samples, 0.60%)</title><rect x="1075.6" y="755.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.6" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Hashing.closedTableSize (1 samples, 0.02%)</title><rect x="1077.5" y="739.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.checkNoConflictInKeyBucket (5 samples, 0.11%)</title><rect x="1077.7" y="739.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.equals (5 samples, 0.11%)</title><rect x="1077.7" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.7" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.makeImmutable (14 samples, 0.31%)</title><rect x="1079.0" y="739.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntry.&lt;init&gt; (14 samples, 0.31%)</title><rect x="1079.0" y="723.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.&lt;init&gt; (14 samples, 0.31%)</title><rect x="1079.0" y="707.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.0" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.hashCode (1 samples, 0.02%)</title><rect x="1082.5" y="691.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.5" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.put (13 samples, 0.29%)</title><rect x="1082.7" y="771.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.7" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.put (12 samples, 0.27%)</title><rect x="1082.7" y="755.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.7" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.ensureCapacity (4 samples, 0.09%)</title><rect x="1082.7" y="739.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.7" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="1082.7" y="723.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.7" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.entryOf (8 samples, 0.18%)</title><rect x="1083.8" y="739.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.8" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (7 samples, 0.16%)</title><rect x="1084.0" y="723.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.0" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getKey (1 samples, 0.02%)</title><rect x="1084.6" y="707.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.6" y="718.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="1084.8" y="707.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1087.8" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.entryOf (1 samples, 0.02%)</title><rect x="1085.9" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1085.9" y="739.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1085.9" y="723.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.9" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.builder (4 samples, 0.09%)</title><rect x="1086.1" y="771.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.1" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1086.1" y="755.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap$Builder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1086.1" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getKey (3 samples, 0.07%)</title><rect x="1086.4" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMap.entrySet (17 samples, 0.38%)</title><rect x="1087.2" y="771.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.2" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.createEntrySet (6 samples, 0.13%)</title><rect x="1087.2" y="755.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.2" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.&lt;init&gt; (6 samples, 0.13%)</title><rect x="1087.2" y="739.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.2" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.asImmutableList (5 samples, 0.11%)</title><rect x="1087.2" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.2" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.asImmutableList (5 samples, 0.11%)</title><rect x="1087.2" y="707.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.2" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1087.2" y="691.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1090.2" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.getValue (1 samples, 0.02%)</title><rect x="1088.0" y="675.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.0" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1088.2" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1091.2" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1088.2" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1088.2" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1088.2" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.2" y="638.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1088.5" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableBiMap.createEntrySet (11 samples, 0.25%)</title><rect x="1088.8" y="755.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.8" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableSet.of (6 samples, 0.13%)</title><rect x="1088.8" y="739.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.8" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/SingletonImmutableSet.&lt;init&gt; (6 samples, 0.13%)</title><rect x="1088.8" y="723.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.8" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/Maps.immutableEntry (5 samples, 0.11%)</title><rect x="1090.4" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.4" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableEntry.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1090.4" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.4" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap.fromEntryArray (1 samples, 0.02%)</title><rect x="1091.4" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.4" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableMapEntrySet$RegularEntrySet.iterator (1 samples, 0.02%)</title><rect x="1091.7" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.7" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (1 samples, 0.02%)</title><rect x="1091.7" y="755.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (1 samples, 0.02%)</title><rect x="1091.7" y="739.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.7" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableList.listIterator (1 samples, 0.02%)</title><rect x="1091.7" y="723.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.7" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.setConsistencyLevel (1 samples, 0.02%)</title><rect x="1091.9" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.9" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.setConsistencyLevel (1 samples, 0.02%)</title><rect x="1091.9" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.9" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1091.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.9" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.build (51 samples, 1.14%)</title><rect x="1092.2" y="819.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.2" y="830.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatementBuilder.build (8 samples, 0.18%)</title><rect x="1092.2" y="803.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.2" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/StatementBuilder.buildCustomPayload (1 samples, 0.02%)</title><rect x="1093.5" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.5" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/cql/DefaultSimpleStatement.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1093.8" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.8" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.builder (43 samples, 0.96%)</title><rect x="1094.3" y="803.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.3" y="814.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/cql/SimpleStatement.builder (1 samples, 0.02%)</title><rect x="1094.3" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.3" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1094.3" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.3" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1094.3" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.3" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="1094.3" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.3" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="1094.3" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.asCql (41 samples, 0.91%)</title><rect x="1094.6" y="787.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.6" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.append (5 samples, 0.11%)</title><rect x="1094.8" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.8" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/select/DefaultBindMarker.appendTo (1 samples, 0.02%)</title><rect x="1094.8" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="1094.8" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.8" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="1094.8" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.8" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="1094.8" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="1094.8" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="1095.1" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.1" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="1095.1" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1095.3" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.3" y="734.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.04%)</title><rect x="1095.6" y="723.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1098.6" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.appendIds (28 samples, 0.62%)</title><rect x="1096.1" y="771.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.1" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (9 samples, 0.20%)</title><rect x="1096.1" y="755.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.1" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (9 samples, 0.20%)</title><rect x="1096.1" y="739.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (8 samples, 0.18%)</title><rect x="1096.4" y="723.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.18%)</title><rect x="1096.4" y="707.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.18%)</title><rect x="1096.4" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.11%)</title><rect x="1096.7" y="675.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.11%)</title><rect x="1096.7" y="659.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="1097.2" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.2" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="1097.5" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.5" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.04%)</title><rect x="1097.5" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.5" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="1098.0" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.0" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.next (3 samples, 0.07%)</title><rect x="1098.5" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.get (2 samples, 0.04%)</title><rect x="1098.5" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableMap$Values.get (2 samples, 0.04%)</title><rect x="1098.5" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.5" y="734.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.02%)</title><rect x="1098.5" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1101.5" y="718.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1098.8" y="707.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1101.8" y="718.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1099.0" y="739.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1102.0" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet.iterator (4 samples, 0.09%)</title><rect x="1099.3" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet.iterator (4 samples, 0.09%)</title><rect x="1099.3" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (3 samples, 0.07%)</title><rect x="1099.3" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (3 samples, 0.07%)</title><rect x="1099.3" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (3 samples, 0.07%)</title><rect x="1099.3" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1099.3" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.3" y="686.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.04%)</title><rect x="1099.6" y="675.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1102.6" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableSet.asList (1 samples, 0.02%)</title><rect x="1100.1" y="723.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.1" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet.createAsList (1 samples, 0.02%)</title><rect x="1100.1" y="707.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.1" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/IndexedImmutableSet$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1100.1" y="691.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.1" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableAsList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1100.1" y="675.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.1" y="686.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1100.1" y="659.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.1" y="670.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1100.1" y="643.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.27%)</title><rect x="1100.3" y="755.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.3" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.27%)</title><rect x="1100.3" y="739.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.3" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.27%)</title><rect x="1100.3" y="723.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (4 samples, 0.09%)</title><rect x="1101.7" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="1102.7" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.7" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/CqlHelper.qualify (7 samples, 0.16%)</title><rect x="1103.5" y="771.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.5" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.asCql (7 samples, 0.16%)</title><rect x="1103.5" y="755.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.5" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.needsDoubleQuotes (6 samples, 0.13%)</title><rect x="1103.5" y="739.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.5" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/core/util/Strings.isReservedCqlKeyword (6 samples, 0.13%)</title><rect x="1103.5" y="723.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.5" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/RegularImmutableSet.contains (4 samples, 0.09%)</title><rect x="1103.5" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.5" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/api/core/CqlIdentifier.fromCql (2 samples, 0.04%)</title><rect x="1104.0" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1104.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1104.5" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1104.5" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1104.5" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.5" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="1104.5" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.5" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1104.8" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.8" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="1104.8" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.8" y="638.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1105.1" y="739.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1108.1" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/internal/querybuilder/insert/DefaultInsert.isIdempotent (1 samples, 0.02%)</title><rect x="1105.3" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.3" y="798.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.iterator (1 samples, 0.02%)</title><rect x="1105.3" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.3" y="782.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (1 samples, 0.02%)</title><rect x="1105.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.3" y="766.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList.listIterator (1 samples, 0.02%)</title><rect x="1105.3" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.3" y="750.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/ImmutableList$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1105.3" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.3" y="734.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/AbstractIndexedListIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1105.3" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.3" y="718.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/UnmodifiableListIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1105.3" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.3" y="702.0"></text>
</g>
<g>
<title>com/datastax/oss/driver/shaded/guava/common/collect/UnmodifiableIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1105.3" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="1105.6" y="851.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="1105.6" y="835.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="1105.6" y="819.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1106.4" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.4" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1107.2" y="787.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.2" y="798.0"></text>
</g>
<g>
<title>hammer/utils$rand_str2.invoke (35 samples, 0.78%)</title><rect x="1107.4" y="883.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.4" y="894.0"></text>
</g>
<g>
<title>hammer/utils$rand_str2.invokeStatic (35 samples, 0.78%)</title><rect x="1107.4" y="867.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.4" y="878.0"></text>
</g>
<g>
<title>clojure/lang/RT.charCast (5 samples, 0.11%)</title><rect x="1108.2" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.2" y="862.0"></text>
</g>
<g>
<title>java/lang/Double.intValue (5 samples, 0.11%)</title><rect x="1109.5" y="851.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Double.valueOf (1 samples, 0.02%)</title><rect x="1110.9" y="851.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.9" y="862.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (8 samples, 0.18%)</title><rect x="1111.1" y="851.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.1" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1111.9" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1114.9" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1111.9" y="819.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1114.9" y="830.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1112.2" y="835.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.2" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1112.2" y="819.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1112.2" y="803.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.02%)</title><rect x="1112.2" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.2" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.02%)</title><rect x="1112.2" y="771.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.2" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="1112.2" y="755.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.2" y="766.0"></text>
</g>
<g>
<title>G1AllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1112.2" y="739.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.2" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="1112.2" y="723.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.2" y="734.0"></text>
</g>
<g>
<title>G1CollectorPolicy::add_region_to_incremental_cset_lhs(HeapRegion*) (1 samples, 0.02%)</title><rect x="1112.2" y="707.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.2" y="718.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.02%)</title><rect x="1112.2" y="691.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1115.2" y="702.0"></text>
</g>
<g>
<title>java/util/Random.seedUniquifier (3 samples, 0.07%)</title><rect x="1112.4" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.02%)</title><rect x="1113.0" y="819.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.0" y="830.0"></text>
</g>
<g>
<title>java/util/Random.nextFloat (13 samples, 0.29%)</title><rect x="1113.2" y="851.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.2" y="862.0"></text>
</g>
<g>
<title>java/util/Random.next (13 samples, 0.29%)</title><rect x="1113.2" y="835.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.2" y="846.0"></text>
</g>
<g>
<title>hammer/utils$rand_str2.invokeStatic (1 samples, 0.02%)</title><rect x="1116.6" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="1116.9" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1116.9" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.22%)</title><rect x="1117.2" y="883.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.20%)</title><rect x="1117.4" y="867.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.18%)</title><rect x="1117.4" y="851.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (3 samples, 0.07%)</title><rect x="1117.4" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (2 samples, 0.04%)</title><rect x="1117.7" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.deref (5 samples, 0.11%)</title><rect x="1118.2" y="835.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.11%)</title><rect x="1118.2" y="819.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.2" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (4 samples, 0.09%)</title><rect x="1118.5" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.5" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.09%)</title><rect x="1118.5" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.09%)</title><rect x="1118.5" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.5" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1119.0" y="755.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1122.0" y="766.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.defaultCharset (1 samples, 0.02%)</title><rect x="1119.5" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.5" y="862.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (4 samples, 0.09%)</title><rect x="1119.8" y="883.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.8" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1120.1" y="867.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1123.1" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1120.6" y="867.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1123.6" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1120.6" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1123.6" y="862.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (76 samples, 1.69%)</title><rect x="1120.9" y="883.0" width="19.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.9" y="894.0"></text>
</g>
<g>
<title>java/security/SecureRandom.nextBytes (73 samples, 1.63%)</title><rect x="1120.9" y="867.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.9" y="878.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.engineNextBytes (73 samples, 1.63%)</title><rect x="1120.9" y="851.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.9" y="862.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.access$400 (73 samples, 1.63%)</title><rect x="1120.9" y="835.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.9" y="846.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.implNextBytes (72 samples, 1.60%)</title><rect x="1121.1" y="819.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.1" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1122.4" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1125.4" y="814.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.ensureBufferValid (15 samples, 0.33%)</title><rect x="1122.7" y="803.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.7" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1123.2" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.2" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1123.2" y="771.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1126.2" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.readFully (12 samples, 0.27%)</title><rect x="1123.5" y="787.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.5" y="798.0"></text>
</g>
<g>
<title>java/io/FileInputStream.read (12 samples, 0.27%)</title><rect x="1123.5" y="771.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.5" y="782.0"></text>
</g>
<g>
<title>java/io/FileInputStream.readBytes (12 samples, 0.27%)</title><rect x="1123.5" y="755.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.5" y="766.0"></text>
</g>
<g>
<title>readBytes (12 samples, 0.27%)</title><rect x="1123.5" y="739.0" width="3.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1126.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib64/libpthread-2.17.so (11 samples, 0.25%)</title><rect x="1123.5" y="723.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1126.5" y="734.0"></text>
</g>
<g>
<title>system_call_fastpath (11 samples, 0.25%)</title><rect x="1123.5" y="707.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1126.5" y="718.0"></text>
</g>
<g>
<title>sys_read (11 samples, 0.25%)</title><rect x="1123.5" y="691.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.5" y="702.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.25%)</title><rect x="1123.5" y="675.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1126.5" y="686.0"></text>
</g>
<g>
<title>urandom_read (11 samples, 0.25%)</title><rect x="1123.5" y="659.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1126.5" y="670.0"></text>
</g>
<g>
<title>extract_crng (11 samples, 0.25%)</title><rect x="1123.5" y="643.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>_extract_crng (11 samples, 0.25%)</title><rect x="1123.5" y="627.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1126.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.25%)</title><rect x="1123.5" y="611.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.5" y="622.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="1126.4" y="723.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1129.4" y="734.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG$RandomIO.getMixRandom (4 samples, 0.09%)</title><rect x="1126.6" y="803.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.6" y="814.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1127.2" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.2" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.init (2 samples, 0.04%)</title><rect x="1127.2" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.2" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/SecureRandom.engineNextBytes (47 samples, 1.05%)</title><rect x="1127.7" y="803.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.7" y="814.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (32 samples, 0.71%)</title><rect x="1129.8" y="787.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.8" y="798.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (27 samples, 0.60%)</title><rect x="1129.8" y="771.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.8" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (27 samples, 0.60%)</title><rect x="1129.8" y="755.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.8" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (27 samples, 0.60%)</title><rect x="1129.8" y="739.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.8" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implDigest (27 samples, 0.60%)</title><rect x="1129.8" y="723.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.8" y="734.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (3 samples, 0.07%)</title><rect x="1129.8" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.8" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1130.1" y="691.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1133.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1130.3" y="691.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1133.3" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress (23 samples, 0.51%)</title><rect x="1130.6" y="707.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.6" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (2 samples, 0.04%)</title><rect x="1130.6" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.6" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress0 (18 samples, 0.40%)</title><rect x="1131.1" y="691.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.1" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompressCheck (3 samples, 0.07%)</title><rect x="1135.8" y="691.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.8" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (2 samples, 0.04%)</title><rect x="1136.1" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.1" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implCompress0 (1 samples, 0.02%)</title><rect x="1136.6" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.6" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (5 samples, 0.11%)</title><rect x="1136.9" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.9" y="782.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (7 samples, 0.16%)</title><rect x="1138.2" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.2" y="798.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (7 samples, 0.16%)</title><rect x="1138.2" y="771.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.2" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (6 samples, 0.13%)</title><rect x="1138.5" y="755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.5" y="766.0"></text>
</g>
<g>
<title>arrayof_jbyte_fill (2 samples, 0.04%)</title><rect x="1139.3" y="739.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1142.3" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineReset (1 samples, 0.02%)</title><rect x="1139.8" y="739.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.8" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.implReset (1 samples, 0.02%)</title><rect x="1139.8" y="723.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.8" y="734.0"></text>
</g>
<g>
<title>sun/security/provider/SHA.resetHashes (1 samples, 0.02%)</title><rect x="1139.8" y="707.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.8" y="718.0"></text>
</g>
<g>
<title>java/util/UUID.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1140.0" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1140.0" y="851.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1143.0" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1140.3" y="851.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1143.3" y="862.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="1140.6" y="851.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.6" y="862.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1140.8" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1143.8" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (7 samples, 0.16%)</title><rect x="1141.1" y="979.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.1" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.16%)</title><rect x="1141.1" y="963.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.1" y="974.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$5/154075135.run (7 samples, 0.16%)</title><rect x="1141.1" y="947.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.1" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (7 samples, 0.16%)</title><rect x="1141.1" y="931.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.1" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (7 samples, 0.16%)</title><rect x="1141.1" y="915.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.1" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (7 samples, 0.16%)</title><rect x="1141.1" y="899.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.1" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (6 samples, 0.13%)</title><rect x="1141.1" y="883.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.1" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.04%)</title><rect x="1141.4" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.4" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.04%)</title><rect x="1141.4" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.4" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.04%)</title><rect x="1141.4" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.4" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="1141.4" y="819.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.4" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeNonProxyDesc (1 samples, 0.02%)</title><rect x="1141.4" y="803.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.4" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeClassDesc (1 samples, 0.02%)</title><rect x="1141.4" y="787.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.4" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeNonProxyDesc (1 samples, 0.02%)</title><rect x="1141.4" y="771.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.writeNonProxy (1 samples, 0.02%)</title><rect x="1141.4" y="755.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.4" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamField.isPrimitive (1 samples, 0.02%)</title><rect x="1141.4" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.4" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.02%)</title><rect x="1141.6" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.6" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="1141.6" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.6" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1141.6" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.6" y="798.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="1141.6" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.6" y="782.0"></text>
</g>
<g>
<title>sun/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="1141.6" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.writeObject (1 samples, 0.02%)</title><rect x="1141.6" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="1141.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="1141.6" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.02%)</title><rect x="1141.6" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteReplace (1 samples, 0.02%)</title><rect x="1141.6" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.6" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="1141.6" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.6" y="670.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="1141.6" y="643.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1144.6" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (2 samples, 0.04%)</title><rect x="1141.9" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.9" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1141.9" y="851.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.9" y="862.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1141.9" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1141.9" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.verifySubclass (1 samples, 0.02%)</title><rect x="1141.9" y="803.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.9" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="1141.9" y="787.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.9" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="1141.9" y="771.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.9" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.02%)</title><rect x="1141.9" y="755.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.9" y="766.0"></text>
</g>
<g>
<title>sun/misc/ObjectInputFilter$Config.getSerialFilter (1 samples, 0.02%)</title><rect x="1142.1" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.1" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.02%)</title><rect x="1142.4" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.4" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.02%)</title><rect x="1142.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.4" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1142.4" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.4" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1142.4" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.4" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1142.4" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.4" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="1142.4" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.4" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.02%)</title><rect x="1142.4" y="771.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1145.4" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.close (1 samples, 0.02%)</title><rect x="1142.7" y="883.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.7" y="894.0"></text>
</g>
<g>
<title>java/net/Socket.close (1 samples, 0.02%)</title><rect x="1142.7" y="867.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.7" y="878.0"></text>
</g>
<g>
<title>java/net/Socket.isClosed (1 samples, 0.02%)</title><rect x="1142.7" y="851.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.7" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$AcceptLoop.run (1 samples, 0.02%)</title><rect x="1142.9" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.9" y="1022.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$AcceptLoop.executeAcceptLoop (1 samples, 0.02%)</title><rect x="1142.9" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="1142.9" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.02%)</title><rect x="1142.9" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="1142.9" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.02%)</title><rect x="1142.9" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="1142.9" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.9" y="926.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="1142.9" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.9" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="1142.9" y="883.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1145.9" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1142.9" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1145.9" y="878.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1142.9" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.9" y="862.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1142.9" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1145.9" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1142.9" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.9" y="830.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1142.9" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1145.9" y="814.0"></text>
</g>
<g>
<title>start_thread (178 samples, 3.97%)</title><rect x="1143.2" y="1027.0" width="46.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1146.2" y="1038.0">star..</text>
</g>
<g>
<title>java_start(Thread*) (178 samples, 3.97%)</title><rect x="1143.2" y="1011.0" width="46.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1146.2" y="1022.0">java..</text>
</g>
<g>
<title>ConcurrentG1RefineThread::run() (2 samples, 0.04%)</title><rect x="1143.2" y="995.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.2" y="1006.0"></text>
</g>
<g>
<title>ConcurrentG1RefineThread::run_young_rs_sampling() (2 samples, 0.04%)</title><rect x="1143.2" y="979.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.2" y="990.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1143.2" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.2" y="974.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1143.2" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.2" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="1143.2" y="931.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1146.2" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1143.2" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.2" y="926.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1143.2" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.2" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1143.2" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.2" y="894.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1143.2" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.2" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1143.2" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.2" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1143.2" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.2" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1143.2" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1143.2" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.2" y="814.0"></text>
</g>
<g>
<title>YoungList::rs_length_sampling_next() (1 samples, 0.02%)</title><rect x="1143.5" y="963.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.5" y="974.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.02%)</title><rect x="1143.5" y="947.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.5" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (60 samples, 1.34%)</title><rect x="1143.7" y="995.0" width="15.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1006.0"></text>
</g>
<g>
<title>G1ParPreserveCMReferentsTask::work(unsigned int) (9 samples, 0.20%)</title><rect x="1143.7" y="979.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.7" y="990.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.20%)</title><rect x="1143.7" y="963.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.7" y="974.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.04%)</title><rect x="1143.7" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.7" y="958.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.16%)</title><rect x="1144.3" y="947.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1147.3" y="958.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) [clone .part.432] (50 samples, 1.11%)</title><rect x="1146.1" y="979.0" width="13.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.1" y="990.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (27 samples, 0.60%)</title><rect x="1146.1" y="963.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.1" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="1146.1" y="947.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.1" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.02%)</title><rect x="1146.1" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.1" y="942.0"></text>
</g>
<g>
<title>void G1ParScanClosure::do_oop_nv&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1146.4" y="931.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.4" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.22%)</title><rect x="1146.6" y="947.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.6" y="958.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.09%)</title><rect x="1147.4" y="931.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.4" y="942.0"></text>
</g>
<g>
<title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="1148.5" y="931.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1151.5" y="942.0"></text>
</g>
<g>
<title>void G1ParScanClosure::do_oop_nv&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.04%)</title><rect x="1148.7" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.7" y="942.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.11%)</title><rect x="1149.2" y="947.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.2" y="958.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.22%)</title><rect x="1150.6" y="947.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1153.6" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, bool, unsigned int) (13 samples, 0.29%)</title><rect x="1153.2" y="963.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.2" y="974.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (6 samples, 0.13%)</title><rect x="1153.2" y="947.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="958.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (6 samples, 0.13%)</title><rect x="1153.2" y="931.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.2" y="942.0"></text>
</g>
<g>
<title>G1KlassScanClosure::do_klass(Klass*) (6 samples, 0.13%)</title><rect x="1153.2" y="915.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.2" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(OopClosure*, OopClosure*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1154.8" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.8" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::roots_oops_do(OopClosure*, OopClosure*) (2 samples, 0.04%)</title><rect x="1154.8" y="931.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.8" y="942.0"></text>
</g>
<g>
<title>Dictionary::roots_oops_do(OopClosure*, OopClosure*) (2 samples, 0.04%)</title><rect x="1154.8" y="915.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.8" y="926.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopClosure*) (5 samples, 0.11%)</title><rect x="1155.3" y="947.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.3" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (10 samples, 0.22%)</title><rect x="1156.6" y="963.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (10 samples, 0.22%)</title><rect x="1156.6" y="947.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.6" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (9 samples, 0.20%)</title><rect x="1156.6" y="931.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.6" y="942.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (9 samples, 0.20%)</title><rect x="1156.6" y="915.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="926.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer_helper(CardTableEntryClosure*, unsigned int, BufferNode*) (9 samples, 0.20%)</title><rect x="1156.6" y="899.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.6" y="910.0"></text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.20%)</title><rect x="1156.6" y="883.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.6" y="894.0"></text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) [clone .part.174] (9 samples, 0.20%)</title><rect x="1156.6" y="867.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.6" y="878.0"></text>
</g>
<g>
<title>HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*) (8 samples, 0.18%)</title><rect x="1156.9" y="851.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.9" y="862.0"></text>
</g>
<g>
<title>G1BlockOffsetArray::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1156.9" y="835.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.9" y="846.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1156.9" y="819.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.9" y="830.0"></text>
</g>
<g>
<title>HeapRegion::block_is_obj(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1156.9" y="803.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.9" y="814.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.07%)</title><rect x="1157.1" y="835.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (2 samples, 0.04%)</title><rect x="1157.9" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.9" y="846.0"></text>
</g>
<g>
<title>G1Mux2Closure::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1158.2" y="819.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.2" y="830.0"></text>
</g>
<g>
<title>G1InvokeIfNotTriggeredClosure::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1158.2" y="803.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.2" y="814.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (1 samples, 0.02%)</title><rect x="1158.4" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.4" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*) (1 samples, 0.02%)</title><rect x="1158.4" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.4" y="830.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_oop_iterate_nv_m(oopDesc*, FilterOutOfRegionClosure*, MemRegion) (1 samples, 0.02%)</title><rect x="1158.7" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.7" y="846.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, int) (1 samples, 0.02%)</title><rect x="1158.7" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scanRS(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1159.0" y="931.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.0" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::collection_set_iterate_from(HeapRegion*, HeapRegionClosure*) (1 samples, 0.02%)</title><rect x="1159.0" y="915.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.0" y="926.0"></text>
</g>
<g>
<title>ScanRSClosure::doHeapRegion(HeapRegion*) (1 samples, 0.02%)</title><rect x="1159.0" y="899.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.0" y="910.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.02%)</title><rect x="1159.0" y="883.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.0" y="894.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.02%)</title><rect x="1159.0" y="867.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.0" y="878.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1159.0" y="851.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.0" y="862.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.02%)</title><rect x="1159.0" y="835.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.0" y="846.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.02%)</title><rect x="1159.0" y="819.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.0" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1159.2" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1162.2" y="990.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1159.2" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1162.2" y="974.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1159.2" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.2" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1159.2" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.2" y="942.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.02%)</title><rect x="1159.2" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.2" y="926.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1159.2" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.2" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1159.2" y="883.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.2" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1159.2" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.2" y="878.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (111 samples, 2.47%)</title><rect x="1159.5" y="995.0" width="29.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.5" y="1006.0">Ja..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (110 samples, 2.45%)</title><rect x="1159.5" y="979.0" width="28.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.5" y="990.0">Co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (104 samples, 2.32%)</title><rect x="1159.5" y="963.0" width="27.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.5" y="974.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (88 samples, 1.96%)</title><rect x="1159.5" y="947.0" width="23.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.5" y="958.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (88 samples, 1.96%)</title><rect x="1159.5" y="931.0" width="23.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.5" y="942.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (51 samples, 1.14%)</title><rect x="1159.5" y="915.0" width="13.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.5" y="926.0"></text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.11%)</title><rect x="1159.5" y="899.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.5" y="910.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (5 samples, 0.11%)</title><rect x="1159.5" y="883.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.5" y="894.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (4 samples, 0.09%)</title><rect x="1159.5" y="867.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.5" y="878.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (4 samples, 0.09%)</title><rect x="1159.5" y="851.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.5" y="862.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (4 samples, 0.09%)</title><rect x="1159.5" y="835.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.5" y="846.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (4 samples, 0.09%)</title><rect x="1159.5" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.5" y="830.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (4 samples, 0.09%)</title><rect x="1159.5" y="803.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.5" y="814.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="1160.6" y="867.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.6" y="878.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.02%)</title><rect x="1160.6" y="851.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.6" y="862.0"></text>
</g>
<g>
<title>MachOper::reg(PhaseRegAlloc*, Node const*, int) const (1 samples, 0.02%)</title><rect x="1160.6" y="835.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.6" y="846.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.04%)</title><rect x="1160.8" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.8" y="910.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.02%)</title><rect x="1161.1" y="883.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.1" y="894.0"></text>
</g>
<g>
<title>MachNode::peephole(Block*, int, PhaseRegAlloc*, int&amp;, Compile*) (1 samples, 0.02%)</title><rect x="1161.3" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.3" y="910.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.11%)</title><rect x="1161.6" y="899.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.6" y="910.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.11%)</title><rect x="1161.6" y="883.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.6" y="894.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.07%)</title><rect x="1161.9" y="867.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.9" y="878.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1161.9" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.9" y="862.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1161.9" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.9" y="846.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1161.9" y="819.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.9" y="830.0"></text>
</g>
<g>
<title>CastP2XNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1161.9" y="803.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.9" y="814.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1162.1" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.1" y="830.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.02%)</title><rect x="1162.1" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.1" y="814.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.02%)</title><rect x="1162.4" y="851.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.4" y="862.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int, Compile*) (1 samples, 0.02%)</title><rect x="1162.4" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.4" y="846.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="1162.7" y="867.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.7" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.02%)</title><rect x="1162.9" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.9" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.02%)</title><rect x="1162.9" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.9" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.09%)</title><rect x="1163.2" y="899.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.2" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.02%)</title><rect x="1163.2" y="883.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.2" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.02%)</title><rect x="1163.2" y="867.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.2" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.07%)</title><rect x="1163.4" y="883.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.4" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.02%)</title><rect x="1163.7" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.7" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1164.0" y="867.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::needed_for_next_call(Block*, Node*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1164.0" y="851.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.0" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::set_next_call(Block*, Node*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1164.0" y="835.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.0" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (33 samples, 0.74%)</title><rect x="1164.2" y="899.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.2" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.04%)</title><rect x="1164.2" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.2" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1164.2" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.2" y="878.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.02%)</title><rect x="1164.5" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.5" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.04%)</title><rect x="1164.8" y="883.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.8" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1165.0" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.0" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.11%)</title><rect x="1165.3" y="883.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.3" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.11%)</title><rect x="1166.6" y="883.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.6" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1167.1" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.1" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="1167.7" y="867.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.7" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.02%)</title><rect x="1167.9" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.9" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="1167.9" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.02%)</title><rect x="1168.2" y="883.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.2" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.215] (3 samples, 0.07%)</title><rect x="1168.4" y="883.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.4" y="894.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.02%)</title><rect x="1168.7" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.7" y="878.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1169.0" y="867.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.04%)</title><rect x="1169.2" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.2" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.07%)</title><rect x="1169.8" y="883.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.8" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.04%)</title><rect x="1170.0" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.0" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.02%)</title><rect x="1170.5" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.5" y="894.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.02%)</title><rect x="1170.8" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.8" y="894.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1170.8" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.8" y="878.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.02%)</title><rect x="1170.8" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.8" y="862.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="1170.8" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.8" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.02%)</title><rect x="1171.1" y="883.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.1" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1171.1" y="867.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.1" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1171.3" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.3" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1171.3" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.3" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="1171.6" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="1171.6" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.6" y="878.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.07%)</title><rect x="1171.9" y="883.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.9" y="894.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.04%)</title><rect x="1172.1" y="867.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.1" y="878.0"></text>
</g>
<g>
<title>loadPNode::oper_input_base() const (1 samples, 0.02%)</title><rect x="1172.6" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.6" y="894.0"></text>
</g>
<g>
<title>Compile::Init(int) (1 samples, 0.02%)</title><rect x="1172.9" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.9" y="926.0"></text>
</g>
<g>
<title>Dependencies::initialize(ciEnv*) (1 samples, 0.02%)</title><rect x="1172.9" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.9" y="910.0"></text>
</g>
<g>
<title>Compile::Optimize() (22 samples, 0.49%)</title><rect x="1173.2" y="915.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.2" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.04%)</title><rect x="1173.2" y="899.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.04%)</title><rect x="1173.2" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.2" y="894.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.02%)</title><rect x="1173.7" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.7" y="910.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.02%)</title><rect x="1174.0" y="899.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.0" y="910.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.02%)</title><rect x="1174.0" y="883.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.0" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (15 samples, 0.33%)</title><rect x="1174.2" y="899.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.2" y="910.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.04%)</title><rect x="1174.2" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.2" y="894.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.04%)</title><rect x="1174.2" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.2" y="878.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="1174.2" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.2" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::replace_parallel_iv(IdealLoopTree*) (1 samples, 0.02%)</title><rect x="1174.2" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::replace_parallel_iv(IdealLoopTree*) (1 samples, 0.02%)</title><rect x="1174.5" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.5" y="862.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const (1 samples, 0.02%)</title><rect x="1174.5" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.5" y="846.0"></text>
</g>
<g>
<title>CountedLoopEndNode::Opcode() const (1 samples, 0.02%)</title><rect x="1174.5" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.5" y="830.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.02%)</title><rect x="1174.8" y="883.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.8" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.04%)</title><rect x="1175.0" y="883.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.0" y="894.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1175.3" y="867.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.3" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1175.5" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.5" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1175.8" y="883.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.8" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.04%)</title><rect x="1176.1" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.1" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1176.1" y="851.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.1" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="1176.3" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.3" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.02%)</title><rect x="1176.6" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.6" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.07%)</title><rect x="1176.9" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.9" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.02%)</title><rect x="1177.4" y="867.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.4" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1177.6" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.6" y="894.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.02%)</title><rect x="1177.9" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.9" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1178.2" y="899.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.2" y="910.0"></text>
</g>
<g>
<title>CProjNode::hash() const (1 samples, 0.02%)</title><rect x="1178.2" y="883.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.2" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1178.4" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.4" y="894.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1178.4" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="878.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1178.4" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.4" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1178.7" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.02%)</title><rect x="1178.7" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.7" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.31%)</title><rect x="1179.0" y="915.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.0" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.31%)</title><rect x="1179.0" y="899.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.31%)</title><rect x="1179.0" y="883.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.31%)</title><rect x="1179.0" y="867.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.31%)</title><rect x="1179.0" y="851.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.0" y="862.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.02%)</title><rect x="1179.0" y="835.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.0" y="846.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1179.0" y="819.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="830.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1179.0" y="803.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="814.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.02%)</title><rect x="1179.0" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.27%)</title><rect x="1179.2" y="835.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.2" y="846.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1179.2" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1179.2" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.02%)</title><rect x="1179.2" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1179.2" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>ciInstanceKlass::unique_concrete_subklass() (1 samples, 0.02%)</title><rect x="1179.2" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>Klass::up_cast_abstract() (1 samples, 0.02%)</title><rect x="1179.2" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.20%)</title><rect x="1179.5" y="819.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.20%)</title><rect x="1179.5" y="803.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.20%)</title><rect x="1179.5" y="787.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.20%)</title><rect x="1179.5" y="771.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.20%)</title><rect x="1179.5" y="755.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.16%)</title><rect x="1179.5" y="739.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1179.5" y="723.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1179.5" y="707.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1179.5" y="691.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1179.5" y="675.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1179.5" y="659.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.11%)</title><rect x="1179.5" y="643.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.11%)</title><rect x="1179.5" y="627.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.11%)</title><rect x="1179.5" y="611.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1179.5" y="595.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1179.5" y="579.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1179.5" y="563.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1179.5" y="547.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.5" y="558.0"></text>
</g>
<g>
<title>Compile::optimize_inlining(ciMethod*, int, ciInstanceKlass*, ciMethod*, TypeOopPtr const*, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="531.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.5" y="542.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="515.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.5" y="526.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="499.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.5" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="483.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.5" y="494.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.02%)</title><rect x="1179.5" y="467.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.5" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="1179.5" y="451.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.5" y="462.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, char const*, Thread*) (1 samples, 0.02%)</title><rect x="1179.5" y="435.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.5" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1179.7" y="531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.7" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1179.7" y="515.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.7" y="526.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1180.0" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.0" y="510.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293] (1 samples, 0.02%)</title><rect x="1180.0" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.0" y="494.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1180.0" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.0" y="478.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.02%)</title><rect x="1180.0" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.0" y="462.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.02%)</title><rect x="1180.0" y="435.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1183.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1180.3" y="499.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1180.3" y="483.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1180.3" y="467.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="478.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="1180.3" y="451.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.3" y="462.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.02%)</title><rect x="1180.3" y="435.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.3" y="446.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1180.3" y="419.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="430.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1180.3" y="403.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="414.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1180.3" y="387.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.3" y="398.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1180.3" y="371.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.3" y="382.0"></text>
</g>
<g>
<title>__pthread_getspecific (1 samples, 0.02%)</title><rect x="1180.3" y="355.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1183.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.02%)</title><rect x="1180.5" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.5" y="606.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1180.5" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.5" y="590.0"></text>
</g>
<g>
<title>MulNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1180.5" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.5" y="574.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1180.5" y="547.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.5" y="558.0"></text>
</g>
<g>
<title>TypeInt::eq(Type const*) const (1 samples, 0.02%)</title><rect x="1180.5" y="531.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.02%)</title><rect x="1180.8" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="654.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.02%)</title><rect x="1180.8" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="638.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool) (1 samples, 0.02%)</title><rect x="1180.8" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="622.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1180.8" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="606.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1180.8" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="590.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.326] (1 samples, 0.02%)</title><rect x="1180.8" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1181.1" y="643.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.1" y="654.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1181.1" y="627.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.3" y="734.0"></text>
</g>
<g>
<title>GraphKit::store_oop(Node*, Node*, Node*, TypePtr const*, Node*, TypeOopPtr const*, BasicType, bool, MemNode::MemOrd, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.3" y="718.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="691.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1181.3" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>TypeOopPtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1181.3" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.3" y="654.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1181.3" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>pthread_getspecific@plt (1 samples, 0.02%)</title><rect x="1181.3" y="611.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1184.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1181.6" y="739.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.6" y="750.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.02%)</title><rect x="1181.6" y="723.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="734.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="1181.6" y="707.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1181.8" y="819.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1181.8" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1181.8" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1181.8" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1181.8" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1181.8" y="739.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1181.8" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1181.8" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1181.8" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1181.8" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.02%)</title><rect x="1181.8" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.8" y="670.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.02%)</title><rect x="1181.8" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle, Thread*) (1 samples, 0.02%)</title><rect x="1181.8" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (1 samples, 0.02%)</title><rect x="1181.8" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.1" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.1" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.1" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.1" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.1" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.1" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.1" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1182.1" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="622.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="595.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.1" y="606.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1182.1" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.1" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1182.1" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.1" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1182.1" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.1" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1182.1" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.1" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1182.1" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1182.1" y="499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.1" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1182.1" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.1" y="494.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.1" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1182.1" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.1" y="462.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1182.1" y="435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.1" y="446.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1182.1" y="419.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.1" y="430.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.02%)</title><rect x="1182.1" y="403.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1182.4" y="835.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1182.4" y="819.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.4" y="830.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.02%)</title><rect x="1182.4" y="803.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.4" y="814.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1182.4" y="787.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.4" y="798.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.02%)</title><rect x="1182.4" y="771.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int) (1 samples, 0.02%)</title><rect x="1182.4" y="755.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="766.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.02%)</title><rect x="1182.4" y="739.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.02%)</title><rect x="1182.4" y="723.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.02%)</title><rect x="1182.4" y="707.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="1182.4" y="691.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.02%)</title><rect x="1182.4" y="675.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.4" y="686.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol*) (1 samples, 0.02%)</title><rect x="1182.4" y="659.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (15 samples, 0.33%)</title><rect x="1182.6" y="947.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.6" y="958.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (15 samples, 0.33%)</title><rect x="1182.6" y="931.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.6" y="942.0"></text>
</g>
<g>
<title>Compilation::compile_method() (15 samples, 0.33%)</title><rect x="1182.6" y="915.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.6" y="926.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (13 samples, 0.29%)</title><rect x="1182.6" y="899.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="910.0"></text>
</g>
<g>
<title>Compilation::build_hir() (7 samples, 0.16%)</title><rect x="1182.6" y="883.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.6" y="894.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (6 samples, 0.13%)</title><rect x="1182.6" y="867.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.6" y="878.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (6 samples, 0.13%)</title><rect x="1182.6" y="851.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.6" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (6 samples, 0.13%)</title><rect x="1182.6" y="835.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.6" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.13%)</title><rect x="1182.6" y="819.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.6" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.13%)</title><rect x="1182.6" y="803.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.6" y="814.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) (1 samples, 0.02%)</title><rect x="1182.6" y="787.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.6" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.11%)</title><rect x="1182.9" y="787.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (4 samples, 0.09%)</title><rect x="1182.9" y="771.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (4 samples, 0.09%)</title><rect x="1182.9" y="755.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1182.9" y="739.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.9" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1182.9" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.9" y="734.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) (1 samples, 0.02%)</title><rect x="1182.9" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1183.2" y="707.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.2" y="718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1183.2" y="691.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.2" y="675.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.2" y="659.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.2" y="670.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1183.2" y="643.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.02%)</title><rect x="1183.2" y="627.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.2" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, KlassHandle&amp;, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="611.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.2" y="622.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="595.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.2" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="579.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.2" y="590.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, char const*, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="563.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.2" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="547.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.2" y="558.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="531.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.2" y="542.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1183.2" y="515.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.2" y="526.0"></text>
</g>
<g>
<title>Symbol::equals(char const*, int) const (1 samples, 0.02%)</title><rect x="1183.2" y="499.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.2" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1183.4" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.4" y="750.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.02%)</title><rect x="1183.4" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.4" y="734.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.02%)</title><rect x="1183.4" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.4" y="718.0"></text>
</g>
<g>
<title>BitMap::BitMap(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1183.4" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.4" y="702.0"></text>
</g>
<g>
<title>MethodData::profile_arguments() (1 samples, 0.02%)</title><rect x="1183.7" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.7" y="750.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1184.0" y="771.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.0" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.0" y="755.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.0" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.0" y="739.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.0" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.0" y="723.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.0" y="707.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.0" y="718.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.0" y="691.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="702.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.02%)</title><rect x="1184.0" y="675.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="686.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.02%)</title><rect x="1184.2" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1184.2" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 0.02%)</title><rect x="1184.2" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_dominator(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1184.2" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (6 samples, 0.13%)</title><rect x="1184.5" y="883.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.5" y="894.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (6 samples, 0.13%)</title><rect x="1184.5" y="867.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.02%)</title><rect x="1184.5" y="851.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.5" y="862.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.02%)</title><rect x="1184.5" y="835.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.02%)</title><rect x="1184.5" y="819.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.5" y="830.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.02%)</title><rect x="1184.5" y="803.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.5" y="814.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.02%)</title><rect x="1184.5" y="787.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.02%)</title><rect x="1184.7" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.02%)</title><rect x="1184.7" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1184.7" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (3 samples, 0.07%)</title><rect x="1185.0" y="851.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.02%)</title><rect x="1185.3" y="835.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="846.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.02%)</title><rect x="1185.5" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.5" y="846.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.02%)</title><rect x="1185.8" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.8" y="862.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (2 samples, 0.04%)</title><rect x="1186.1" y="899.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="910.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (2 samples, 0.04%)</title><rect x="1186.1" y="883.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="894.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (2 samples, 0.04%)</title><rect x="1186.1" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.1" y="878.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (2 samples, 0.04%)</title><rect x="1186.1" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.1" y="862.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long, bool) (2 samples, 0.04%)</title><rect x="1186.1" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="846.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.02%)</title><rect x="1186.6" y="947.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.02%)</title><rect x="1186.6" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.02%)</title><rect x="1186.6" y="915.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::is_scavengable(void const*) (1 samples, 0.02%)</title><rect x="1186.6" y="899.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>CompileQueue::get() (6 samples, 0.13%)</title><rect x="1186.8" y="963.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="958.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (5 samples, 0.11%)</title><rect x="1187.1" y="947.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (5 samples, 0.11%)</title><rect x="1187.1" y="931.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (1 samples, 0.02%)</title><rect x="1187.1" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.02%)</title><rect x="1187.1" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (4 samples, 0.09%)</title><rect x="1187.4" y="915.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>NMethodSweeper::release_nmethod(nmethod*) (1 samples, 0.02%)</title><rect x="1187.6" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>CompiledIC::cleanup_call_site(virtual_call_Relocation*) (1 samples, 0.02%)</title><rect x="1187.6" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>CompiledIC::is_icholder_entry(unsigned char*) (1 samples, 0.02%)</title><rect x="1187.6" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.02%)</title><rect x="1187.6" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.02%)</title><rect x="1187.9" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>nmethod::make_not_entrant_or_zombie(unsigned int) (1 samples, 0.02%)</title><rect x="1188.2" y="899.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="910.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_unload() [clone .part.164] (1 samples, 0.02%)</title><rect x="1188.2" y="883.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1188.2" y="867.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.2" y="878.0"></text>
</g>
<g>
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1188.2" y="851.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.2" y="862.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1188.2" y="835.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1188.2" y="819.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.2" y="830.0"></text>
</g>
<g>
<title>futex_wake_op (1 samples, 0.02%)</title><rect x="1188.2" y="803.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1188.2" y="787.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1188.2" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1188.2" y="755.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="1188.4" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.4" y="990.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1188.4" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="974.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1188.4" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1188.4" y="931.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.4" y="942.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.09%)</title><rect x="1188.7" y="995.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.09%)</title><rect x="1188.7" y="979.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="990.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.02%)</title><rect x="1188.7" y="963.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="974.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.04%)</title><rect x="1188.9" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="974.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.04%)</title><rect x="1188.9" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.9" y="958.0"></text>
</g>
<g>
<title>NMethodSweeper::mark_active_nmethods() (2 samples, 0.04%)</title><rect x="1188.9" y="931.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.9" y="942.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1188.9" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1188.9" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.9" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1188.9" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.02%)</title><rect x="1188.9" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.02%)</title><rect x="1189.2" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.02%)</title><rect x="1189.5" y="963.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="974.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.5" y="947.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="958.0"></text>
</g>
<g>
<title>VM_G1IncCollectionPause::doit() (1 samples, 0.02%)</title><rect x="1189.5" y="931.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.5" y="915.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(HeapRegion*, EvacuationInfo&amp;) (1 samples, 0.02%)</title><rect x="1189.5" y="899.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*, bool, bool) (1 samples, 0.02%)</title><rect x="1189.5" y="883.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>HeapRegion::hr_clear(bool, bool, bool) (1 samples, 0.02%)</title><rect x="1189.5" y="867.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked() (1 samples, 0.02%)</title><rect x="1189.5" y="851.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>OtherRegionsTable::clear() (1 samples, 0.02%)</title><rect x="1189.5" y="835.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>SparsePRT::clear() (1 samples, 0.02%)</title><rect x="1189.5" y="819.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>RSHashTable::clear() (1 samples, 0.02%)</title><rect x="1189.5" y="803.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
</g>
</svg>
